# Makefile.in generated by automake 1.11 from Makefile.am.
# modules/gui/skins2/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# modules/gui/skins2/Makefile.am automatically generated from modules/gui/skins2/Modules.am by modules/genmf
# DO NOT EDIT THIS FILE DIRECTLY! See Modules.am instead.

# Common code for VLC modules/.../Makefile.am
#
# Copyright (C) 2005-2007 the VideoLAN team
# Copyright (C) 2005-2008 RÃ©mi Denis-Courmont
#
# Authors: Sam Hocevar <sam@zoy.org>


pkgdatadir = $(datadir)/vlc
pkgincludedir = $(includedir)/vlc
pkglibdir = $(libdir)/vlc
pkglibexecdir = $(libexecdir)/vlc
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i386-pc-linux-gnu
host_triplet = i586-pc-mingw32msvc
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/Modules.am $(top_srcdir)/modules/common.am
am__append_1 = \
	win32/win32_dragdrop.cpp \
	win32/win32_dragdrop.hpp \
	win32/win32_factory.cpp \
	win32/win32_factory.hpp \
	win32/win32_graphics.cpp \
	win32/win32_graphics.hpp \
	win32/win32_loop.cpp \
	win32/win32_loop.hpp \
	win32/win32_popup.cpp \
	win32/win32_popup.hpp \
	win32/win32_timer.cpp \
	win32/win32_timer.hpp \
	win32/win32_tooltip.cpp \
	win32/win32_tooltip.hpp \
	win32/win32_window.cpp \
	win32/win32_window.hpp \
    $(NULL)

##am__append_2 = \
##	macosx/macosx_dragdrop.cpp \
##	macosx/macosx_dragdrop.hpp \
##	macosx/macosx_factory.cpp \
##	macosx/macosx_factory.hpp \
##	macosx/macosx_graphics.cpp \
##	macosx/macosx_graphics.hpp \
##	macosx/macosx_loop.cpp \
##	macosx/macosx_loop.hpp \
##	macosx/macosx_popup.cpp \
##	macosx/macosx_popup.hpp \
##	macosx/macosx_timer.cpp \
##	macosx/macosx_timer.hpp \
##	macosx/macosx_window.cpp \
##	macosx/macosx_window.hpp \
##	macosx/macosx_tooltip.cpp \
##	macosx/macosx_tooltip.hpp \
##    $(NULL)

#am__append_3 = \
#	x11/x11_display.cpp \
#	x11/x11_display.hpp \
#	x11/x11_dragdrop.cpp \
#	x11/x11_dragdrop.hpp \
#	x11/x11_factory.cpp \
#	x11/x11_factory.hpp \
#	x11/x11_graphics.cpp \
#	x11/x11_graphics.hpp \
#	x11/x11_loop.cpp \
#	x11/x11_loop.hpp \
#	x11/x11_popup.cpp \
#	x11/x11_popup.hpp \
#	x11/x11_timer.cpp \
#	x11/x11_timer.hpp \
#	x11/x11_window.cpp \
#	x11/x11_window.hpp \
#	x11/x11_tooltip.cpp \
#	x11/x11_tooltip.hpp \
#    $(NULL)

subdir = modules/gui/skins2
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/flags.m4 \
	$(top_srcdir)/m4/gettext.m4 $(top_srcdir)/m4/iconv.m4 \
	$(top_srcdir)/m4/intlmacosx.m4 $(top_srcdir)/m4/lib-ld.m4 \
	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/nls.m4 \
	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/m4/po.m4 \
	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/m4/vlc.m4 \
	$(top_srcdir)/m4/with_pkg.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libvlcdir)"
LTLIBRARIES = $(libvlc_LTLIBRARIES)
am__DEPENDENCIES_1 = `$(VLC_CONFIG) plugin $@` $(LTLIBVLCCORE) \
	$(top_builddir)/compat/libcompat.la
am__libskins2_plugin_la_SOURCES_DIST = commands/async_queue.cpp \
	commands/async_queue.hpp commands/cmd_add_item.cpp \
	commands/cmd_add_item.hpp commands/cmd_audio.cpp \
	commands/cmd_audio.hpp commands/cmd_dummy.hpp \
	commands/cmd_dvd.cpp commands/cmd_dvd.hpp \
	commands/cmd_generic.hpp commands/cmd_callbacks.hpp \
	commands/cmd_change_skin.cpp commands/cmd_change_skin.hpp \
	commands/cmd_dialogs.hpp commands/cmd_fullscreen.cpp \
	commands/cmd_fullscreen.hpp commands/cmd_input.cpp \
	commands/cmd_input.hpp commands/cmd_layout.cpp \
	commands/cmd_layout.hpp commands/cmd_muxer.cpp \
	commands/cmd_muxer.hpp commands/cmd_on_top.cpp \
	commands/cmd_on_top.hpp commands/cmd_playlist.cpp \
	commands/cmd_playlist.hpp commands/cmd_playtree.cpp \
	commands/cmd_playtree.hpp commands/cmd_minimize.cpp \
	commands/cmd_minimize.hpp commands/cmd_quit.cpp \
	commands/cmd_quit.hpp commands/cmd_resize.cpp \
	commands/cmd_resize.hpp commands/cmd_voutwindow.cpp \
	commands/cmd_voutwindow.hpp commands/cmd_snapshot.cpp \
	commands/cmd_snapshot.hpp commands/cmd_show_window.hpp \
	commands/cmd_vars.cpp commands/cmd_vars.hpp \
	controls/ctrl_button.cpp controls/ctrl_button.hpp \
	controls/ctrl_checkbox.cpp controls/ctrl_checkbox.hpp \
	controls/ctrl_flat.hpp controls/ctrl_generic.cpp \
	controls/ctrl_generic.hpp controls/ctrl_image.cpp \
	controls/ctrl_image.hpp controls/ctrl_list.cpp \
	controls/ctrl_list.hpp controls/ctrl_tree.cpp \
	controls/ctrl_tree.hpp controls/ctrl_move.cpp \
	controls/ctrl_move.hpp controls/ctrl_resize.cpp \
	controls/ctrl_resize.hpp controls/ctrl_slider.cpp \
	controls/ctrl_slider.hpp controls/ctrl_radialslider.cpp \
	controls/ctrl_radialslider.hpp controls/ctrl_text.hpp \
	controls/ctrl_text.cpp controls/ctrl_video.cpp \
	controls/ctrl_video.hpp events/evt_enter.hpp \
	events/evt_focus.hpp events/evt_generic.hpp \
	events/evt_input.cpp events/evt_input.hpp events/evt_key.cpp \
	events/evt_key.hpp events/evt_leave.hpp events/evt_menu.hpp \
	events/evt_motion.hpp events/evt_mouse.cpp \
	events/evt_mouse.hpp events/evt_refresh.hpp \
	events/evt_special.cpp events/evt_special.hpp \
	events/evt_scroll.cpp events/evt_scroll.hpp parser/builder.cpp \
	parser/builder.hpp parser/builder_data.hpp \
	parser/expr_evaluator.cpp parser/expr_evaluator.hpp \
	parser/interpreter.cpp parser/interpreter.hpp \
	parser/skin_parser.cpp parser/skin_parser.hpp \
	parser/xmlparser.cpp parser/xmlparser.hpp src/anchor.cpp \
	src/anchor.hpp src/anim_bitmap.cpp src/anim_bitmap.hpp \
	src/bitmap_font.cpp src/bitmap_font.hpp src/dialogs.cpp \
	src/dialogs.hpp src/file_bitmap.cpp src/file_bitmap.hpp \
	src/art_bitmap.cpp src/art_bitmap.hpp src/ft2_bitmap.cpp \
	src/ft2_bitmap.hpp src/ft2_font.cpp src/ft2_font.hpp \
	src/ft2_err.c src/ft2_err.h src/generic_bitmap.cpp \
	src/generic_bitmap.hpp src/generic_font.hpp \
	src/generic_layout.cpp src/generic_layout.hpp \
	src/generic_window.cpp src/generic_window.hpp src/ini_file.cpp \
	src/ini_file.hpp src/logger.cpp src/logger.hpp \
	src/os_factory.cpp src/os_factory.hpp src/os_graphics.hpp \
	src/os_loop.hpp src/os_popup.hpp src/os_timer.hpp \
	src/os_window.hpp src/os_tooltip.hpp src/popup.cpp \
	src/popup.hpp src/scaled_bitmap.cpp src/scaled_bitmap.hpp \
	src/skin_main.cpp src/skin_common.hpp src/theme.cpp \
	src/theme.hpp src/theme_loader.cpp src/theme_loader.hpp \
	src/theme_repository.cpp src/theme_repository.hpp \
	src/tooltip.cpp src/tooltip.hpp src/top_window.cpp \
	src/top_window.hpp src/var_manager.cpp src/var_manager.hpp \
	src/vlcproc.cpp src/vlcproc.hpp src/vout_window.cpp \
	src/vout_window.hpp src/vout_manager.cpp src/vout_manager.hpp \
	src/window_manager.cpp src/window_manager.hpp utils/bezier.cpp \
	utils/bezier.hpp utils/fsm.cpp utils/fsm.hpp \
	utils/observer.hpp utils/pointer.hpp utils/position.cpp \
	utils/position.hpp utils/ustring.cpp utils/ustring.hpp \
	utils/variable.hpp utils/var_bool.cpp utils/var_bool.hpp \
	utils/var_list.cpp utils/var_list.hpp utils/var_percent.cpp \
	utils/var_percent.hpp utils/var_text.cpp utils/var_text.hpp \
	utils/var_string.cpp utils/var_string.hpp utils/var_tree.cpp \
	utils/var_tree.hpp vars/equalizer.cpp vars/equalizer.hpp \
	vars/playtree.cpp vars/playtree.hpp vars/time.cpp \
	vars/time.hpp vars/volume.cpp vars/volume.hpp \
	win32/win32_dragdrop.cpp win32/win32_dragdrop.hpp \
	win32/win32_factory.cpp win32/win32_factory.hpp \
	win32/win32_graphics.cpp win32/win32_graphics.hpp \
	win32/win32_loop.cpp win32/win32_loop.hpp \
	win32/win32_popup.cpp win32/win32_popup.hpp \
	win32/win32_timer.cpp win32/win32_timer.hpp \
	win32/win32_tooltip.cpp win32/win32_tooltip.hpp \
	win32/win32_window.cpp win32/win32_window.hpp \
	macosx/macosx_dragdrop.cpp macosx/macosx_dragdrop.hpp \
	macosx/macosx_factory.cpp macosx/macosx_factory.hpp \
	macosx/macosx_graphics.cpp macosx/macosx_graphics.hpp \
	macosx/macosx_loop.cpp macosx/macosx_loop.hpp \
	macosx/macosx_popup.cpp macosx/macosx_popup.hpp \
	macosx/macosx_timer.cpp macosx/macosx_timer.hpp \
	macosx/macosx_window.cpp macosx/macosx_window.hpp \
	macosx/macosx_tooltip.cpp macosx/macosx_tooltip.hpp \
	x11/x11_display.cpp x11/x11_display.hpp x11/x11_dragdrop.cpp \
	x11/x11_dragdrop.hpp x11/x11_factory.cpp x11/x11_factory.hpp \
	x11/x11_graphics.cpp x11/x11_graphics.hpp x11/x11_loop.cpp \
	x11/x11_loop.hpp x11/x11_popup.cpp x11/x11_popup.hpp \
	x11/x11_timer.cpp x11/x11_timer.hpp x11/x11_window.cpp \
	x11/x11_window.hpp x11/x11_tooltip.cpp x11/x11_tooltip.hpp
am__objects_1 =
am__objects_2 =  \
	libskins2_plugin_la-win32_dragdrop.lo \
	libskins2_plugin_la-win32_factory.lo \
	libskins2_plugin_la-win32_graphics.lo \
	libskins2_plugin_la-win32_loop.lo \
	libskins2_plugin_la-win32_popup.lo \
	libskins2_plugin_la-win32_timer.lo \
	libskins2_plugin_la-win32_tooltip.lo \
	libskins2_plugin_la-win32_window.lo \
	$(am__objects_1)
##am__objects_3 = libskins2_plugin_la-macosx_dragdrop.lo \
##	libskins2_plugin_la-macosx_factory.lo \
##	libskins2_plugin_la-macosx_graphics.lo \
##	libskins2_plugin_la-macosx_loop.lo \
##	libskins2_plugin_la-macosx_popup.lo \
##	libskins2_plugin_la-macosx_timer.lo \
##	libskins2_plugin_la-macosx_window.lo \
##	libskins2_plugin_la-macosx_tooltip.lo \
##	$(am__objects_1)
#am__objects_4 = libskins2_plugin_la-x11_display.lo \
#	libskins2_plugin_la-x11_dragdrop.lo \
#	libskins2_plugin_la-x11_factory.lo \
#	libskins2_plugin_la-x11_graphics.lo \
#	libskins2_plugin_la-x11_loop.lo \
#	libskins2_plugin_la-x11_popup.lo \
#	libskins2_plugin_la-x11_timer.lo \
#	libskins2_plugin_la-x11_window.lo \
#	libskins2_plugin_la-x11_tooltip.lo \
#	$(am__objects_1)
am__objects_5 = libskins2_plugin_la-async_queue.lo \
	libskins2_plugin_la-cmd_add_item.lo \
	libskins2_plugin_la-cmd_audio.lo \
	libskins2_plugin_la-cmd_dvd.lo \
	libskins2_plugin_la-cmd_change_skin.lo \
	libskins2_plugin_la-cmd_fullscreen.lo \
	libskins2_plugin_la-cmd_input.lo \
	libskins2_plugin_la-cmd_layout.lo \
	libskins2_plugin_la-cmd_muxer.lo \
	libskins2_plugin_la-cmd_on_top.lo \
	libskins2_plugin_la-cmd_playlist.lo \
	libskins2_plugin_la-cmd_playtree.lo \
	libskins2_plugin_la-cmd_minimize.lo \
	libskins2_plugin_la-cmd_quit.lo \
	libskins2_plugin_la-cmd_resize.lo \
	libskins2_plugin_la-cmd_voutwindow.lo \
	libskins2_plugin_la-cmd_snapshot.lo \
	libskins2_plugin_la-cmd_vars.lo \
	libskins2_plugin_la-ctrl_button.lo \
	libskins2_plugin_la-ctrl_checkbox.lo \
	libskins2_plugin_la-ctrl_generic.lo \
	libskins2_plugin_la-ctrl_image.lo \
	libskins2_plugin_la-ctrl_list.lo \
	libskins2_plugin_la-ctrl_tree.lo \
	libskins2_plugin_la-ctrl_move.lo \
	libskins2_plugin_la-ctrl_resize.lo \
	libskins2_plugin_la-ctrl_slider.lo \
	libskins2_plugin_la-ctrl_radialslider.lo \
	libskins2_plugin_la-ctrl_text.lo \
	libskins2_plugin_la-ctrl_video.lo \
	libskins2_plugin_la-evt_input.lo \
	libskins2_plugin_la-evt_key.lo \
	libskins2_plugin_la-evt_mouse.lo \
	libskins2_plugin_la-evt_special.lo \
	libskins2_plugin_la-evt_scroll.lo \
	libskins2_plugin_la-builder.lo \
	libskins2_plugin_la-expr_evaluator.lo \
	libskins2_plugin_la-interpreter.lo \
	libskins2_plugin_la-skin_parser.lo \
	libskins2_plugin_la-xmlparser.lo libskins2_plugin_la-anchor.lo \
	libskins2_plugin_la-anim_bitmap.lo \
	libskins2_plugin_la-bitmap_font.lo \
	libskins2_plugin_la-dialogs.lo \
	libskins2_plugin_la-file_bitmap.lo \
	libskins2_plugin_la-art_bitmap.lo \
	libskins2_plugin_la-ft2_bitmap.lo \
	libskins2_plugin_la-ft2_font.lo libskins2_plugin_la-ft2_err.lo \
	libskins2_plugin_la-generic_bitmap.lo \
	libskins2_plugin_la-generic_layout.lo \
	libskins2_plugin_la-generic_window.lo \
	libskins2_plugin_la-ini_file.lo libskins2_plugin_la-logger.lo \
	libskins2_plugin_la-os_factory.lo libskins2_plugin_la-popup.lo \
	libskins2_plugin_la-scaled_bitmap.lo \
	libskins2_plugin_la-skin_main.lo libskins2_plugin_la-theme.lo \
	libskins2_plugin_la-theme_loader.lo \
	libskins2_plugin_la-theme_repository.lo \
	libskins2_plugin_la-tooltip.lo \
	libskins2_plugin_la-top_window.lo \
	libskins2_plugin_la-var_manager.lo \
	libskins2_plugin_la-vlcproc.lo \
	libskins2_plugin_la-vout_window.lo \
	libskins2_plugin_la-vout_manager.lo \
	libskins2_plugin_la-window_manager.lo \
	libskins2_plugin_la-bezier.lo libskins2_plugin_la-fsm.lo \
	libskins2_plugin_la-position.lo libskins2_plugin_la-ustring.lo \
	libskins2_plugin_la-var_bool.lo \
	libskins2_plugin_la-var_list.lo \
	libskins2_plugin_la-var_percent.lo \
	libskins2_plugin_la-var_text.lo \
	libskins2_plugin_la-var_string.lo \
	libskins2_plugin_la-var_tree.lo \
	libskins2_plugin_la-equalizer.lo \
	libskins2_plugin_la-playtree.lo libskins2_plugin_la-time.lo \
	libskins2_plugin_la-volume.lo $(am__objects_2) \
	$(am__objects_3) $(am__objects_4)
am_libskins2_plugin_la_OBJECTS = $(am__objects_5)
nodist_libskins2_plugin_la_OBJECTS =
libskins2_plugin_la_OBJECTS = $(am_libskins2_plugin_la_OBJECTS) \
	$(nodist_libskins2_plugin_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
libskins2_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/autotools/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX   " $@;
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(libskins2_plugin_la_SOURCES) \
	$(nodist_libskins2_plugin_la_SOURCES)
DIST_SOURCES = $(am__libskins2_plugin_la_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/skoruga/vlc-shaders/vlc/autotools/missing --run aclocal-1.11
ALIASES =  cvlc rvlc svlc qvlc
ALSA_CFLAGS = 
ALSA_LIBS = 
AMTAR = ${SHELL} /home/skoruga/vlc-shaders/vlc/autotools/missing --run tar
AM_CPPFLAGS = 
AM_DEFAULT_VERBOSITY = 0
AR = ar
ARCH = i586 mmx sse sse2
ARM_NEON_CFLAGS = 
AS = as
ASM = 
AUTOCONF = ${SHELL} /home/skoruga/vlc-shaders/vlc/autotools/missing --run autoconf
AUTOHEADER = ${SHELL} /home/skoruga/vlc-shaders/vlc/autotools/missing --run autoheader
AUTOMAKE = ${SHELL} /home/skoruga/vlc-shaders/vlc/autotools/missing --run automake-1.11
AVCODEC_CFLAGS = -IC:/Msys/1.0/win32/include  
AVCODEC_LIBS = -LC:/Msys/1.0/win32/lib -lavcodec -lpsapi -lz -lgsm -lmp3lame -lm -lvpx -lavutil  
AVFORMAT_CFLAGS = -IC:/Msys/1.0/win32/include  
AVFORMAT_LIBS = -LC:/Msys/1.0/win32/lib -lavformat -lavcodec -lpsapi -lz -lgsm -lmp3lame -lm -lvpx -lavutil  
AWK = gawk
BONJOUR_CFLAGS = 
BONJOUR_LIBS = 
CACA_CFLAGS = -IC:/Msys/1.0/win32/include  
CACA_LIBS = -LC:/Msys/1.0/win32/lib -lcaca -lz  
CC = gcc -std=gnu99
CCAS = gcc -std=gnu99
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -g -O2
CCDEPMODE = depmode=gcc3
CFLAGS =  -mms-bitfields -Wall -Wextra -Wsign-compare -Wundef -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wmissing-prototypes -Wvolatile-register-var -Werror-implicit-function-declaration
CONTRIB_DIR = 
COPYRIGHT_MESSAGE = Copyright Â© 1996-2010 the VideoLAN team
COPYRIGHT_YEARS = 1996-2010
CPP = gcc -std=gnu99 -E
CPPFLAGS = -I$(top_srcdir)/include -I$(top_builddir)/include -I/usr/win32/include -I/usr/win32/include/ebml -D__USE_MINGW_ANSI_STDIO=1 -DSYS_MINGW32
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -mms-bitfields 
CYGPATH = 
CYGPATH_W = echo
DBUS_CFLAGS = 
DBUS_LIBS = 
DC1394_CFLAGS = 
DC1394_LIBS = 
DCA_CFLAGS = -IC:/Msys/1.0/win32/include/libdca  
DCA_LIBS = -LC:/Msys/1.0/win32/lib -ldca  
DEFS = -DHAVE_CONFIG_H
DEFS_BIGENDIAN = 
DEPDIR = .deps
DIRAC_CFLAGS = 
DIRAC_LIBS = 
DIRECTFB_CFLAGS = 
DIRECTFB_CONFIG = 
DIRECTFB_LIBS = 
DLLTOOL = dlltool
DSYMUTIL = 
DUMPBIN = :
DVDNAV_CONFIG = /usr/win32/bin/dvdnav-config
DV_CFLAGS = 
DV_LIBS = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = .exe
FGREP = /bin/grep -F
FILE_LIBVLCCORE_DLL = !define LIBVLCCORE_DLL libvlccore.dll
FILE_LIBVLC_DLL = !define LIBVLC_DLL libvlc.dll
FLAC_CFLAGS = -IC:/Msys/1.0/win32/include/FLAC -IC:/Msys/1.0/win32/include  
FLAC_LIBS = -LC:/Msys/1.0/win32/lib -lFLAC -lm -logg  
FLUIDSYNTH_CFLAGS = -IC:/Msys/1.0/win32/include  
FLUIDSYNTH_LIBS = -LC:/Msys/1.0/win32/lib -lfluidsynth -ldsound -lwinmm  
FREETYPE_CFLAGS = -IC:/Msys/1.0/win32/include/freetype2 -IC:/Msys/1.0/win32/include  
FREETYPE_LIBS = -LC:/Msys/1.0/win32/lib -lfreetype -lz  
FRIBIDI_CFLAGS = -IC:/Msys/1.0/win32/include/fribidi  
FRIBIDI_LIBS = -LC:/Msys/1.0/win32/lib -lfribidi  
GCRYPT_CFLAGS = -I/usr/win32/include
GCRYPT_LIBS = -L/usr/win32/lib -lgcrypt -lgpg-error
GETTEXT_MACRO_VERSION = 0.17
GL_CFLAGS = 
GL_LIBS = 
GMSGFMT = :
GMSGFMT_015 = :
GNOMEVFS_CFLAGS = 
GNOMEVFS_LIBS = 
GNUGETOPT_LIBS = 
GNUTLS_CFLAGS = -IC:/Msys/1.0/win32/include  
GNUTLS_LIBS = -LC:/Msys/1.0/win32/lib -lgnutls  
GOOM_CFLAGS = -IC:/Msys/1.0/win32/include  
GOOM_LIBS = -LC:/Msys/1.0/win32/lib -lgoom2  
GREP = /bin/grep
HILDON_CFLAGS = 
HILDON_FM_CFLAGS = 
HILDON_FM_LIBS = 
HILDON_LIBS = 
INSTALL = /bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTLLIBS = 
INTL_MACOSX_LIBS = 
JACK_CFLAGS = 
JACK_LIBS = 
KATE_CFLAGS = -IC:/Msys/1.0/win32/include  
KATE_LIBS = -LC:/Msys/1.0/win32/lib -lkate  
KDE4_CONFIG = kde4-config
LD = ld
LDFLAGS = -L/usr/win32/lib
LIBASS_CFLAGS = -IC:/Msys/1.0/win32/include -IC:/Msys/1.0/win32/include/freetype2  
LIBASS_LIBS = -LC:/Msys/1.0/win32/lib -L/usr/win32/lib -lass -lm -lfontconfig -lxml2 -liconv -lfreetype -lz  
LIBCDDB_CFLAGS = -IC:/Msys/1.0/win32/include  
LIBCDDB_LIBS = C:/Msys/1.0/win32/lib/libregex.a -LC:/Msys/1.0/win32/lib -lcddb -lregex -lws2_32  
LIBCDIO_CFLAGS = 
LIBCDIO_LIBS = 
LIBDL = 
LIBEXT = .dll
LIBICONV = /usr/win32/lib/libiconv.a
LIBINTL = 
LIBMODPLUG_CFLAGS = -IC:/Msys/1.0/win32/include -IC:/Msys/1.0/win32/include/libmodplug  
LIBMODPLUG_LIBS = -LC:/Msys/1.0/win32/lib -lmodplug -lstdc++ -lm  
LIBMPEG2_CFLAGS = -IC:/Msys/1.0/win32/include/mpeg2dec  
LIBMPEG2_LIBS = -LC:/Msys/1.0/win32/lib -lmpeg2  
LIBOBJS =  ${LIBOBJDIR}asprintf$U.o ${LIBOBJDIR}getdelim$U.o ${LIBOBJDIR}gmtime_r$U.o ${LIBOBJDIR}localtime_r$U.o ${LIBOBJDIR}nrand48$U.o ${LIBOBJDIR}strcasestr$U.o ${LIBOBJDIR}strlcpy$U.o ${LIBOBJDIR}strndup$U.o ${LIBOBJDIR}strnlen$U.o ${LIBOBJDIR}strsep$U.o ${LIBOBJDIR}strtok_r$U.o ${LIBOBJDIR}vasprintf$U.o
LIBPROXY_CFLAGS = 
LIBPROXY_LIBS = 
LIBS = -lmingw32 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBV4L2_CFLAGS = 
LIBV4L2_LIBS = 
LIBV4L_CFLAGS = 
LIBV4L_LIBS = 
LIBVA_CFLAGS = 
LIBVA_LIBS = 
LIBVCDINFO_CFLAGS = 
LIBVCDINFO_LIBS = 
LIBXML2_CFLAGS = -DLIBXML_STATIC -IC:/Msys/1.0/win32/include/libxml2  
LIBXML2_LIBS = -LC:/Msys/1.0/win32/lib -lxml2  
LIPO = 
LN_S = ln -s
LTLIBICONV = -L/usr/win32/lib -liconv
LTLIBINTL = 
LTLIBOBJS =  ${LIBOBJDIR}asprintf$U.lo ${LIBOBJDIR}getdelim$U.lo ${LIBOBJDIR}gmtime_r$U.lo ${LIBOBJDIR}localtime_r$U.lo ${LIBOBJDIR}nrand48$U.lo ${LIBOBJDIR}strcasestr$U.lo ${LIBOBJDIR}strlcpy$U.lo ${LIBOBJDIR}strndup$U.lo ${LIBOBJDIR}strnlen$U.lo ${LIBOBJDIR}strsep$U.lo ${LIBOBJDIR}strtok_r$U.lo ${LIBOBJDIR}vasprintf$U.lo
LTLIBa52tofloat32 = liba52tofloat32_plugin.la
LTLIBaa = 
LTLIBaccess_alsa = 
LTLIBaccess_avio = 
LTLIBaccess_dv = 
LTLIBaccess_eyetv = 
LTLIBaccess_gnomevfs = 
LTLIBaccess_jack = 
LTLIBaccess_mmap = 
LTLIBaccess_mtp = 
LTLIBaccess_oss = 
LTLIBaccess_output_shout = libaccess_output_shout_plugin.la
LTLIBaccess_realrtsp = libaccess_realrtsp_plugin.la
LTLIBaccess_sftp = 
LTLIBaccess_smb = libaccess_smb_plugin.la
LTLIBalsa = 
LTLIBaout_directx = libaout_directx_plugin.la
LTLIBaout_sdl = libaout_sdl_plugin.la
LTLIBasademux = 
LTLIBatmo = libatmo_plugin.la
LTLIBauhal = 
LTLIBavcodec = libavcodec_plugin.la
LTLIBavformat = 
LTLIBbda = libbda_plugin.la
LTLIBbonjour = 
LTLIBcaca = libcaca_plugin.la
LTLIBcdda = libcdda_plugin.la
LTLIBdbus = 
LTLIBdc1394 = 
LTLIBdirac = 
LTLIBdirect3d = libdirect3d_plugin.la
LTLIBdirectfb = 
LTLIBdirectx = libdirectx_plugin.la
LTLIBdmo = libdmo_plugin.la
LTLIBdshow = libdshow_plugin.la
LTLIBdtstofloat32 = libdtstofloat32_plugin.la
LTLIBdvb = 
LTLIBdvdnav = libdvdnav_plugin.la
LTLIBdvdread = libdvdread_plugin.la
LTLIBdynamicoverlay = 
LTLIBfaad = libfaad_plugin.la
LTLIBfb = 
LTLIBfbosd = 
LTLIBflac = libflac_plugin.la
LTLIBfluidsynth = libfluidsynth_plugin.la
LTLIBfreetype = libfreetype_plugin.la
LTLIBglobalhotkeys = libglobalhotkeys_plugin.la
LTLIBglwin32 = libglwin32_plugin.la
LTLIBgme = 
LTLIBgnutls = libgnutls_plugin.la
LTLIBgoom = libgoom_plugin.la
LTLIBgrowl = 
LTLIBgrowl_udp = 
LTLIBhd1000a = 
LTLIBhildon = 
LTLIBid3tag = 
LTLIBinhibit = 
LTLIBjack = 
LTLIBkate = libkate_plugin.la
LTLIBlibass = liblibass_plugin.la
LTLIBlibmpeg2 = liblibmpeg2_plugin.la
LTLIBlirc = 
LTLIBlive555 = liblive555_plugin.la
LTLIBmacosx = 
LTLIBmacosx_dialog_provider = 
LTLIBminimal_macosx = 
LTLIBmkv = 
LTLIBmod = libmod_plugin.la
LTLIBmozilla = 
LTLIBmpc = 
LTLIBmpgatofixed32 = libmpgatofixed32_plugin.la
LTLIBmtp = 
LTLIBmux_ogg = libmux_ogg_plugin.la
LTLIBmux_ts = libmux_ts_plugin.la
LTLIBncurses = 
LTLIBnotify = 
LTLIBogg = libogg_plugin.la
LTLIBoldhttp = liboldhttp_plugin.la
LTLIBomxil = 
LTLIBopencv_example = 
LTLIBosd_parser = libosd_parser_plugin.la
LTLIBosdmenu = libosdmenu_plugin.la
LTLIBoss = 
LTLIBosso_screensaver = 
LTLIBpanoramix = libpanoramix_plugin.la
LTLIBpng = libpng_plugin.la
LTLIBportaudio = libportaudio_plugin.la
LTLIBpostproc = libpostproc_plugin.la
LTLIBprojectm = libprojectm_plugin.la
LTLIBpulse = 
LTLIBpvr = 
LTLIBqt4 = libqt4_plugin.la
LTLIBqtcapture = 
LTLIBquicktime = libquicktime_plugin.la
LTLIBrealvideo = librealvideo_plugin.la
LTLIBremoteosd = libremoteosd_plugin.la
LTLIBschroedinger = libschroedinger_plugin.la
LTLIBscreen = libscreen_plugin.la
LTLIBscreensaver = 
LTLIBsdl_image = libsdl_image_plugin.la
LTLIBshine = 
LTLIBskins2 = libskins2_plugin.la
LTLIBsnapshot = 
LTLIBspeex = libspeex_plugin.la
LTLIBsqlite = 
LTLIBstream_out_raop = libstream_out_raop_plugin.la
LTLIBstream_out_switcher = 
LTLIBsvg = 
LTLIBswscale = libswscale_plugin.la
LTLIBtaglib = 
LTLIBtelepathy = 
LTLIBtelx = 
LTLIBtheora = libtheora_plugin.la
LTLIBtremor = 
LTLIBts = libts_plugin.la
LTLIBtwolame = libtwolame_plugin.la
LTLIBudev = 
LTLIBunzip = libunzip_plugin.la
LTLIBupnp_cc = 
LTLIBupnp_intel = 
LTLIBv4l = 
LTLIBv4l2 = 
LTLIBvcd = libvcd_plugin.la
LTLIBvcdx = 
LTLIBvisual = libvisual_plugin.la
LTLIBvorbis = libvorbis_plugin.la
LTLIBvout_macosx = 
LTLIBvout_sdl = libvout_sdl_plugin.la
LTLIBwaveout = libwaveout_plugin.la
LTLIBwingapi = 
LTLIBwingdi = libwingdi_plugin.la
LTLIBwma_fixed = 
LTLIBx264 = libx264_plugin.la
LTLIBxcb_apps = 
LTLIBxcb_glx = 
LTLIBxcb_screen = 
LTLIBxcb_window = 
LTLIBxcb_x11 = 
LTLIBxcb_xv = 
LTLIBxdg_screensaver = 
LTLIBxml = libxml_plugin.la
LTLIBxosd = 
LTLIBzip = libzip_plugin.la
LTLIBzvbi = libzvbi_plugin.la
LUAC = /bin/luac
LUA_CFLAGS = -IC:/Msys/1.0/win32/include  
LUA_LIBS = -LC:/Msys/1.0/win32/lib -llua -lm  
MACOSX_DEPLOYMENT_TARGET = 
MAINT = 
MAKEINFO = ${SHELL} /home/skoruga/vlc-shaders/vlc/autotools/missing --run makeinfo
MIDL = no
MINIZIP_CFLAGS = -I\${top_srcdir}/libs/unzip
MINIZIP_LIBS = \${top_builddir}/libs/unzip/libunzip.la
MKDIR_P = /bin/mkdir -p
MMX_CFLAGS = -mmmx
MOC = moc
MOZILLA_CFLAGS = 
MOZILLA_CONFIG = 
MOZILLA_LIBS = 
MOZILLA_SDK_PATH = /usr/win32/gecko-sdk
MSGFMT = :
MSGFMT_015 = :
MSGMERGE = :
MTP_CFLAGS = 
MTP_LIBS = 
MUX_OGG_CFLAGS = -IC:/Msys/1.0/win32/include  
MUX_OGG_LIBS = -LC:/Msys/1.0/win32/lib -logg  
NM = nm
NMEDIT = 
NOTIFY_CFLAGS = 
NOTIFY_LIBS = 
OBJC = gcc
OBJCDEPMODE = depmode=gcc3
OBJCFLAGS = 
OBJCOPY = objcopy
OBJDUMP = objdump
OBJEXT = o
OGG_CFLAGS = -IC:/Msys/1.0/win32/include  
OGG_LIBS = -LC:/Msys/1.0/win32/lib -logg  
OPENCV_CFLAGS = 
OPENCV_LIBS = 
OSSO_SCREENSAVER_CFLAGS = 
OSSO_SCREENSAVER_LIBS = 
OTOOL = 
OTOOL64 = 
PACKAGE = vlc
PACKAGE_BUGREPORT = 
PACKAGE_NAME = vlc
PACKAGE_STRING = vlc 1.2.0-git
PACKAGE_TARNAME = vlc
PACKAGE_VERSION = 1.2.0-git
PATH_SEPARATOR = :
PCRE_CFLAGS = 
PCRE_LIBS = 
PEFLAGS = :
PKGDIR = vlc
PKG_CONFIG = /bin/pkg-config --static
PKG_CONFIG_PATH = /win32/lib/pkgconfig
PORTAUDIO_CFLAGS = -mthreads -IC:/Msys/1.0/win32/include  
PORTAUDIO_LIBS = -LC:/Msys/1.0/win32/lib -lportaudio -lwinmm -lm -lstdc++ -lole32 -luuid  
POSTPROC_CFLAGS = -IC:/Msys/1.0/win32/include  
POSTPROC_LIBS = -LC:/Msys/1.0/win32/lib -lpostproc -lavutil  
POSUB = 
PROJECTM2_CFLAGS = -IC:/Msys/1.0/win32/include  
PROJECTM2_LIBS = -LC:/Msys/1.0/win32/lib -lprojectM -lMilkdropPresetFactory -lRenderer -lglu32 -lglew32 -lopengl32  
PROJECTM_CFLAGS = -IC:/Msys/1.0/win32/include  
PROJECTM_LIBS = -LC:/Msys/1.0/win32/lib -lprojectM -lMilkdropPresetFactory -lRenderer -lglu32 -lglew32 -lopengl32  
PULSE_CFLAGS = 
PULSE_LIBS = 
QT4_CFLAGS = -DQT_NODLL -IC:/Msys/1.0/win32/include/qt4 -IC:/Msys/1.0/win32/include/qt4/QtCore -IC:/Msys/1.0/win32/include/qt4/QtGui  
QT4_LIBS = -Wl,--subsystem,windows -mwindows -LC:/Msys/1.0/win32/lib -lqjpeg -lqtaccessiblewidgets -lQtGui -lQtCore -lrpcrt4 -loleaut32 -lole32 -luuid -lwinspool -lwinmm -lshell32 -lcomctl32 -lcomdlg32 -ladvapi32 -lgdi32 -limm32 -lwsock32  
RANLIB = ranlib
RCC = rcc
SCHROEDINGER_CFLAGS = -IC:/Msys/1.0/win32/include/schroedinger-1.0 -IC:/Msys/1.0/win32/include/orc-0.4  
SCHROEDINGER_LIBS = -LC:/Msys/1.0/win32/lib -lschroedinger-1.0 -lorc-0.4 -lm  
SDL_CFLAGS = -D_GNU_SOURCE=1 -Dmain=SDL_main -IC:/Msys/1.0/win32/include/SDL  
SDL_IMAGE_CFLAGS = -D_GNU_SOURCE=1 -Dmain=SDL_main -IC:/Msys/1.0/win32/include/SDL  
SDL_IMAGE_LIBS = -mwindows -LC:/Msys/1.0/win32/lib -lSDL_image -lmingw32 -lSDLmain -lSDL -liconv -lm -luser32 -lgdi32 -lwinmm  
SDL_LIBS = -mwindows -LC:/Msys/1.0/win32/lib -lmingw32 -lSDLmain -lSDL -liconv -lm -luser32 -lgdi32 -lwinmm  
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
SHOUT_CFLAGS = -IC:/Msys/1.0/win32/include  
SHOUT_LIBS = -LC:/Msys/1.0/win32/lib -lshout -lvorbis -ltheora -lspeex -lm -logg  
SOCKET_LIBS = 
SPEEX_CFLAGS = -IC:/Msys/1.0/win32/include  
SPEEX_LIBS = -LC:/Msys/1.0/win32/lib -logg -lspeex -lm  
SQLITE_CFLAGS = 
SQLITE_LIBS = 
SSE2_CFLAGS = -msse2
STRIP = strip
SVG_CFLAGS = 
SVG_LIBS = 
SWSCALE_CFLAGS = -IC:/Msys/1.0/win32/include  
SWSCALE_LIBS = -LC:/Msys/1.0/win32/lib -lswscale -lavutil  
SYS = mingw32
TAGLIB_CFLAGS = 
TAGLIB_LIBS = 
THEORA_CFLAGS = -IC:/Msys/1.0/win32/include  
THEORA_LIBS = -LC:/Msys/1.0/win32/lib -ltheora -logg  
TIGER_CFLAGS = 
TIGER_LIBS = 
TWOLAME_CFLAGS = -IC:/Msys/1.0/win32/include  
TWOLAME_LIBS = -LC:/Msys/1.0/win32/lib -ltwolame  
U2D = unix2dos
UDEV_CFLAGS = 
UDEV_LIBS = 
UIC = uic
UPNP_CFLAGS = 
UPNP_LIBS = 
USE_NLS = no
VERSION = 1.2.0-git
VERSION_EXTRA = -git
VERSION_EXTRA_RC = 99
VERSION_MAJOR = 1
VERSION_MESSAGE = 1.2.0-git Twoflower
VERSION_MINOR = 2
VERSION_REVISION = 0
VLC_CONFIG = top_srcdir="$(top_srcdir)" top_builddir="$(top_builddir)" $(top_builddir)/vlc-config
VORBIS_CFLAGS = -IC:/Msys/1.0/win32/include  
VORBIS_LIBS = -LC:/Msys/1.0/win32/lib -lvorbisenc -lvorbis -lm -logg  
WIDL = no
WINDRES = windres
WINE_SDK_PATH = 
X264_CFLAGS = -IC:/Msys/1.0/win32/include  
X264_LIBS = -LC:/Msys/1.0/win32/lib -lx264 -lpthreadGC2 -lwsock32  
XCB_CFLAGS = 
XCB_KEYSYMS_CFLAGS = 
XCB_KEYSYMS_LIBS = 
XCB_LIBS = 
XCB_RANDR_CFLAGS = 
XCB_RANDR_LIBS = 
XCB_SHM_CFLAGS = 
XCB_SHM_LIBS = 
XCB_XV_CFLAGS = 
XCB_XV_LIBS = 
XGETTEXT = :
XGETTEXT_015 = :
XGETTEXT_EXTRA_OPTIONS = 
XLIB_XCB_CFLAGS = 
XLIB_XCB_LIBS = 
XMKMF = 
XPM_CFLAGS = 
XPM_LIBS = 
XPROTO_CFLAGS = 
XPROTO_LIBS = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS = 
ZVBI_CFLAGS = -IC:/Msys/1.0/win32/include  
ZVBI_LIBS = /usr/win32/lib/libiconv.a -LC:/Msys/1.0/win32/lib -L/usr/win32/lib -lzvbi -lpthreadGC2 -lwsock32 -lintl -liconv -lm -lpng -lz  
abs_builddir = /home/skoruga/vlc-shaders/vlc/modules/gui/skins2
abs_srcdir = /home/skoruga/vlc-shaders/vlc/modules/gui/skins2
abs_top_builddir = /home/skoruga/vlc-shaders/vlc
abs_top_srcdir = /home/skoruga/vlc-shaders/vlc
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_DUMPBIN = 
ac_ct_OBJC = gcc
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = i386-pc-linux-gnu
build_alias = i386-linux
build_cpu = i386
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i586-pc-mingw32msvc
host_alias = i586-mingw32msvc
host_cpu = i586
host_os = mingw32msvc
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/skoruga/vlc-shaders/vlc/autotools/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
soliddatadir = ${datadir}/kde4/apps/solid/actions
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
to_host_path_cmd = func_nix_to_mingw_path_convert
top_build_prefix = ../../../
top_builddir = ../../..
top_srcdir = ../../..
vlcdatadir = ${datadir}/${PKGDIR}
vlclibdir = ${libdir}/${PKGDIR}
basedir = gui
dir = gui/skins2
mods = skins2
libvlc_LTLIBRARIES = $(LTLIBskins2)
EXTRA_LTLIBRARIES = libskins2_plugin.la
NULL = 
libvlcdir = $(vlclibdir)/plugins/$(basedir)
EXTRA_DIST = Modules.am
BUILT_SOURCES = 
CLEANFILES = $(BUILT_SOURCES)
LTLIBVLCCORE = $(top_builddir)/src/libvlccore.la
AM_CFLAGS = `$(VLC_CONFIG) --cflags plugin $@`
AM_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin $@`
AM_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin $@`
AM_LDFLAGS = -rpath '$(libvlcdir)' \
	-avoid-version -module \
	-export-symbol-regex ^vlc_entry \
	-shrext $(LIBEXT) \
	-rpath "$(libvlcdir)" \
	-no-undefined \
	 `$(VLC_CONFIG) --ldflags plugin $@`

AM_LIBADD = `$(VLC_CONFIG) -libs plugin $@` \
	$(LTLIBVLCCORE) $(top_builddir)/compat/libcompat.la

SOURCES_skins2 = commands/async_queue.cpp commands/async_queue.hpp \
	commands/cmd_add_item.cpp commands/cmd_add_item.hpp \
	commands/cmd_audio.cpp commands/cmd_audio.hpp \
	commands/cmd_dummy.hpp commands/cmd_dvd.cpp \
	commands/cmd_dvd.hpp commands/cmd_generic.hpp \
	commands/cmd_callbacks.hpp commands/cmd_change_skin.cpp \
	commands/cmd_change_skin.hpp commands/cmd_dialogs.hpp \
	commands/cmd_fullscreen.cpp commands/cmd_fullscreen.hpp \
	commands/cmd_input.cpp commands/cmd_input.hpp \
	commands/cmd_layout.cpp commands/cmd_layout.hpp \
	commands/cmd_muxer.cpp commands/cmd_muxer.hpp \
	commands/cmd_on_top.cpp commands/cmd_on_top.hpp \
	commands/cmd_playlist.cpp commands/cmd_playlist.hpp \
	commands/cmd_playtree.cpp commands/cmd_playtree.hpp \
	commands/cmd_minimize.cpp commands/cmd_minimize.hpp \
	commands/cmd_quit.cpp commands/cmd_quit.hpp \
	commands/cmd_resize.cpp commands/cmd_resize.hpp \
	commands/cmd_voutwindow.cpp commands/cmd_voutwindow.hpp \
	commands/cmd_snapshot.cpp commands/cmd_snapshot.hpp \
	commands/cmd_show_window.hpp commands/cmd_vars.cpp \
	commands/cmd_vars.hpp controls/ctrl_button.cpp \
	controls/ctrl_button.hpp controls/ctrl_checkbox.cpp \
	controls/ctrl_checkbox.hpp controls/ctrl_flat.hpp \
	controls/ctrl_generic.cpp controls/ctrl_generic.hpp \
	controls/ctrl_image.cpp controls/ctrl_image.hpp \
	controls/ctrl_list.cpp controls/ctrl_list.hpp \
	controls/ctrl_tree.cpp controls/ctrl_tree.hpp \
	controls/ctrl_move.cpp controls/ctrl_move.hpp \
	controls/ctrl_resize.cpp controls/ctrl_resize.hpp \
	controls/ctrl_slider.cpp controls/ctrl_slider.hpp \
	controls/ctrl_radialslider.cpp controls/ctrl_radialslider.hpp \
	controls/ctrl_text.hpp controls/ctrl_text.cpp \
	controls/ctrl_video.cpp controls/ctrl_video.hpp \
	events/evt_enter.hpp events/evt_focus.hpp \
	events/evt_generic.hpp events/evt_input.cpp \
	events/evt_input.hpp events/evt_key.cpp events/evt_key.hpp \
	events/evt_leave.hpp events/evt_menu.hpp events/evt_motion.hpp \
	events/evt_mouse.cpp events/evt_mouse.hpp \
	events/evt_refresh.hpp events/evt_special.cpp \
	events/evt_special.hpp events/evt_scroll.cpp \
	events/evt_scroll.hpp parser/builder.cpp parser/builder.hpp \
	parser/builder_data.hpp parser/expr_evaluator.cpp \
	parser/expr_evaluator.hpp parser/interpreter.cpp \
	parser/interpreter.hpp parser/skin_parser.cpp \
	parser/skin_parser.hpp parser/xmlparser.cpp \
	parser/xmlparser.hpp src/anchor.cpp src/anchor.hpp \
	src/anim_bitmap.cpp src/anim_bitmap.hpp src/bitmap_font.cpp \
	src/bitmap_font.hpp src/dialogs.cpp src/dialogs.hpp \
	src/file_bitmap.cpp src/file_bitmap.hpp src/art_bitmap.cpp \
	src/art_bitmap.hpp src/ft2_bitmap.cpp src/ft2_bitmap.hpp \
	src/ft2_font.cpp src/ft2_font.hpp src/ft2_err.c src/ft2_err.h \
	src/generic_bitmap.cpp src/generic_bitmap.hpp \
	src/generic_font.hpp src/generic_layout.cpp \
	src/generic_layout.hpp src/generic_window.cpp \
	src/generic_window.hpp src/ini_file.cpp src/ini_file.hpp \
	src/logger.cpp src/logger.hpp src/os_factory.cpp \
	src/os_factory.hpp src/os_graphics.hpp src/os_loop.hpp \
	src/os_popup.hpp src/os_timer.hpp src/os_window.hpp \
	src/os_tooltip.hpp src/popup.cpp src/popup.hpp \
	src/scaled_bitmap.cpp src/scaled_bitmap.hpp src/skin_main.cpp \
	src/skin_common.hpp src/theme.cpp src/theme.hpp \
	src/theme_loader.cpp src/theme_loader.hpp \
	src/theme_repository.cpp src/theme_repository.hpp \
	src/tooltip.cpp src/tooltip.hpp src/top_window.cpp \
	src/top_window.hpp src/var_manager.cpp src/var_manager.hpp \
	src/vlcproc.cpp src/vlcproc.hpp src/vout_window.cpp \
	src/vout_window.hpp src/vout_manager.cpp src/vout_manager.hpp \
	src/window_manager.cpp src/window_manager.hpp utils/bezier.cpp \
	utils/bezier.hpp utils/fsm.cpp utils/fsm.hpp \
	utils/observer.hpp utils/pointer.hpp utils/position.cpp \
	utils/position.hpp utils/ustring.cpp utils/ustring.hpp \
	utils/variable.hpp utils/var_bool.cpp utils/var_bool.hpp \
	utils/var_list.cpp utils/var_list.hpp utils/var_percent.cpp \
	utils/var_percent.hpp utils/var_text.cpp utils/var_text.hpp \
	utils/var_string.cpp utils/var_string.hpp utils/var_tree.cpp \
	utils/var_tree.hpp vars/equalizer.cpp vars/equalizer.hpp \
	vars/playtree.cpp vars/playtree.hpp vars/time.cpp \
	vars/time.hpp vars/volume.cpp vars/volume.hpp $(am__append_1) \
	$(am__append_2) $(am__append_3)

# The skins2 plugin
libskins2_plugin_la_SOURCES = $(SOURCES_skins2)
nodist_libskins2_plugin_la_SOURCES = $(nodist_SOURCES_skins2)
# Force per-target objects:
libskins2_plugin_la_CFLAGS = $(AM_CFLAGS)
libskins2_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libskins2_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libskins2_plugin_la_LIBADD = $(AM_LIBADD)
libskins2_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/modules/common.am $(srcdir)/Modules.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu modules/gui/skins2/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu modules/gui/skins2/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libvlcLTLIBRARIES: $(libvlc_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libvlcdir)" || $(MKDIR_P) "$(DESTDIR)$(libvlcdir)"
	@list='$(libvlc_LTLIBRARIES)'; test -n "$(libvlcdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libvlcdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libvlcdir)"; \
	}

uninstall-libvlcLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(libvlc_LTLIBRARIES)'; test -n "$(libvlcdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libvlcdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libvlcdir)/$$f"; \
	done

clean-libvlcLTLIBRARIES:
	-test -z "$(libvlc_LTLIBRARIES)" || rm -f $(libvlc_LTLIBRARIES)
	@list='$(libvlc_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libskins2_plugin.la: $(libskins2_plugin_la_OBJECTS) $(libskins2_plugin_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libskins2_plugin_la_LINK)  $(libskins2_plugin_la_OBJECTS) $(libskins2_plugin_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libskins2_plugin_la-anchor.Plo
include ./$(DEPDIR)/libskins2_plugin_la-anim_bitmap.Plo
include ./$(DEPDIR)/libskins2_plugin_la-art_bitmap.Plo
include ./$(DEPDIR)/libskins2_plugin_la-async_queue.Plo
include ./$(DEPDIR)/libskins2_plugin_la-bezier.Plo
include ./$(DEPDIR)/libskins2_plugin_la-bitmap_font.Plo
include ./$(DEPDIR)/libskins2_plugin_la-builder.Plo
include ./$(DEPDIR)/libskins2_plugin_la-cmd_add_item.Plo
include ./$(DEPDIR)/libskins2_plugin_la-cmd_audio.Plo
include ./$(DEPDIR)/libskins2_plugin_la-cmd_change_skin.Plo
include ./$(DEPDIR)/libskins2_plugin_la-cmd_dvd.Plo
include ./$(DEPDIR)/libskins2_plugin_la-cmd_fullscreen.Plo
include ./$(DEPDIR)/libskins2_plugin_la-cmd_input.Plo
include ./$(DEPDIR)/libskins2_plugin_la-cmd_layout.Plo
include ./$(DEPDIR)/libskins2_plugin_la-cmd_minimize.Plo
include ./$(DEPDIR)/libskins2_plugin_la-cmd_muxer.Plo
include ./$(DEPDIR)/libskins2_plugin_la-cmd_on_top.Plo
include ./$(DEPDIR)/libskins2_plugin_la-cmd_playlist.Plo
include ./$(DEPDIR)/libskins2_plugin_la-cmd_playtree.Plo
include ./$(DEPDIR)/libskins2_plugin_la-cmd_quit.Plo
include ./$(DEPDIR)/libskins2_plugin_la-cmd_resize.Plo
include ./$(DEPDIR)/libskins2_plugin_la-cmd_snapshot.Plo
include ./$(DEPDIR)/libskins2_plugin_la-cmd_vars.Plo
include ./$(DEPDIR)/libskins2_plugin_la-cmd_voutwindow.Plo
include ./$(DEPDIR)/libskins2_plugin_la-ctrl_button.Plo
include ./$(DEPDIR)/libskins2_plugin_la-ctrl_checkbox.Plo
include ./$(DEPDIR)/libskins2_plugin_la-ctrl_generic.Plo
include ./$(DEPDIR)/libskins2_plugin_la-ctrl_image.Plo
include ./$(DEPDIR)/libskins2_plugin_la-ctrl_list.Plo
include ./$(DEPDIR)/libskins2_plugin_la-ctrl_move.Plo
include ./$(DEPDIR)/libskins2_plugin_la-ctrl_radialslider.Plo
include ./$(DEPDIR)/libskins2_plugin_la-ctrl_resize.Plo
include ./$(DEPDIR)/libskins2_plugin_la-ctrl_slider.Plo
include ./$(DEPDIR)/libskins2_plugin_la-ctrl_text.Plo
include ./$(DEPDIR)/libskins2_plugin_la-ctrl_tree.Plo
include ./$(DEPDIR)/libskins2_plugin_la-ctrl_video.Plo
include ./$(DEPDIR)/libskins2_plugin_la-dialogs.Plo
include ./$(DEPDIR)/libskins2_plugin_la-equalizer.Plo
include ./$(DEPDIR)/libskins2_plugin_la-evt_input.Plo
include ./$(DEPDIR)/libskins2_plugin_la-evt_key.Plo
include ./$(DEPDIR)/libskins2_plugin_la-evt_mouse.Plo
include ./$(DEPDIR)/libskins2_plugin_la-evt_scroll.Plo
include ./$(DEPDIR)/libskins2_plugin_la-evt_special.Plo
include ./$(DEPDIR)/libskins2_plugin_la-expr_evaluator.Plo
include ./$(DEPDIR)/libskins2_plugin_la-file_bitmap.Plo
include ./$(DEPDIR)/libskins2_plugin_la-fsm.Plo
include ./$(DEPDIR)/libskins2_plugin_la-ft2_bitmap.Plo
include ./$(DEPDIR)/libskins2_plugin_la-ft2_err.Plo
include ./$(DEPDIR)/libskins2_plugin_la-ft2_font.Plo
include ./$(DEPDIR)/libskins2_plugin_la-generic_bitmap.Plo
include ./$(DEPDIR)/libskins2_plugin_la-generic_layout.Plo
include ./$(DEPDIR)/libskins2_plugin_la-generic_window.Plo
include ./$(DEPDIR)/libskins2_plugin_la-ini_file.Plo
include ./$(DEPDIR)/libskins2_plugin_la-interpreter.Plo
include ./$(DEPDIR)/libskins2_plugin_la-logger.Plo
include ./$(DEPDIR)/libskins2_plugin_la-macosx_dragdrop.Plo
include ./$(DEPDIR)/libskins2_plugin_la-macosx_factory.Plo
include ./$(DEPDIR)/libskins2_plugin_la-macosx_graphics.Plo
include ./$(DEPDIR)/libskins2_plugin_la-macosx_loop.Plo
include ./$(DEPDIR)/libskins2_plugin_la-macosx_popup.Plo
include ./$(DEPDIR)/libskins2_plugin_la-macosx_timer.Plo
include ./$(DEPDIR)/libskins2_plugin_la-macosx_tooltip.Plo
include ./$(DEPDIR)/libskins2_plugin_la-macosx_window.Plo
include ./$(DEPDIR)/libskins2_plugin_la-os_factory.Plo
include ./$(DEPDIR)/libskins2_plugin_la-playtree.Plo
include ./$(DEPDIR)/libskins2_plugin_la-popup.Plo
include ./$(DEPDIR)/libskins2_plugin_la-position.Plo
include ./$(DEPDIR)/libskins2_plugin_la-scaled_bitmap.Plo
include ./$(DEPDIR)/libskins2_plugin_la-skin_main.Plo
include ./$(DEPDIR)/libskins2_plugin_la-skin_parser.Plo
include ./$(DEPDIR)/libskins2_plugin_la-theme.Plo
include ./$(DEPDIR)/libskins2_plugin_la-theme_loader.Plo
include ./$(DEPDIR)/libskins2_plugin_la-theme_repository.Plo
include ./$(DEPDIR)/libskins2_plugin_la-time.Plo
include ./$(DEPDIR)/libskins2_plugin_la-tooltip.Plo
include ./$(DEPDIR)/libskins2_plugin_la-top_window.Plo
include ./$(DEPDIR)/libskins2_plugin_la-ustring.Plo
include ./$(DEPDIR)/libskins2_plugin_la-var_bool.Plo
include ./$(DEPDIR)/libskins2_plugin_la-var_list.Plo
include ./$(DEPDIR)/libskins2_plugin_la-var_manager.Plo
include ./$(DEPDIR)/libskins2_plugin_la-var_percent.Plo
include ./$(DEPDIR)/libskins2_plugin_la-var_string.Plo
include ./$(DEPDIR)/libskins2_plugin_la-var_text.Plo
include ./$(DEPDIR)/libskins2_plugin_la-var_tree.Plo
include ./$(DEPDIR)/libskins2_plugin_la-vlcproc.Plo
include ./$(DEPDIR)/libskins2_plugin_la-volume.Plo
include ./$(DEPDIR)/libskins2_plugin_la-vout_manager.Plo
include ./$(DEPDIR)/libskins2_plugin_la-vout_window.Plo
include ./$(DEPDIR)/libskins2_plugin_la-win32_dragdrop.Plo
include ./$(DEPDIR)/libskins2_plugin_la-win32_factory.Plo
include ./$(DEPDIR)/libskins2_plugin_la-win32_graphics.Plo
include ./$(DEPDIR)/libskins2_plugin_la-win32_loop.Plo
include ./$(DEPDIR)/libskins2_plugin_la-win32_popup.Plo
include ./$(DEPDIR)/libskins2_plugin_la-win32_timer.Plo
include ./$(DEPDIR)/libskins2_plugin_la-win32_tooltip.Plo
include ./$(DEPDIR)/libskins2_plugin_la-win32_window.Plo
include ./$(DEPDIR)/libskins2_plugin_la-window_manager.Plo
include ./$(DEPDIR)/libskins2_plugin_la-x11_display.Plo
include ./$(DEPDIR)/libskins2_plugin_la-x11_dragdrop.Plo
include ./$(DEPDIR)/libskins2_plugin_la-x11_factory.Plo
include ./$(DEPDIR)/libskins2_plugin_la-x11_graphics.Plo
include ./$(DEPDIR)/libskins2_plugin_la-x11_loop.Plo
include ./$(DEPDIR)/libskins2_plugin_la-x11_popup.Plo
include ./$(DEPDIR)/libskins2_plugin_la-x11_timer.Plo
include ./$(DEPDIR)/libskins2_plugin_la-x11_tooltip.Plo
include ./$(DEPDIR)/libskins2_plugin_la-x11_window.Plo
include ./$(DEPDIR)/libskins2_plugin_la-xmlparser.Plo

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libskins2_plugin_la-ft2_err.lo: src/ft2_err.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CFLAGS) $(CFLAGS) -MT libskins2_plugin_la-ft2_err.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-ft2_err.Tpo -c -o libskins2_plugin_la-ft2_err.lo `test -f 'src/ft2_err.c' || echo '$(srcdir)/'`src/ft2_err.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-ft2_err.Tpo $(DEPDIR)/libskins2_plugin_la-ft2_err.Plo
#	$(AM_V_CC) \
#	source='src/ft2_err.c' object='libskins2_plugin_la-ft2_err.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CFLAGS) $(CFLAGS) -c -o libskins2_plugin_la-ft2_err.lo `test -f 'src/ft2_err.c' || echo '$(srcdir)/'`src/ft2_err.c

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

libskins2_plugin_la-async_queue.lo: commands/async_queue.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-async_queue.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-async_queue.Tpo -c -o libskins2_plugin_la-async_queue.lo `test -f 'commands/async_queue.cpp' || echo '$(srcdir)/'`commands/async_queue.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-async_queue.Tpo $(DEPDIR)/libskins2_plugin_la-async_queue.Plo
#	$(AM_V_CXX) \
#	source='commands/async_queue.cpp' object='libskins2_plugin_la-async_queue.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-async_queue.lo `test -f 'commands/async_queue.cpp' || echo '$(srcdir)/'`commands/async_queue.cpp

libskins2_plugin_la-cmd_add_item.lo: commands/cmd_add_item.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-cmd_add_item.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-cmd_add_item.Tpo -c -o libskins2_plugin_la-cmd_add_item.lo `test -f 'commands/cmd_add_item.cpp' || echo '$(srcdir)/'`commands/cmd_add_item.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-cmd_add_item.Tpo $(DEPDIR)/libskins2_plugin_la-cmd_add_item.Plo
#	$(AM_V_CXX) \
#	source='commands/cmd_add_item.cpp' object='libskins2_plugin_la-cmd_add_item.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-cmd_add_item.lo `test -f 'commands/cmd_add_item.cpp' || echo '$(srcdir)/'`commands/cmd_add_item.cpp

libskins2_plugin_la-cmd_audio.lo: commands/cmd_audio.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-cmd_audio.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-cmd_audio.Tpo -c -o libskins2_plugin_la-cmd_audio.lo `test -f 'commands/cmd_audio.cpp' || echo '$(srcdir)/'`commands/cmd_audio.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-cmd_audio.Tpo $(DEPDIR)/libskins2_plugin_la-cmd_audio.Plo
#	$(AM_V_CXX) \
#	source='commands/cmd_audio.cpp' object='libskins2_plugin_la-cmd_audio.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-cmd_audio.lo `test -f 'commands/cmd_audio.cpp' || echo '$(srcdir)/'`commands/cmd_audio.cpp

libskins2_plugin_la-cmd_dvd.lo: commands/cmd_dvd.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-cmd_dvd.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-cmd_dvd.Tpo -c -o libskins2_plugin_la-cmd_dvd.lo `test -f 'commands/cmd_dvd.cpp' || echo '$(srcdir)/'`commands/cmd_dvd.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-cmd_dvd.Tpo $(DEPDIR)/libskins2_plugin_la-cmd_dvd.Plo
#	$(AM_V_CXX) \
#	source='commands/cmd_dvd.cpp' object='libskins2_plugin_la-cmd_dvd.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-cmd_dvd.lo `test -f 'commands/cmd_dvd.cpp' || echo '$(srcdir)/'`commands/cmd_dvd.cpp

libskins2_plugin_la-cmd_change_skin.lo: commands/cmd_change_skin.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-cmd_change_skin.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-cmd_change_skin.Tpo -c -o libskins2_plugin_la-cmd_change_skin.lo `test -f 'commands/cmd_change_skin.cpp' || echo '$(srcdir)/'`commands/cmd_change_skin.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-cmd_change_skin.Tpo $(DEPDIR)/libskins2_plugin_la-cmd_change_skin.Plo
#	$(AM_V_CXX) \
#	source='commands/cmd_change_skin.cpp' object='libskins2_plugin_la-cmd_change_skin.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-cmd_change_skin.lo `test -f 'commands/cmd_change_skin.cpp' || echo '$(srcdir)/'`commands/cmd_change_skin.cpp

libskins2_plugin_la-cmd_fullscreen.lo: commands/cmd_fullscreen.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-cmd_fullscreen.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-cmd_fullscreen.Tpo -c -o libskins2_plugin_la-cmd_fullscreen.lo `test -f 'commands/cmd_fullscreen.cpp' || echo '$(srcdir)/'`commands/cmd_fullscreen.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-cmd_fullscreen.Tpo $(DEPDIR)/libskins2_plugin_la-cmd_fullscreen.Plo
#	$(AM_V_CXX) \
#	source='commands/cmd_fullscreen.cpp' object='libskins2_plugin_la-cmd_fullscreen.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-cmd_fullscreen.lo `test -f 'commands/cmd_fullscreen.cpp' || echo '$(srcdir)/'`commands/cmd_fullscreen.cpp

libskins2_plugin_la-cmd_input.lo: commands/cmd_input.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-cmd_input.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-cmd_input.Tpo -c -o libskins2_plugin_la-cmd_input.lo `test -f 'commands/cmd_input.cpp' || echo '$(srcdir)/'`commands/cmd_input.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-cmd_input.Tpo $(DEPDIR)/libskins2_plugin_la-cmd_input.Plo
#	$(AM_V_CXX) \
#	source='commands/cmd_input.cpp' object='libskins2_plugin_la-cmd_input.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-cmd_input.lo `test -f 'commands/cmd_input.cpp' || echo '$(srcdir)/'`commands/cmd_input.cpp

libskins2_plugin_la-cmd_layout.lo: commands/cmd_layout.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-cmd_layout.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-cmd_layout.Tpo -c -o libskins2_plugin_la-cmd_layout.lo `test -f 'commands/cmd_layout.cpp' || echo '$(srcdir)/'`commands/cmd_layout.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-cmd_layout.Tpo $(DEPDIR)/libskins2_plugin_la-cmd_layout.Plo
#	$(AM_V_CXX) \
#	source='commands/cmd_layout.cpp' object='libskins2_plugin_la-cmd_layout.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-cmd_layout.lo `test -f 'commands/cmd_layout.cpp' || echo '$(srcdir)/'`commands/cmd_layout.cpp

libskins2_plugin_la-cmd_muxer.lo: commands/cmd_muxer.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-cmd_muxer.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-cmd_muxer.Tpo -c -o libskins2_plugin_la-cmd_muxer.lo `test -f 'commands/cmd_muxer.cpp' || echo '$(srcdir)/'`commands/cmd_muxer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-cmd_muxer.Tpo $(DEPDIR)/libskins2_plugin_la-cmd_muxer.Plo
#	$(AM_V_CXX) \
#	source='commands/cmd_muxer.cpp' object='libskins2_plugin_la-cmd_muxer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-cmd_muxer.lo `test -f 'commands/cmd_muxer.cpp' || echo '$(srcdir)/'`commands/cmd_muxer.cpp

libskins2_plugin_la-cmd_on_top.lo: commands/cmd_on_top.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-cmd_on_top.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-cmd_on_top.Tpo -c -o libskins2_plugin_la-cmd_on_top.lo `test -f 'commands/cmd_on_top.cpp' || echo '$(srcdir)/'`commands/cmd_on_top.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-cmd_on_top.Tpo $(DEPDIR)/libskins2_plugin_la-cmd_on_top.Plo
#	$(AM_V_CXX) \
#	source='commands/cmd_on_top.cpp' object='libskins2_plugin_la-cmd_on_top.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-cmd_on_top.lo `test -f 'commands/cmd_on_top.cpp' || echo '$(srcdir)/'`commands/cmd_on_top.cpp

libskins2_plugin_la-cmd_playlist.lo: commands/cmd_playlist.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-cmd_playlist.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-cmd_playlist.Tpo -c -o libskins2_plugin_la-cmd_playlist.lo `test -f 'commands/cmd_playlist.cpp' || echo '$(srcdir)/'`commands/cmd_playlist.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-cmd_playlist.Tpo $(DEPDIR)/libskins2_plugin_la-cmd_playlist.Plo
#	$(AM_V_CXX) \
#	source='commands/cmd_playlist.cpp' object='libskins2_plugin_la-cmd_playlist.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-cmd_playlist.lo `test -f 'commands/cmd_playlist.cpp' || echo '$(srcdir)/'`commands/cmd_playlist.cpp

libskins2_plugin_la-cmd_playtree.lo: commands/cmd_playtree.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-cmd_playtree.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-cmd_playtree.Tpo -c -o libskins2_plugin_la-cmd_playtree.lo `test -f 'commands/cmd_playtree.cpp' || echo '$(srcdir)/'`commands/cmd_playtree.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-cmd_playtree.Tpo $(DEPDIR)/libskins2_plugin_la-cmd_playtree.Plo
#	$(AM_V_CXX) \
#	source='commands/cmd_playtree.cpp' object='libskins2_plugin_la-cmd_playtree.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-cmd_playtree.lo `test -f 'commands/cmd_playtree.cpp' || echo '$(srcdir)/'`commands/cmd_playtree.cpp

libskins2_plugin_la-cmd_minimize.lo: commands/cmd_minimize.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-cmd_minimize.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-cmd_minimize.Tpo -c -o libskins2_plugin_la-cmd_minimize.lo `test -f 'commands/cmd_minimize.cpp' || echo '$(srcdir)/'`commands/cmd_minimize.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-cmd_minimize.Tpo $(DEPDIR)/libskins2_plugin_la-cmd_minimize.Plo
#	$(AM_V_CXX) \
#	source='commands/cmd_minimize.cpp' object='libskins2_plugin_la-cmd_minimize.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-cmd_minimize.lo `test -f 'commands/cmd_minimize.cpp' || echo '$(srcdir)/'`commands/cmd_minimize.cpp

libskins2_plugin_la-cmd_quit.lo: commands/cmd_quit.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-cmd_quit.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-cmd_quit.Tpo -c -o libskins2_plugin_la-cmd_quit.lo `test -f 'commands/cmd_quit.cpp' || echo '$(srcdir)/'`commands/cmd_quit.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-cmd_quit.Tpo $(DEPDIR)/libskins2_plugin_la-cmd_quit.Plo
#	$(AM_V_CXX) \
#	source='commands/cmd_quit.cpp' object='libskins2_plugin_la-cmd_quit.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-cmd_quit.lo `test -f 'commands/cmd_quit.cpp' || echo '$(srcdir)/'`commands/cmd_quit.cpp

libskins2_plugin_la-cmd_resize.lo: commands/cmd_resize.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-cmd_resize.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-cmd_resize.Tpo -c -o libskins2_plugin_la-cmd_resize.lo `test -f 'commands/cmd_resize.cpp' || echo '$(srcdir)/'`commands/cmd_resize.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-cmd_resize.Tpo $(DEPDIR)/libskins2_plugin_la-cmd_resize.Plo
#	$(AM_V_CXX) \
#	source='commands/cmd_resize.cpp' object='libskins2_plugin_la-cmd_resize.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-cmd_resize.lo `test -f 'commands/cmd_resize.cpp' || echo '$(srcdir)/'`commands/cmd_resize.cpp

libskins2_plugin_la-cmd_voutwindow.lo: commands/cmd_voutwindow.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-cmd_voutwindow.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-cmd_voutwindow.Tpo -c -o libskins2_plugin_la-cmd_voutwindow.lo `test -f 'commands/cmd_voutwindow.cpp' || echo '$(srcdir)/'`commands/cmd_voutwindow.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-cmd_voutwindow.Tpo $(DEPDIR)/libskins2_plugin_la-cmd_voutwindow.Plo
#	$(AM_V_CXX) \
#	source='commands/cmd_voutwindow.cpp' object='libskins2_plugin_la-cmd_voutwindow.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-cmd_voutwindow.lo `test -f 'commands/cmd_voutwindow.cpp' || echo '$(srcdir)/'`commands/cmd_voutwindow.cpp

libskins2_plugin_la-cmd_snapshot.lo: commands/cmd_snapshot.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-cmd_snapshot.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-cmd_snapshot.Tpo -c -o libskins2_plugin_la-cmd_snapshot.lo `test -f 'commands/cmd_snapshot.cpp' || echo '$(srcdir)/'`commands/cmd_snapshot.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-cmd_snapshot.Tpo $(DEPDIR)/libskins2_plugin_la-cmd_snapshot.Plo
#	$(AM_V_CXX) \
#	source='commands/cmd_snapshot.cpp' object='libskins2_plugin_la-cmd_snapshot.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-cmd_snapshot.lo `test -f 'commands/cmd_snapshot.cpp' || echo '$(srcdir)/'`commands/cmd_snapshot.cpp

libskins2_plugin_la-cmd_vars.lo: commands/cmd_vars.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-cmd_vars.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-cmd_vars.Tpo -c -o libskins2_plugin_la-cmd_vars.lo `test -f 'commands/cmd_vars.cpp' || echo '$(srcdir)/'`commands/cmd_vars.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-cmd_vars.Tpo $(DEPDIR)/libskins2_plugin_la-cmd_vars.Plo
#	$(AM_V_CXX) \
#	source='commands/cmd_vars.cpp' object='libskins2_plugin_la-cmd_vars.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-cmd_vars.lo `test -f 'commands/cmd_vars.cpp' || echo '$(srcdir)/'`commands/cmd_vars.cpp

libskins2_plugin_la-ctrl_button.lo: controls/ctrl_button.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-ctrl_button.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-ctrl_button.Tpo -c -o libskins2_plugin_la-ctrl_button.lo `test -f 'controls/ctrl_button.cpp' || echo '$(srcdir)/'`controls/ctrl_button.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-ctrl_button.Tpo $(DEPDIR)/libskins2_plugin_la-ctrl_button.Plo
#	$(AM_V_CXX) \
#	source='controls/ctrl_button.cpp' object='libskins2_plugin_la-ctrl_button.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-ctrl_button.lo `test -f 'controls/ctrl_button.cpp' || echo '$(srcdir)/'`controls/ctrl_button.cpp

libskins2_plugin_la-ctrl_checkbox.lo: controls/ctrl_checkbox.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-ctrl_checkbox.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-ctrl_checkbox.Tpo -c -o libskins2_plugin_la-ctrl_checkbox.lo `test -f 'controls/ctrl_checkbox.cpp' || echo '$(srcdir)/'`controls/ctrl_checkbox.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-ctrl_checkbox.Tpo $(DEPDIR)/libskins2_plugin_la-ctrl_checkbox.Plo
#	$(AM_V_CXX) \
#	source='controls/ctrl_checkbox.cpp' object='libskins2_plugin_la-ctrl_checkbox.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-ctrl_checkbox.lo `test -f 'controls/ctrl_checkbox.cpp' || echo '$(srcdir)/'`controls/ctrl_checkbox.cpp

libskins2_plugin_la-ctrl_generic.lo: controls/ctrl_generic.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-ctrl_generic.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-ctrl_generic.Tpo -c -o libskins2_plugin_la-ctrl_generic.lo `test -f 'controls/ctrl_generic.cpp' || echo '$(srcdir)/'`controls/ctrl_generic.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-ctrl_generic.Tpo $(DEPDIR)/libskins2_plugin_la-ctrl_generic.Plo
#	$(AM_V_CXX) \
#	source='controls/ctrl_generic.cpp' object='libskins2_plugin_la-ctrl_generic.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-ctrl_generic.lo `test -f 'controls/ctrl_generic.cpp' || echo '$(srcdir)/'`controls/ctrl_generic.cpp

libskins2_plugin_la-ctrl_image.lo: controls/ctrl_image.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-ctrl_image.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-ctrl_image.Tpo -c -o libskins2_plugin_la-ctrl_image.lo `test -f 'controls/ctrl_image.cpp' || echo '$(srcdir)/'`controls/ctrl_image.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-ctrl_image.Tpo $(DEPDIR)/libskins2_plugin_la-ctrl_image.Plo
#	$(AM_V_CXX) \
#	source='controls/ctrl_image.cpp' object='libskins2_plugin_la-ctrl_image.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-ctrl_image.lo `test -f 'controls/ctrl_image.cpp' || echo '$(srcdir)/'`controls/ctrl_image.cpp

libskins2_plugin_la-ctrl_list.lo: controls/ctrl_list.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-ctrl_list.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-ctrl_list.Tpo -c -o libskins2_plugin_la-ctrl_list.lo `test -f 'controls/ctrl_list.cpp' || echo '$(srcdir)/'`controls/ctrl_list.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-ctrl_list.Tpo $(DEPDIR)/libskins2_plugin_la-ctrl_list.Plo
#	$(AM_V_CXX) \
#	source='controls/ctrl_list.cpp' object='libskins2_plugin_la-ctrl_list.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-ctrl_list.lo `test -f 'controls/ctrl_list.cpp' || echo '$(srcdir)/'`controls/ctrl_list.cpp

libskins2_plugin_la-ctrl_tree.lo: controls/ctrl_tree.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-ctrl_tree.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-ctrl_tree.Tpo -c -o libskins2_plugin_la-ctrl_tree.lo `test -f 'controls/ctrl_tree.cpp' || echo '$(srcdir)/'`controls/ctrl_tree.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-ctrl_tree.Tpo $(DEPDIR)/libskins2_plugin_la-ctrl_tree.Plo
#	$(AM_V_CXX) \
#	source='controls/ctrl_tree.cpp' object='libskins2_plugin_la-ctrl_tree.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-ctrl_tree.lo `test -f 'controls/ctrl_tree.cpp' || echo '$(srcdir)/'`controls/ctrl_tree.cpp

libskins2_plugin_la-ctrl_move.lo: controls/ctrl_move.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-ctrl_move.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-ctrl_move.Tpo -c -o libskins2_plugin_la-ctrl_move.lo `test -f 'controls/ctrl_move.cpp' || echo '$(srcdir)/'`controls/ctrl_move.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-ctrl_move.Tpo $(DEPDIR)/libskins2_plugin_la-ctrl_move.Plo
#	$(AM_V_CXX) \
#	source='controls/ctrl_move.cpp' object='libskins2_plugin_la-ctrl_move.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-ctrl_move.lo `test -f 'controls/ctrl_move.cpp' || echo '$(srcdir)/'`controls/ctrl_move.cpp

libskins2_plugin_la-ctrl_resize.lo: controls/ctrl_resize.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-ctrl_resize.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-ctrl_resize.Tpo -c -o libskins2_plugin_la-ctrl_resize.lo `test -f 'controls/ctrl_resize.cpp' || echo '$(srcdir)/'`controls/ctrl_resize.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-ctrl_resize.Tpo $(DEPDIR)/libskins2_plugin_la-ctrl_resize.Plo
#	$(AM_V_CXX) \
#	source='controls/ctrl_resize.cpp' object='libskins2_plugin_la-ctrl_resize.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-ctrl_resize.lo `test -f 'controls/ctrl_resize.cpp' || echo '$(srcdir)/'`controls/ctrl_resize.cpp

libskins2_plugin_la-ctrl_slider.lo: controls/ctrl_slider.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-ctrl_slider.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-ctrl_slider.Tpo -c -o libskins2_plugin_la-ctrl_slider.lo `test -f 'controls/ctrl_slider.cpp' || echo '$(srcdir)/'`controls/ctrl_slider.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-ctrl_slider.Tpo $(DEPDIR)/libskins2_plugin_la-ctrl_slider.Plo
#	$(AM_V_CXX) \
#	source='controls/ctrl_slider.cpp' object='libskins2_plugin_la-ctrl_slider.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-ctrl_slider.lo `test -f 'controls/ctrl_slider.cpp' || echo '$(srcdir)/'`controls/ctrl_slider.cpp

libskins2_plugin_la-ctrl_radialslider.lo: controls/ctrl_radialslider.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-ctrl_radialslider.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-ctrl_radialslider.Tpo -c -o libskins2_plugin_la-ctrl_radialslider.lo `test -f 'controls/ctrl_radialslider.cpp' || echo '$(srcdir)/'`controls/ctrl_radialslider.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-ctrl_radialslider.Tpo $(DEPDIR)/libskins2_plugin_la-ctrl_radialslider.Plo
#	$(AM_V_CXX) \
#	source='controls/ctrl_radialslider.cpp' object='libskins2_plugin_la-ctrl_radialslider.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-ctrl_radialslider.lo `test -f 'controls/ctrl_radialslider.cpp' || echo '$(srcdir)/'`controls/ctrl_radialslider.cpp

libskins2_plugin_la-ctrl_text.lo: controls/ctrl_text.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-ctrl_text.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-ctrl_text.Tpo -c -o libskins2_plugin_la-ctrl_text.lo `test -f 'controls/ctrl_text.cpp' || echo '$(srcdir)/'`controls/ctrl_text.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-ctrl_text.Tpo $(DEPDIR)/libskins2_plugin_la-ctrl_text.Plo
#	$(AM_V_CXX) \
#	source='controls/ctrl_text.cpp' object='libskins2_plugin_la-ctrl_text.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-ctrl_text.lo `test -f 'controls/ctrl_text.cpp' || echo '$(srcdir)/'`controls/ctrl_text.cpp

libskins2_plugin_la-ctrl_video.lo: controls/ctrl_video.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-ctrl_video.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-ctrl_video.Tpo -c -o libskins2_plugin_la-ctrl_video.lo `test -f 'controls/ctrl_video.cpp' || echo '$(srcdir)/'`controls/ctrl_video.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-ctrl_video.Tpo $(DEPDIR)/libskins2_plugin_la-ctrl_video.Plo
#	$(AM_V_CXX) \
#	source='controls/ctrl_video.cpp' object='libskins2_plugin_la-ctrl_video.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-ctrl_video.lo `test -f 'controls/ctrl_video.cpp' || echo '$(srcdir)/'`controls/ctrl_video.cpp

libskins2_plugin_la-evt_input.lo: events/evt_input.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-evt_input.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-evt_input.Tpo -c -o libskins2_plugin_la-evt_input.lo `test -f 'events/evt_input.cpp' || echo '$(srcdir)/'`events/evt_input.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-evt_input.Tpo $(DEPDIR)/libskins2_plugin_la-evt_input.Plo
#	$(AM_V_CXX) \
#	source='events/evt_input.cpp' object='libskins2_plugin_la-evt_input.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-evt_input.lo `test -f 'events/evt_input.cpp' || echo '$(srcdir)/'`events/evt_input.cpp

libskins2_plugin_la-evt_key.lo: events/evt_key.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-evt_key.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-evt_key.Tpo -c -o libskins2_plugin_la-evt_key.lo `test -f 'events/evt_key.cpp' || echo '$(srcdir)/'`events/evt_key.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-evt_key.Tpo $(DEPDIR)/libskins2_plugin_la-evt_key.Plo
#	$(AM_V_CXX) \
#	source='events/evt_key.cpp' object='libskins2_plugin_la-evt_key.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-evt_key.lo `test -f 'events/evt_key.cpp' || echo '$(srcdir)/'`events/evt_key.cpp

libskins2_plugin_la-evt_mouse.lo: events/evt_mouse.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-evt_mouse.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-evt_mouse.Tpo -c -o libskins2_plugin_la-evt_mouse.lo `test -f 'events/evt_mouse.cpp' || echo '$(srcdir)/'`events/evt_mouse.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-evt_mouse.Tpo $(DEPDIR)/libskins2_plugin_la-evt_mouse.Plo
#	$(AM_V_CXX) \
#	source='events/evt_mouse.cpp' object='libskins2_plugin_la-evt_mouse.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-evt_mouse.lo `test -f 'events/evt_mouse.cpp' || echo '$(srcdir)/'`events/evt_mouse.cpp

libskins2_plugin_la-evt_special.lo: events/evt_special.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-evt_special.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-evt_special.Tpo -c -o libskins2_plugin_la-evt_special.lo `test -f 'events/evt_special.cpp' || echo '$(srcdir)/'`events/evt_special.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-evt_special.Tpo $(DEPDIR)/libskins2_plugin_la-evt_special.Plo
#	$(AM_V_CXX) \
#	source='events/evt_special.cpp' object='libskins2_plugin_la-evt_special.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-evt_special.lo `test -f 'events/evt_special.cpp' || echo '$(srcdir)/'`events/evt_special.cpp

libskins2_plugin_la-evt_scroll.lo: events/evt_scroll.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-evt_scroll.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-evt_scroll.Tpo -c -o libskins2_plugin_la-evt_scroll.lo `test -f 'events/evt_scroll.cpp' || echo '$(srcdir)/'`events/evt_scroll.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-evt_scroll.Tpo $(DEPDIR)/libskins2_plugin_la-evt_scroll.Plo
#	$(AM_V_CXX) \
#	source='events/evt_scroll.cpp' object='libskins2_plugin_la-evt_scroll.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-evt_scroll.lo `test -f 'events/evt_scroll.cpp' || echo '$(srcdir)/'`events/evt_scroll.cpp

libskins2_plugin_la-builder.lo: parser/builder.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-builder.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-builder.Tpo -c -o libskins2_plugin_la-builder.lo `test -f 'parser/builder.cpp' || echo '$(srcdir)/'`parser/builder.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-builder.Tpo $(DEPDIR)/libskins2_plugin_la-builder.Plo
#	$(AM_V_CXX) \
#	source='parser/builder.cpp' object='libskins2_plugin_la-builder.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-builder.lo `test -f 'parser/builder.cpp' || echo '$(srcdir)/'`parser/builder.cpp

libskins2_plugin_la-expr_evaluator.lo: parser/expr_evaluator.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-expr_evaluator.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-expr_evaluator.Tpo -c -o libskins2_plugin_la-expr_evaluator.lo `test -f 'parser/expr_evaluator.cpp' || echo '$(srcdir)/'`parser/expr_evaluator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-expr_evaluator.Tpo $(DEPDIR)/libskins2_plugin_la-expr_evaluator.Plo
#	$(AM_V_CXX) \
#	source='parser/expr_evaluator.cpp' object='libskins2_plugin_la-expr_evaluator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-expr_evaluator.lo `test -f 'parser/expr_evaluator.cpp' || echo '$(srcdir)/'`parser/expr_evaluator.cpp

libskins2_plugin_la-interpreter.lo: parser/interpreter.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-interpreter.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-interpreter.Tpo -c -o libskins2_plugin_la-interpreter.lo `test -f 'parser/interpreter.cpp' || echo '$(srcdir)/'`parser/interpreter.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-interpreter.Tpo $(DEPDIR)/libskins2_plugin_la-interpreter.Plo
#	$(AM_V_CXX) \
#	source='parser/interpreter.cpp' object='libskins2_plugin_la-interpreter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-interpreter.lo `test -f 'parser/interpreter.cpp' || echo '$(srcdir)/'`parser/interpreter.cpp

libskins2_plugin_la-skin_parser.lo: parser/skin_parser.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-skin_parser.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-skin_parser.Tpo -c -o libskins2_plugin_la-skin_parser.lo `test -f 'parser/skin_parser.cpp' || echo '$(srcdir)/'`parser/skin_parser.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-skin_parser.Tpo $(DEPDIR)/libskins2_plugin_la-skin_parser.Plo
#	$(AM_V_CXX) \
#	source='parser/skin_parser.cpp' object='libskins2_plugin_la-skin_parser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-skin_parser.lo `test -f 'parser/skin_parser.cpp' || echo '$(srcdir)/'`parser/skin_parser.cpp

libskins2_plugin_la-xmlparser.lo: parser/xmlparser.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-xmlparser.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-xmlparser.Tpo -c -o libskins2_plugin_la-xmlparser.lo `test -f 'parser/xmlparser.cpp' || echo '$(srcdir)/'`parser/xmlparser.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-xmlparser.Tpo $(DEPDIR)/libskins2_plugin_la-xmlparser.Plo
#	$(AM_V_CXX) \
#	source='parser/xmlparser.cpp' object='libskins2_plugin_la-xmlparser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-xmlparser.lo `test -f 'parser/xmlparser.cpp' || echo '$(srcdir)/'`parser/xmlparser.cpp

libskins2_plugin_la-anchor.lo: src/anchor.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-anchor.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-anchor.Tpo -c -o libskins2_plugin_la-anchor.lo `test -f 'src/anchor.cpp' || echo '$(srcdir)/'`src/anchor.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-anchor.Tpo $(DEPDIR)/libskins2_plugin_la-anchor.Plo
#	$(AM_V_CXX) \
#	source='src/anchor.cpp' object='libskins2_plugin_la-anchor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-anchor.lo `test -f 'src/anchor.cpp' || echo '$(srcdir)/'`src/anchor.cpp

libskins2_plugin_la-anim_bitmap.lo: src/anim_bitmap.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-anim_bitmap.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-anim_bitmap.Tpo -c -o libskins2_plugin_la-anim_bitmap.lo `test -f 'src/anim_bitmap.cpp' || echo '$(srcdir)/'`src/anim_bitmap.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-anim_bitmap.Tpo $(DEPDIR)/libskins2_plugin_la-anim_bitmap.Plo
#	$(AM_V_CXX) \
#	source='src/anim_bitmap.cpp' object='libskins2_plugin_la-anim_bitmap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-anim_bitmap.lo `test -f 'src/anim_bitmap.cpp' || echo '$(srcdir)/'`src/anim_bitmap.cpp

libskins2_plugin_la-bitmap_font.lo: src/bitmap_font.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-bitmap_font.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-bitmap_font.Tpo -c -o libskins2_plugin_la-bitmap_font.lo `test -f 'src/bitmap_font.cpp' || echo '$(srcdir)/'`src/bitmap_font.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-bitmap_font.Tpo $(DEPDIR)/libskins2_plugin_la-bitmap_font.Plo
#	$(AM_V_CXX) \
#	source='src/bitmap_font.cpp' object='libskins2_plugin_la-bitmap_font.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-bitmap_font.lo `test -f 'src/bitmap_font.cpp' || echo '$(srcdir)/'`src/bitmap_font.cpp

libskins2_plugin_la-dialogs.lo: src/dialogs.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-dialogs.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-dialogs.Tpo -c -o libskins2_plugin_la-dialogs.lo `test -f 'src/dialogs.cpp' || echo '$(srcdir)/'`src/dialogs.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-dialogs.Tpo $(DEPDIR)/libskins2_plugin_la-dialogs.Plo
#	$(AM_V_CXX) \
#	source='src/dialogs.cpp' object='libskins2_plugin_la-dialogs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-dialogs.lo `test -f 'src/dialogs.cpp' || echo '$(srcdir)/'`src/dialogs.cpp

libskins2_plugin_la-file_bitmap.lo: src/file_bitmap.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-file_bitmap.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-file_bitmap.Tpo -c -o libskins2_plugin_la-file_bitmap.lo `test -f 'src/file_bitmap.cpp' || echo '$(srcdir)/'`src/file_bitmap.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-file_bitmap.Tpo $(DEPDIR)/libskins2_plugin_la-file_bitmap.Plo
#	$(AM_V_CXX) \
#	source='src/file_bitmap.cpp' object='libskins2_plugin_la-file_bitmap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-file_bitmap.lo `test -f 'src/file_bitmap.cpp' || echo '$(srcdir)/'`src/file_bitmap.cpp

libskins2_plugin_la-art_bitmap.lo: src/art_bitmap.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-art_bitmap.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-art_bitmap.Tpo -c -o libskins2_plugin_la-art_bitmap.lo `test -f 'src/art_bitmap.cpp' || echo '$(srcdir)/'`src/art_bitmap.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-art_bitmap.Tpo $(DEPDIR)/libskins2_plugin_la-art_bitmap.Plo
#	$(AM_V_CXX) \
#	source='src/art_bitmap.cpp' object='libskins2_plugin_la-art_bitmap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-art_bitmap.lo `test -f 'src/art_bitmap.cpp' || echo '$(srcdir)/'`src/art_bitmap.cpp

libskins2_plugin_la-ft2_bitmap.lo: src/ft2_bitmap.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-ft2_bitmap.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-ft2_bitmap.Tpo -c -o libskins2_plugin_la-ft2_bitmap.lo `test -f 'src/ft2_bitmap.cpp' || echo '$(srcdir)/'`src/ft2_bitmap.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-ft2_bitmap.Tpo $(DEPDIR)/libskins2_plugin_la-ft2_bitmap.Plo
#	$(AM_V_CXX) \
#	source='src/ft2_bitmap.cpp' object='libskins2_plugin_la-ft2_bitmap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-ft2_bitmap.lo `test -f 'src/ft2_bitmap.cpp' || echo '$(srcdir)/'`src/ft2_bitmap.cpp

libskins2_plugin_la-ft2_font.lo: src/ft2_font.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-ft2_font.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-ft2_font.Tpo -c -o libskins2_plugin_la-ft2_font.lo `test -f 'src/ft2_font.cpp' || echo '$(srcdir)/'`src/ft2_font.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-ft2_font.Tpo $(DEPDIR)/libskins2_plugin_la-ft2_font.Plo
#	$(AM_V_CXX) \
#	source='src/ft2_font.cpp' object='libskins2_plugin_la-ft2_font.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-ft2_font.lo `test -f 'src/ft2_font.cpp' || echo '$(srcdir)/'`src/ft2_font.cpp

libskins2_plugin_la-generic_bitmap.lo: src/generic_bitmap.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-generic_bitmap.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-generic_bitmap.Tpo -c -o libskins2_plugin_la-generic_bitmap.lo `test -f 'src/generic_bitmap.cpp' || echo '$(srcdir)/'`src/generic_bitmap.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-generic_bitmap.Tpo $(DEPDIR)/libskins2_plugin_la-generic_bitmap.Plo
#	$(AM_V_CXX) \
#	source='src/generic_bitmap.cpp' object='libskins2_plugin_la-generic_bitmap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-generic_bitmap.lo `test -f 'src/generic_bitmap.cpp' || echo '$(srcdir)/'`src/generic_bitmap.cpp

libskins2_plugin_la-generic_layout.lo: src/generic_layout.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-generic_layout.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-generic_layout.Tpo -c -o libskins2_plugin_la-generic_layout.lo `test -f 'src/generic_layout.cpp' || echo '$(srcdir)/'`src/generic_layout.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-generic_layout.Tpo $(DEPDIR)/libskins2_plugin_la-generic_layout.Plo
#	$(AM_V_CXX) \
#	source='src/generic_layout.cpp' object='libskins2_plugin_la-generic_layout.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-generic_layout.lo `test -f 'src/generic_layout.cpp' || echo '$(srcdir)/'`src/generic_layout.cpp

libskins2_plugin_la-generic_window.lo: src/generic_window.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-generic_window.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-generic_window.Tpo -c -o libskins2_plugin_la-generic_window.lo `test -f 'src/generic_window.cpp' || echo '$(srcdir)/'`src/generic_window.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-generic_window.Tpo $(DEPDIR)/libskins2_plugin_la-generic_window.Plo
#	$(AM_V_CXX) \
#	source='src/generic_window.cpp' object='libskins2_plugin_la-generic_window.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-generic_window.lo `test -f 'src/generic_window.cpp' || echo '$(srcdir)/'`src/generic_window.cpp

libskins2_plugin_la-ini_file.lo: src/ini_file.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-ini_file.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-ini_file.Tpo -c -o libskins2_plugin_la-ini_file.lo `test -f 'src/ini_file.cpp' || echo '$(srcdir)/'`src/ini_file.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-ini_file.Tpo $(DEPDIR)/libskins2_plugin_la-ini_file.Plo
#	$(AM_V_CXX) \
#	source='src/ini_file.cpp' object='libskins2_plugin_la-ini_file.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-ini_file.lo `test -f 'src/ini_file.cpp' || echo '$(srcdir)/'`src/ini_file.cpp

libskins2_plugin_la-logger.lo: src/logger.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-logger.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-logger.Tpo -c -o libskins2_plugin_la-logger.lo `test -f 'src/logger.cpp' || echo '$(srcdir)/'`src/logger.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-logger.Tpo $(DEPDIR)/libskins2_plugin_la-logger.Plo
#	$(AM_V_CXX) \
#	source='src/logger.cpp' object='libskins2_plugin_la-logger.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-logger.lo `test -f 'src/logger.cpp' || echo '$(srcdir)/'`src/logger.cpp

libskins2_plugin_la-os_factory.lo: src/os_factory.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-os_factory.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-os_factory.Tpo -c -o libskins2_plugin_la-os_factory.lo `test -f 'src/os_factory.cpp' || echo '$(srcdir)/'`src/os_factory.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-os_factory.Tpo $(DEPDIR)/libskins2_plugin_la-os_factory.Plo
#	$(AM_V_CXX) \
#	source='src/os_factory.cpp' object='libskins2_plugin_la-os_factory.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-os_factory.lo `test -f 'src/os_factory.cpp' || echo '$(srcdir)/'`src/os_factory.cpp

libskins2_plugin_la-popup.lo: src/popup.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-popup.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-popup.Tpo -c -o libskins2_plugin_la-popup.lo `test -f 'src/popup.cpp' || echo '$(srcdir)/'`src/popup.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-popup.Tpo $(DEPDIR)/libskins2_plugin_la-popup.Plo
#	$(AM_V_CXX) \
#	source='src/popup.cpp' object='libskins2_plugin_la-popup.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-popup.lo `test -f 'src/popup.cpp' || echo '$(srcdir)/'`src/popup.cpp

libskins2_plugin_la-scaled_bitmap.lo: src/scaled_bitmap.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-scaled_bitmap.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-scaled_bitmap.Tpo -c -o libskins2_plugin_la-scaled_bitmap.lo `test -f 'src/scaled_bitmap.cpp' || echo '$(srcdir)/'`src/scaled_bitmap.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-scaled_bitmap.Tpo $(DEPDIR)/libskins2_plugin_la-scaled_bitmap.Plo
#	$(AM_V_CXX) \
#	source='src/scaled_bitmap.cpp' object='libskins2_plugin_la-scaled_bitmap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-scaled_bitmap.lo `test -f 'src/scaled_bitmap.cpp' || echo '$(srcdir)/'`src/scaled_bitmap.cpp

libskins2_plugin_la-skin_main.lo: src/skin_main.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-skin_main.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-skin_main.Tpo -c -o libskins2_plugin_la-skin_main.lo `test -f 'src/skin_main.cpp' || echo '$(srcdir)/'`src/skin_main.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-skin_main.Tpo $(DEPDIR)/libskins2_plugin_la-skin_main.Plo
#	$(AM_V_CXX) \
#	source='src/skin_main.cpp' object='libskins2_plugin_la-skin_main.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-skin_main.lo `test -f 'src/skin_main.cpp' || echo '$(srcdir)/'`src/skin_main.cpp

libskins2_plugin_la-theme.lo: src/theme.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-theme.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-theme.Tpo -c -o libskins2_plugin_la-theme.lo `test -f 'src/theme.cpp' || echo '$(srcdir)/'`src/theme.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-theme.Tpo $(DEPDIR)/libskins2_plugin_la-theme.Plo
#	$(AM_V_CXX) \
#	source='src/theme.cpp' object='libskins2_plugin_la-theme.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-theme.lo `test -f 'src/theme.cpp' || echo '$(srcdir)/'`src/theme.cpp

libskins2_plugin_la-theme_loader.lo: src/theme_loader.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-theme_loader.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-theme_loader.Tpo -c -o libskins2_plugin_la-theme_loader.lo `test -f 'src/theme_loader.cpp' || echo '$(srcdir)/'`src/theme_loader.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-theme_loader.Tpo $(DEPDIR)/libskins2_plugin_la-theme_loader.Plo
#	$(AM_V_CXX) \
#	source='src/theme_loader.cpp' object='libskins2_plugin_la-theme_loader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-theme_loader.lo `test -f 'src/theme_loader.cpp' || echo '$(srcdir)/'`src/theme_loader.cpp

libskins2_plugin_la-theme_repository.lo: src/theme_repository.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-theme_repository.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-theme_repository.Tpo -c -o libskins2_plugin_la-theme_repository.lo `test -f 'src/theme_repository.cpp' || echo '$(srcdir)/'`src/theme_repository.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-theme_repository.Tpo $(DEPDIR)/libskins2_plugin_la-theme_repository.Plo
#	$(AM_V_CXX) \
#	source='src/theme_repository.cpp' object='libskins2_plugin_la-theme_repository.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-theme_repository.lo `test -f 'src/theme_repository.cpp' || echo '$(srcdir)/'`src/theme_repository.cpp

libskins2_plugin_la-tooltip.lo: src/tooltip.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-tooltip.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-tooltip.Tpo -c -o libskins2_plugin_la-tooltip.lo `test -f 'src/tooltip.cpp' || echo '$(srcdir)/'`src/tooltip.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-tooltip.Tpo $(DEPDIR)/libskins2_plugin_la-tooltip.Plo
#	$(AM_V_CXX) \
#	source='src/tooltip.cpp' object='libskins2_plugin_la-tooltip.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-tooltip.lo `test -f 'src/tooltip.cpp' || echo '$(srcdir)/'`src/tooltip.cpp

libskins2_plugin_la-top_window.lo: src/top_window.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-top_window.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-top_window.Tpo -c -o libskins2_plugin_la-top_window.lo `test -f 'src/top_window.cpp' || echo '$(srcdir)/'`src/top_window.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-top_window.Tpo $(DEPDIR)/libskins2_plugin_la-top_window.Plo
#	$(AM_V_CXX) \
#	source='src/top_window.cpp' object='libskins2_plugin_la-top_window.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-top_window.lo `test -f 'src/top_window.cpp' || echo '$(srcdir)/'`src/top_window.cpp

libskins2_plugin_la-var_manager.lo: src/var_manager.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-var_manager.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-var_manager.Tpo -c -o libskins2_plugin_la-var_manager.lo `test -f 'src/var_manager.cpp' || echo '$(srcdir)/'`src/var_manager.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-var_manager.Tpo $(DEPDIR)/libskins2_plugin_la-var_manager.Plo
#	$(AM_V_CXX) \
#	source='src/var_manager.cpp' object='libskins2_plugin_la-var_manager.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-var_manager.lo `test -f 'src/var_manager.cpp' || echo '$(srcdir)/'`src/var_manager.cpp

libskins2_plugin_la-vlcproc.lo: src/vlcproc.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-vlcproc.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-vlcproc.Tpo -c -o libskins2_plugin_la-vlcproc.lo `test -f 'src/vlcproc.cpp' || echo '$(srcdir)/'`src/vlcproc.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-vlcproc.Tpo $(DEPDIR)/libskins2_plugin_la-vlcproc.Plo
#	$(AM_V_CXX) \
#	source='src/vlcproc.cpp' object='libskins2_plugin_la-vlcproc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-vlcproc.lo `test -f 'src/vlcproc.cpp' || echo '$(srcdir)/'`src/vlcproc.cpp

libskins2_plugin_la-vout_window.lo: src/vout_window.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-vout_window.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-vout_window.Tpo -c -o libskins2_plugin_la-vout_window.lo `test -f 'src/vout_window.cpp' || echo '$(srcdir)/'`src/vout_window.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-vout_window.Tpo $(DEPDIR)/libskins2_plugin_la-vout_window.Plo
#	$(AM_V_CXX) \
#	source='src/vout_window.cpp' object='libskins2_plugin_la-vout_window.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-vout_window.lo `test -f 'src/vout_window.cpp' || echo '$(srcdir)/'`src/vout_window.cpp

libskins2_plugin_la-vout_manager.lo: src/vout_manager.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-vout_manager.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-vout_manager.Tpo -c -o libskins2_plugin_la-vout_manager.lo `test -f 'src/vout_manager.cpp' || echo '$(srcdir)/'`src/vout_manager.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-vout_manager.Tpo $(DEPDIR)/libskins2_plugin_la-vout_manager.Plo
#	$(AM_V_CXX) \
#	source='src/vout_manager.cpp' object='libskins2_plugin_la-vout_manager.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-vout_manager.lo `test -f 'src/vout_manager.cpp' || echo '$(srcdir)/'`src/vout_manager.cpp

libskins2_plugin_la-window_manager.lo: src/window_manager.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-window_manager.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-window_manager.Tpo -c -o libskins2_plugin_la-window_manager.lo `test -f 'src/window_manager.cpp' || echo '$(srcdir)/'`src/window_manager.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-window_manager.Tpo $(DEPDIR)/libskins2_plugin_la-window_manager.Plo
#	$(AM_V_CXX) \
#	source='src/window_manager.cpp' object='libskins2_plugin_la-window_manager.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-window_manager.lo `test -f 'src/window_manager.cpp' || echo '$(srcdir)/'`src/window_manager.cpp

libskins2_plugin_la-bezier.lo: utils/bezier.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-bezier.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-bezier.Tpo -c -o libskins2_plugin_la-bezier.lo `test -f 'utils/bezier.cpp' || echo '$(srcdir)/'`utils/bezier.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-bezier.Tpo $(DEPDIR)/libskins2_plugin_la-bezier.Plo
#	$(AM_V_CXX) \
#	source='utils/bezier.cpp' object='libskins2_plugin_la-bezier.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-bezier.lo `test -f 'utils/bezier.cpp' || echo '$(srcdir)/'`utils/bezier.cpp

libskins2_plugin_la-fsm.lo: utils/fsm.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-fsm.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-fsm.Tpo -c -o libskins2_plugin_la-fsm.lo `test -f 'utils/fsm.cpp' || echo '$(srcdir)/'`utils/fsm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-fsm.Tpo $(DEPDIR)/libskins2_plugin_la-fsm.Plo
#	$(AM_V_CXX) \
#	source='utils/fsm.cpp' object='libskins2_plugin_la-fsm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-fsm.lo `test -f 'utils/fsm.cpp' || echo '$(srcdir)/'`utils/fsm.cpp

libskins2_plugin_la-position.lo: utils/position.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-position.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-position.Tpo -c -o libskins2_plugin_la-position.lo `test -f 'utils/position.cpp' || echo '$(srcdir)/'`utils/position.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-position.Tpo $(DEPDIR)/libskins2_plugin_la-position.Plo
#	$(AM_V_CXX) \
#	source='utils/position.cpp' object='libskins2_plugin_la-position.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-position.lo `test -f 'utils/position.cpp' || echo '$(srcdir)/'`utils/position.cpp

libskins2_plugin_la-ustring.lo: utils/ustring.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-ustring.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-ustring.Tpo -c -o libskins2_plugin_la-ustring.lo `test -f 'utils/ustring.cpp' || echo '$(srcdir)/'`utils/ustring.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-ustring.Tpo $(DEPDIR)/libskins2_plugin_la-ustring.Plo
#	$(AM_V_CXX) \
#	source='utils/ustring.cpp' object='libskins2_plugin_la-ustring.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-ustring.lo `test -f 'utils/ustring.cpp' || echo '$(srcdir)/'`utils/ustring.cpp

libskins2_plugin_la-var_bool.lo: utils/var_bool.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-var_bool.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-var_bool.Tpo -c -o libskins2_plugin_la-var_bool.lo `test -f 'utils/var_bool.cpp' || echo '$(srcdir)/'`utils/var_bool.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-var_bool.Tpo $(DEPDIR)/libskins2_plugin_la-var_bool.Plo
#	$(AM_V_CXX) \
#	source='utils/var_bool.cpp' object='libskins2_plugin_la-var_bool.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-var_bool.lo `test -f 'utils/var_bool.cpp' || echo '$(srcdir)/'`utils/var_bool.cpp

libskins2_plugin_la-var_list.lo: utils/var_list.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-var_list.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-var_list.Tpo -c -o libskins2_plugin_la-var_list.lo `test -f 'utils/var_list.cpp' || echo '$(srcdir)/'`utils/var_list.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-var_list.Tpo $(DEPDIR)/libskins2_plugin_la-var_list.Plo
#	$(AM_V_CXX) \
#	source='utils/var_list.cpp' object='libskins2_plugin_la-var_list.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-var_list.lo `test -f 'utils/var_list.cpp' || echo '$(srcdir)/'`utils/var_list.cpp

libskins2_plugin_la-var_percent.lo: utils/var_percent.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-var_percent.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-var_percent.Tpo -c -o libskins2_plugin_la-var_percent.lo `test -f 'utils/var_percent.cpp' || echo '$(srcdir)/'`utils/var_percent.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-var_percent.Tpo $(DEPDIR)/libskins2_plugin_la-var_percent.Plo
#	$(AM_V_CXX) \
#	source='utils/var_percent.cpp' object='libskins2_plugin_la-var_percent.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-var_percent.lo `test -f 'utils/var_percent.cpp' || echo '$(srcdir)/'`utils/var_percent.cpp

libskins2_plugin_la-var_text.lo: utils/var_text.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-var_text.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-var_text.Tpo -c -o libskins2_plugin_la-var_text.lo `test -f 'utils/var_text.cpp' || echo '$(srcdir)/'`utils/var_text.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-var_text.Tpo $(DEPDIR)/libskins2_plugin_la-var_text.Plo
#	$(AM_V_CXX) \
#	source='utils/var_text.cpp' object='libskins2_plugin_la-var_text.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-var_text.lo `test -f 'utils/var_text.cpp' || echo '$(srcdir)/'`utils/var_text.cpp

libskins2_plugin_la-var_string.lo: utils/var_string.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-var_string.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-var_string.Tpo -c -o libskins2_plugin_la-var_string.lo `test -f 'utils/var_string.cpp' || echo '$(srcdir)/'`utils/var_string.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-var_string.Tpo $(DEPDIR)/libskins2_plugin_la-var_string.Plo
#	$(AM_V_CXX) \
#	source='utils/var_string.cpp' object='libskins2_plugin_la-var_string.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-var_string.lo `test -f 'utils/var_string.cpp' || echo '$(srcdir)/'`utils/var_string.cpp

libskins2_plugin_la-var_tree.lo: utils/var_tree.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-var_tree.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-var_tree.Tpo -c -o libskins2_plugin_la-var_tree.lo `test -f 'utils/var_tree.cpp' || echo '$(srcdir)/'`utils/var_tree.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-var_tree.Tpo $(DEPDIR)/libskins2_plugin_la-var_tree.Plo
#	$(AM_V_CXX) \
#	source='utils/var_tree.cpp' object='libskins2_plugin_la-var_tree.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-var_tree.lo `test -f 'utils/var_tree.cpp' || echo '$(srcdir)/'`utils/var_tree.cpp

libskins2_plugin_la-equalizer.lo: vars/equalizer.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-equalizer.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-equalizer.Tpo -c -o libskins2_plugin_la-equalizer.lo `test -f 'vars/equalizer.cpp' || echo '$(srcdir)/'`vars/equalizer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-equalizer.Tpo $(DEPDIR)/libskins2_plugin_la-equalizer.Plo
#	$(AM_V_CXX) \
#	source='vars/equalizer.cpp' object='libskins2_plugin_la-equalizer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-equalizer.lo `test -f 'vars/equalizer.cpp' || echo '$(srcdir)/'`vars/equalizer.cpp

libskins2_plugin_la-playtree.lo: vars/playtree.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-playtree.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-playtree.Tpo -c -o libskins2_plugin_la-playtree.lo `test -f 'vars/playtree.cpp' || echo '$(srcdir)/'`vars/playtree.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-playtree.Tpo $(DEPDIR)/libskins2_plugin_la-playtree.Plo
#	$(AM_V_CXX) \
#	source='vars/playtree.cpp' object='libskins2_plugin_la-playtree.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-playtree.lo `test -f 'vars/playtree.cpp' || echo '$(srcdir)/'`vars/playtree.cpp

libskins2_plugin_la-time.lo: vars/time.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-time.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-time.Tpo -c -o libskins2_plugin_la-time.lo `test -f 'vars/time.cpp' || echo '$(srcdir)/'`vars/time.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-time.Tpo $(DEPDIR)/libskins2_plugin_la-time.Plo
#	$(AM_V_CXX) \
#	source='vars/time.cpp' object='libskins2_plugin_la-time.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-time.lo `test -f 'vars/time.cpp' || echo '$(srcdir)/'`vars/time.cpp

libskins2_plugin_la-volume.lo: vars/volume.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-volume.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-volume.Tpo -c -o libskins2_plugin_la-volume.lo `test -f 'vars/volume.cpp' || echo '$(srcdir)/'`vars/volume.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-volume.Tpo $(DEPDIR)/libskins2_plugin_la-volume.Plo
#	$(AM_V_CXX) \
#	source='vars/volume.cpp' object='libskins2_plugin_la-volume.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-volume.lo `test -f 'vars/volume.cpp' || echo '$(srcdir)/'`vars/volume.cpp

libskins2_plugin_la-win32_dragdrop.lo: win32/win32_dragdrop.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-win32_dragdrop.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-win32_dragdrop.Tpo -c -o libskins2_plugin_la-win32_dragdrop.lo `test -f 'win32/win32_dragdrop.cpp' || echo '$(srcdir)/'`win32/win32_dragdrop.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-win32_dragdrop.Tpo $(DEPDIR)/libskins2_plugin_la-win32_dragdrop.Plo
#	$(AM_V_CXX) \
#	source='win32/win32_dragdrop.cpp' object='libskins2_plugin_la-win32_dragdrop.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-win32_dragdrop.lo `test -f 'win32/win32_dragdrop.cpp' || echo '$(srcdir)/'`win32/win32_dragdrop.cpp

libskins2_plugin_la-win32_factory.lo: win32/win32_factory.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-win32_factory.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-win32_factory.Tpo -c -o libskins2_plugin_la-win32_factory.lo `test -f 'win32/win32_factory.cpp' || echo '$(srcdir)/'`win32/win32_factory.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-win32_factory.Tpo $(DEPDIR)/libskins2_plugin_la-win32_factory.Plo
#	$(AM_V_CXX) \
#	source='win32/win32_factory.cpp' object='libskins2_plugin_la-win32_factory.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-win32_factory.lo `test -f 'win32/win32_factory.cpp' || echo '$(srcdir)/'`win32/win32_factory.cpp

libskins2_plugin_la-win32_graphics.lo: win32/win32_graphics.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-win32_graphics.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-win32_graphics.Tpo -c -o libskins2_plugin_la-win32_graphics.lo `test -f 'win32/win32_graphics.cpp' || echo '$(srcdir)/'`win32/win32_graphics.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-win32_graphics.Tpo $(DEPDIR)/libskins2_plugin_la-win32_graphics.Plo
#	$(AM_V_CXX) \
#	source='win32/win32_graphics.cpp' object='libskins2_plugin_la-win32_graphics.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-win32_graphics.lo `test -f 'win32/win32_graphics.cpp' || echo '$(srcdir)/'`win32/win32_graphics.cpp

libskins2_plugin_la-win32_loop.lo: win32/win32_loop.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-win32_loop.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-win32_loop.Tpo -c -o libskins2_plugin_la-win32_loop.lo `test -f 'win32/win32_loop.cpp' || echo '$(srcdir)/'`win32/win32_loop.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-win32_loop.Tpo $(DEPDIR)/libskins2_plugin_la-win32_loop.Plo
#	$(AM_V_CXX) \
#	source='win32/win32_loop.cpp' object='libskins2_plugin_la-win32_loop.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-win32_loop.lo `test -f 'win32/win32_loop.cpp' || echo '$(srcdir)/'`win32/win32_loop.cpp

libskins2_plugin_la-win32_popup.lo: win32/win32_popup.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-win32_popup.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-win32_popup.Tpo -c -o libskins2_plugin_la-win32_popup.lo `test -f 'win32/win32_popup.cpp' || echo '$(srcdir)/'`win32/win32_popup.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-win32_popup.Tpo $(DEPDIR)/libskins2_plugin_la-win32_popup.Plo
#	$(AM_V_CXX) \
#	source='win32/win32_popup.cpp' object='libskins2_plugin_la-win32_popup.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-win32_popup.lo `test -f 'win32/win32_popup.cpp' || echo '$(srcdir)/'`win32/win32_popup.cpp

libskins2_plugin_la-win32_timer.lo: win32/win32_timer.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-win32_timer.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-win32_timer.Tpo -c -o libskins2_plugin_la-win32_timer.lo `test -f 'win32/win32_timer.cpp' || echo '$(srcdir)/'`win32/win32_timer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-win32_timer.Tpo $(DEPDIR)/libskins2_plugin_la-win32_timer.Plo
#	$(AM_V_CXX) \
#	source='win32/win32_timer.cpp' object='libskins2_plugin_la-win32_timer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-win32_timer.lo `test -f 'win32/win32_timer.cpp' || echo '$(srcdir)/'`win32/win32_timer.cpp

libskins2_plugin_la-win32_tooltip.lo: win32/win32_tooltip.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-win32_tooltip.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-win32_tooltip.Tpo -c -o libskins2_plugin_la-win32_tooltip.lo `test -f 'win32/win32_tooltip.cpp' || echo '$(srcdir)/'`win32/win32_tooltip.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-win32_tooltip.Tpo $(DEPDIR)/libskins2_plugin_la-win32_tooltip.Plo
#	$(AM_V_CXX) \
#	source='win32/win32_tooltip.cpp' object='libskins2_plugin_la-win32_tooltip.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-win32_tooltip.lo `test -f 'win32/win32_tooltip.cpp' || echo '$(srcdir)/'`win32/win32_tooltip.cpp

libskins2_plugin_la-win32_window.lo: win32/win32_window.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-win32_window.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-win32_window.Tpo -c -o libskins2_plugin_la-win32_window.lo `test -f 'win32/win32_window.cpp' || echo '$(srcdir)/'`win32/win32_window.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-win32_window.Tpo $(DEPDIR)/libskins2_plugin_la-win32_window.Plo
#	$(AM_V_CXX) \
#	source='win32/win32_window.cpp' object='libskins2_plugin_la-win32_window.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-win32_window.lo `test -f 'win32/win32_window.cpp' || echo '$(srcdir)/'`win32/win32_window.cpp

libskins2_plugin_la-macosx_dragdrop.lo: macosx/macosx_dragdrop.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-macosx_dragdrop.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-macosx_dragdrop.Tpo -c -o libskins2_plugin_la-macosx_dragdrop.lo `test -f 'macosx/macosx_dragdrop.cpp' || echo '$(srcdir)/'`macosx/macosx_dragdrop.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-macosx_dragdrop.Tpo $(DEPDIR)/libskins2_plugin_la-macosx_dragdrop.Plo
#	$(AM_V_CXX) \
#	source='macosx/macosx_dragdrop.cpp' object='libskins2_plugin_la-macosx_dragdrop.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-macosx_dragdrop.lo `test -f 'macosx/macosx_dragdrop.cpp' || echo '$(srcdir)/'`macosx/macosx_dragdrop.cpp

libskins2_plugin_la-macosx_factory.lo: macosx/macosx_factory.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-macosx_factory.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-macosx_factory.Tpo -c -o libskins2_plugin_la-macosx_factory.lo `test -f 'macosx/macosx_factory.cpp' || echo '$(srcdir)/'`macosx/macosx_factory.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-macosx_factory.Tpo $(DEPDIR)/libskins2_plugin_la-macosx_factory.Plo
#	$(AM_V_CXX) \
#	source='macosx/macosx_factory.cpp' object='libskins2_plugin_la-macosx_factory.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-macosx_factory.lo `test -f 'macosx/macosx_factory.cpp' || echo '$(srcdir)/'`macosx/macosx_factory.cpp

libskins2_plugin_la-macosx_graphics.lo: macosx/macosx_graphics.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-macosx_graphics.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-macosx_graphics.Tpo -c -o libskins2_plugin_la-macosx_graphics.lo `test -f 'macosx/macosx_graphics.cpp' || echo '$(srcdir)/'`macosx/macosx_graphics.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-macosx_graphics.Tpo $(DEPDIR)/libskins2_plugin_la-macosx_graphics.Plo
#	$(AM_V_CXX) \
#	source='macosx/macosx_graphics.cpp' object='libskins2_plugin_la-macosx_graphics.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-macosx_graphics.lo `test -f 'macosx/macosx_graphics.cpp' || echo '$(srcdir)/'`macosx/macosx_graphics.cpp

libskins2_plugin_la-macosx_loop.lo: macosx/macosx_loop.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-macosx_loop.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-macosx_loop.Tpo -c -o libskins2_plugin_la-macosx_loop.lo `test -f 'macosx/macosx_loop.cpp' || echo '$(srcdir)/'`macosx/macosx_loop.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-macosx_loop.Tpo $(DEPDIR)/libskins2_plugin_la-macosx_loop.Plo
#	$(AM_V_CXX) \
#	source='macosx/macosx_loop.cpp' object='libskins2_plugin_la-macosx_loop.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-macosx_loop.lo `test -f 'macosx/macosx_loop.cpp' || echo '$(srcdir)/'`macosx/macosx_loop.cpp

libskins2_plugin_la-macosx_popup.lo: macosx/macosx_popup.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-macosx_popup.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-macosx_popup.Tpo -c -o libskins2_plugin_la-macosx_popup.lo `test -f 'macosx/macosx_popup.cpp' || echo '$(srcdir)/'`macosx/macosx_popup.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-macosx_popup.Tpo $(DEPDIR)/libskins2_plugin_la-macosx_popup.Plo
#	$(AM_V_CXX) \
#	source='macosx/macosx_popup.cpp' object='libskins2_plugin_la-macosx_popup.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-macosx_popup.lo `test -f 'macosx/macosx_popup.cpp' || echo '$(srcdir)/'`macosx/macosx_popup.cpp

libskins2_plugin_la-macosx_timer.lo: macosx/macosx_timer.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-macosx_timer.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-macosx_timer.Tpo -c -o libskins2_plugin_la-macosx_timer.lo `test -f 'macosx/macosx_timer.cpp' || echo '$(srcdir)/'`macosx/macosx_timer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-macosx_timer.Tpo $(DEPDIR)/libskins2_plugin_la-macosx_timer.Plo
#	$(AM_V_CXX) \
#	source='macosx/macosx_timer.cpp' object='libskins2_plugin_la-macosx_timer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-macosx_timer.lo `test -f 'macosx/macosx_timer.cpp' || echo '$(srcdir)/'`macosx/macosx_timer.cpp

libskins2_plugin_la-macosx_window.lo: macosx/macosx_window.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-macosx_window.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-macosx_window.Tpo -c -o libskins2_plugin_la-macosx_window.lo `test -f 'macosx/macosx_window.cpp' || echo '$(srcdir)/'`macosx/macosx_window.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-macosx_window.Tpo $(DEPDIR)/libskins2_plugin_la-macosx_window.Plo
#	$(AM_V_CXX) \
#	source='macosx/macosx_window.cpp' object='libskins2_plugin_la-macosx_window.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-macosx_window.lo `test -f 'macosx/macosx_window.cpp' || echo '$(srcdir)/'`macosx/macosx_window.cpp

libskins2_plugin_la-macosx_tooltip.lo: macosx/macosx_tooltip.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-macosx_tooltip.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-macosx_tooltip.Tpo -c -o libskins2_plugin_la-macosx_tooltip.lo `test -f 'macosx/macosx_tooltip.cpp' || echo '$(srcdir)/'`macosx/macosx_tooltip.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-macosx_tooltip.Tpo $(DEPDIR)/libskins2_plugin_la-macosx_tooltip.Plo
#	$(AM_V_CXX) \
#	source='macosx/macosx_tooltip.cpp' object='libskins2_plugin_la-macosx_tooltip.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-macosx_tooltip.lo `test -f 'macosx/macosx_tooltip.cpp' || echo '$(srcdir)/'`macosx/macosx_tooltip.cpp

libskins2_plugin_la-x11_display.lo: x11/x11_display.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-x11_display.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-x11_display.Tpo -c -o libskins2_plugin_la-x11_display.lo `test -f 'x11/x11_display.cpp' || echo '$(srcdir)/'`x11/x11_display.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-x11_display.Tpo $(DEPDIR)/libskins2_plugin_la-x11_display.Plo
#	$(AM_V_CXX) \
#	source='x11/x11_display.cpp' object='libskins2_plugin_la-x11_display.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-x11_display.lo `test -f 'x11/x11_display.cpp' || echo '$(srcdir)/'`x11/x11_display.cpp

libskins2_plugin_la-x11_dragdrop.lo: x11/x11_dragdrop.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-x11_dragdrop.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-x11_dragdrop.Tpo -c -o libskins2_plugin_la-x11_dragdrop.lo `test -f 'x11/x11_dragdrop.cpp' || echo '$(srcdir)/'`x11/x11_dragdrop.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-x11_dragdrop.Tpo $(DEPDIR)/libskins2_plugin_la-x11_dragdrop.Plo
#	$(AM_V_CXX) \
#	source='x11/x11_dragdrop.cpp' object='libskins2_plugin_la-x11_dragdrop.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-x11_dragdrop.lo `test -f 'x11/x11_dragdrop.cpp' || echo '$(srcdir)/'`x11/x11_dragdrop.cpp

libskins2_plugin_la-x11_factory.lo: x11/x11_factory.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-x11_factory.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-x11_factory.Tpo -c -o libskins2_plugin_la-x11_factory.lo `test -f 'x11/x11_factory.cpp' || echo '$(srcdir)/'`x11/x11_factory.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-x11_factory.Tpo $(DEPDIR)/libskins2_plugin_la-x11_factory.Plo
#	$(AM_V_CXX) \
#	source='x11/x11_factory.cpp' object='libskins2_plugin_la-x11_factory.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-x11_factory.lo `test -f 'x11/x11_factory.cpp' || echo '$(srcdir)/'`x11/x11_factory.cpp

libskins2_plugin_la-x11_graphics.lo: x11/x11_graphics.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-x11_graphics.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-x11_graphics.Tpo -c -o libskins2_plugin_la-x11_graphics.lo `test -f 'x11/x11_graphics.cpp' || echo '$(srcdir)/'`x11/x11_graphics.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-x11_graphics.Tpo $(DEPDIR)/libskins2_plugin_la-x11_graphics.Plo
#	$(AM_V_CXX) \
#	source='x11/x11_graphics.cpp' object='libskins2_plugin_la-x11_graphics.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-x11_graphics.lo `test -f 'x11/x11_graphics.cpp' || echo '$(srcdir)/'`x11/x11_graphics.cpp

libskins2_plugin_la-x11_loop.lo: x11/x11_loop.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-x11_loop.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-x11_loop.Tpo -c -o libskins2_plugin_la-x11_loop.lo `test -f 'x11/x11_loop.cpp' || echo '$(srcdir)/'`x11/x11_loop.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-x11_loop.Tpo $(DEPDIR)/libskins2_plugin_la-x11_loop.Plo
#	$(AM_V_CXX) \
#	source='x11/x11_loop.cpp' object='libskins2_plugin_la-x11_loop.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-x11_loop.lo `test -f 'x11/x11_loop.cpp' || echo '$(srcdir)/'`x11/x11_loop.cpp

libskins2_plugin_la-x11_popup.lo: x11/x11_popup.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-x11_popup.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-x11_popup.Tpo -c -o libskins2_plugin_la-x11_popup.lo `test -f 'x11/x11_popup.cpp' || echo '$(srcdir)/'`x11/x11_popup.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-x11_popup.Tpo $(DEPDIR)/libskins2_plugin_la-x11_popup.Plo
#	$(AM_V_CXX) \
#	source='x11/x11_popup.cpp' object='libskins2_plugin_la-x11_popup.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-x11_popup.lo `test -f 'x11/x11_popup.cpp' || echo '$(srcdir)/'`x11/x11_popup.cpp

libskins2_plugin_la-x11_timer.lo: x11/x11_timer.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-x11_timer.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-x11_timer.Tpo -c -o libskins2_plugin_la-x11_timer.lo `test -f 'x11/x11_timer.cpp' || echo '$(srcdir)/'`x11/x11_timer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-x11_timer.Tpo $(DEPDIR)/libskins2_plugin_la-x11_timer.Plo
#	$(AM_V_CXX) \
#	source='x11/x11_timer.cpp' object='libskins2_plugin_la-x11_timer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-x11_timer.lo `test -f 'x11/x11_timer.cpp' || echo '$(srcdir)/'`x11/x11_timer.cpp

libskins2_plugin_la-x11_window.lo: x11/x11_window.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-x11_window.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-x11_window.Tpo -c -o libskins2_plugin_la-x11_window.lo `test -f 'x11/x11_window.cpp' || echo '$(srcdir)/'`x11/x11_window.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-x11_window.Tpo $(DEPDIR)/libskins2_plugin_la-x11_window.Plo
#	$(AM_V_CXX) \
#	source='x11/x11_window.cpp' object='libskins2_plugin_la-x11_window.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-x11_window.lo `test -f 'x11/x11_window.cpp' || echo '$(srcdir)/'`x11/x11_window.cpp

libskins2_plugin_la-x11_tooltip.lo: x11/x11_tooltip.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libskins2_plugin_la-x11_tooltip.lo -MD -MP -MF $(DEPDIR)/libskins2_plugin_la-x11_tooltip.Tpo -c -o libskins2_plugin_la-x11_tooltip.lo `test -f 'x11/x11_tooltip.cpp' || echo '$(srcdir)/'`x11/x11_tooltip.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libskins2_plugin_la-x11_tooltip.Tpo $(DEPDIR)/libskins2_plugin_la-x11_tooltip.Plo
#	$(AM_V_CXX) \
#	source='x11/x11_tooltip.cpp' object='libskins2_plugin_la-x11_tooltip.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libskins2_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libskins2_plugin_la-x11_tooltip.lo `test -f 'x11/x11_tooltip.cpp' || echo '$(srcdir)/'`x11/x11_tooltip.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(libvlcdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-libvlcLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-libvlcLTLIBRARIES

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libvlcLTLIBRARIES

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-libvlcLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libvlcLTLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-libvlcLTLIBRARIES


$(srcdir)/Makefile.am: $(srcdir)/Modules.am $(top_srcdir)/modules/genmf
	$(AM_V_GEN)cd \$(top_srcdir) && \$(SHELL) modules/genmf $(dir)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
