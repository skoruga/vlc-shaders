# Makefile.in generated by automake 1.11 from Makefile.am.
# modules/audio_output/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# modules/audio_output/Makefile.am automatically generated from modules/audio_output/Modules.am by modules/genmf
# DO NOT EDIT THIS FILE DIRECTLY! See Modules.am instead.

# Common code for VLC modules/.../Makefile.am
#
# Copyright (C) 2005-2007 the VideoLAN team
# Copyright (C) 2005-2008 RÃ©mi Denis-Courmont
#
# Authors: Sam Hocevar <sam@zoy.org>


pkgdatadir = $(datadir)/vlc
pkgincludedir = $(includedir)/vlc
pkglibdir = $(libdir)/vlc
pkglibexecdir = $(libexecdir)/vlc
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i386-pc-linux-gnu
host_triplet = i586-pc-mingw32msvc
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/Modules.am $(top_srcdir)/modules/common.am
subdir = modules/audio_output
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/flags.m4 \
	$(top_srcdir)/m4/gettext.m4 $(top_srcdir)/m4/iconv.m4 \
	$(top_srcdir)/m4/intlmacosx.m4 $(top_srcdir)/m4/lib-ld.m4 \
	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/nls.m4 \
	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/m4/po.m4 \
	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/m4/vlc.m4 \
	$(top_srcdir)/m4/with_pkg.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libvlcdir)"
LTLIBRARIES = $(libvlc_LTLIBRARIES)
am__DEPENDENCIES_1 = `$(VLC_CONFIG) plugin $@` $(LTLIBVLCCORE) \
	$(top_builddir)/compat/libcompat.la
am__objects_1 = libalsa_plugin_la-alsa.lo
am_libalsa_plugin_la_OBJECTS = $(am__objects_1)
nodist_libalsa_plugin_la_OBJECTS =
libalsa_plugin_la_OBJECTS = $(am_libalsa_plugin_la_OBJECTS) \
	$(nodist_libalsa_plugin_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
libalsa_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libalsa_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am__objects_2 = libaout_directx_plugin_la-directx.lo
am_libaout_directx_plugin_la_OBJECTS = $(am__objects_2)
nodist_libaout_directx_plugin_la_OBJECTS =
libaout_directx_plugin_la_OBJECTS =  \
	$(am_libaout_directx_plugin_la_OBJECTS) \
	$(nodist_libaout_directx_plugin_la_OBJECTS)
libaout_directx_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libaout_directx_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_3 = libaout_file_plugin_la-file.lo
am_libaout_file_plugin_la_OBJECTS = $(am__objects_3)
nodist_libaout_file_plugin_la_OBJECTS =
libaout_file_plugin_la_OBJECTS = $(am_libaout_file_plugin_la_OBJECTS) \
	$(nodist_libaout_file_plugin_la_OBJECTS)
libaout_file_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libaout_file_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_4 = libaout_sdl_plugin_la-sdl.lo
am_libaout_sdl_plugin_la_OBJECTS = $(am__objects_4)
nodist_libaout_sdl_plugin_la_OBJECTS =
libaout_sdl_plugin_la_OBJECTS = $(am_libaout_sdl_plugin_la_OBJECTS) \
	$(nodist_libaout_sdl_plugin_la_OBJECTS)
libaout_sdl_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libaout_sdl_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_5 = libauhal_plugin_la-auhal.lo
am_libauhal_plugin_la_OBJECTS = $(am__objects_5)
nodist_libauhal_plugin_la_OBJECTS =
libauhal_plugin_la_OBJECTS = $(am_libauhal_plugin_la_OBJECTS) \
	$(nodist_libauhal_plugin_la_OBJECTS)
libauhal_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libauhal_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_6 = libhd1000a_plugin_la-hd1000a.lo
am_libhd1000a_plugin_la_OBJECTS = $(am__objects_6)
nodist_libhd1000a_plugin_la_OBJECTS =
libhd1000a_plugin_la_OBJECTS = $(am_libhd1000a_plugin_la_OBJECTS) \
	$(nodist_libhd1000a_plugin_la_OBJECTS)
libhd1000a_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libhd1000a_plugin_la_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_7 = libjack_plugin_la-jack.lo
am_libjack_plugin_la_OBJECTS = $(am__objects_7)
nodist_libjack_plugin_la_OBJECTS =
libjack_plugin_la_OBJECTS = $(am_libjack_plugin_la_OBJECTS) \
	$(nodist_libjack_plugin_la_OBJECTS)
libjack_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libjack_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am__objects_8 = liboss_plugin_la-oss.lo
am_liboss_plugin_la_OBJECTS = $(am__objects_8)
nodist_liboss_plugin_la_OBJECTS =
liboss_plugin_la_OBJECTS = $(am_liboss_plugin_la_OBJECTS) \
	$(nodist_liboss_plugin_la_OBJECTS)
liboss_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(liboss_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am__objects_9 = libportaudio_plugin_la-portaudio.lo
am_libportaudio_plugin_la_OBJECTS = $(am__objects_9)
nodist_libportaudio_plugin_la_OBJECTS =
libportaudio_plugin_la_OBJECTS = $(am_libportaudio_plugin_la_OBJECTS) \
	$(nodist_libportaudio_plugin_la_OBJECTS)
libportaudio_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libportaudio_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_10 = libpulse_plugin_la-pulse.lo
am_libpulse_plugin_la_OBJECTS = $(am__objects_10)
nodist_libpulse_plugin_la_OBJECTS =
libpulse_plugin_la_OBJECTS = $(am_libpulse_plugin_la_OBJECTS) \
	$(nodist_libpulse_plugin_la_OBJECTS)
libpulse_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libpulse_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_11 = libwaveout_plugin_la-waveout.lo
am_libwaveout_plugin_la_OBJECTS = $(am__objects_11)
nodist_libwaveout_plugin_la_OBJECTS =
libwaveout_plugin_la_OBJECTS = $(am_libwaveout_plugin_la_OBJECTS) \
	$(nodist_libwaveout_plugin_la_OBJECTS)
libwaveout_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libwaveout_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/autotools/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX   " $@;
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(libalsa_plugin_la_SOURCES) \
	$(nodist_libalsa_plugin_la_SOURCES) \
	$(libaout_directx_plugin_la_SOURCES) \
	$(nodist_libaout_directx_plugin_la_SOURCES) \
	$(libaout_file_plugin_la_SOURCES) \
	$(nodist_libaout_file_plugin_la_SOURCES) \
	$(libaout_sdl_plugin_la_SOURCES) \
	$(nodist_libaout_sdl_plugin_la_SOURCES) \
	$(libauhal_plugin_la_SOURCES) \
	$(nodist_libauhal_plugin_la_SOURCES) \
	$(libhd1000a_plugin_la_SOURCES) \
	$(nodist_libhd1000a_plugin_la_SOURCES) \
	$(libjack_plugin_la_SOURCES) \
	$(nodist_libjack_plugin_la_SOURCES) \
	$(liboss_plugin_la_SOURCES) $(nodist_liboss_plugin_la_SOURCES) \
	$(libportaudio_plugin_la_SOURCES) \
	$(nodist_libportaudio_plugin_la_SOURCES) \
	$(libpulse_plugin_la_SOURCES) \
	$(nodist_libpulse_plugin_la_SOURCES) \
	$(libwaveout_plugin_la_SOURCES) \
	$(nodist_libwaveout_plugin_la_SOURCES)
DIST_SOURCES = $(libalsa_plugin_la_SOURCES) \
	$(libaout_directx_plugin_la_SOURCES) \
	$(libaout_file_plugin_la_SOURCES) \
	$(libaout_sdl_plugin_la_SOURCES) $(libauhal_plugin_la_SOURCES) \
	$(libhd1000a_plugin_la_SOURCES) $(libjack_plugin_la_SOURCES) \
	$(liboss_plugin_la_SOURCES) $(libportaudio_plugin_la_SOURCES) \
	$(libpulse_plugin_la_SOURCES) $(libwaveout_plugin_la_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/skoruga/vlc-shaders/vlc/autotools/missing --run aclocal-1.11
ALIASES =  cvlc rvlc svlc qvlc
ALSA_CFLAGS = 
ALSA_LIBS = 
AMTAR = ${SHELL} /home/skoruga/vlc-shaders/vlc/autotools/missing --run tar
AM_CPPFLAGS = 
AM_DEFAULT_VERBOSITY = 0
AR = ar
ARCH = i586 mmx sse sse2
ARM_NEON_CFLAGS = 
AS = as
ASM = 
AUTOCONF = ${SHELL} /home/skoruga/vlc-shaders/vlc/autotools/missing --run autoconf
AUTOHEADER = ${SHELL} /home/skoruga/vlc-shaders/vlc/autotools/missing --run autoheader
AUTOMAKE = ${SHELL} /home/skoruga/vlc-shaders/vlc/autotools/missing --run automake-1.11
AVCODEC_CFLAGS = -IC:/Msys/1.0/win32/include  
AVCODEC_LIBS = -LC:/Msys/1.0/win32/lib -lavcodec -lpsapi -lz -lgsm -lmp3lame -lm -lvpx -lavutil  
AVFORMAT_CFLAGS = -IC:/Msys/1.0/win32/include  
AVFORMAT_LIBS = -LC:/Msys/1.0/win32/lib -lavformat -lavcodec -lpsapi -lz -lgsm -lmp3lame -lm -lvpx -lavutil  
AWK = gawk
BONJOUR_CFLAGS = 
BONJOUR_LIBS = 
CACA_CFLAGS = -IC:/Msys/1.0/win32/include  
CACA_LIBS = -LC:/Msys/1.0/win32/lib -lcaca -lz  
CC = gcc -std=gnu99
CCAS = gcc -std=gnu99
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -g -O2
CCDEPMODE = depmode=gcc3
CFLAGS =  -mms-bitfields -Wall -Wextra -Wsign-compare -Wundef -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wmissing-prototypes -Wvolatile-register-var -Werror-implicit-function-declaration
CONTRIB_DIR = 
COPYRIGHT_MESSAGE = Copyright Â© 1996-2010 the VideoLAN team
COPYRIGHT_YEARS = 1996-2010
CPP = gcc -std=gnu99 -E
CPPFLAGS = -I$(top_srcdir)/include -I$(top_builddir)/include -I/usr/win32/include -I/usr/win32/include/ebml -D__USE_MINGW_ANSI_STDIO=1 -DSYS_MINGW32
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -mms-bitfields 
CYGPATH = 
CYGPATH_W = echo
DBUS_CFLAGS = 
DBUS_LIBS = 
DC1394_CFLAGS = 
DC1394_LIBS = 
DCA_CFLAGS = -IC:/Msys/1.0/win32/include/libdca  
DCA_LIBS = -LC:/Msys/1.0/win32/lib -ldca  
DEFS = -DHAVE_CONFIG_H
DEFS_BIGENDIAN = 
DEPDIR = .deps
DIRAC_CFLAGS = 
DIRAC_LIBS = 
DIRECTFB_CFLAGS = 
DIRECTFB_CONFIG = 
DIRECTFB_LIBS = 
DLLTOOL = dlltool
DSYMUTIL = 
DUMPBIN = :
DVDNAV_CONFIG = /usr/win32/bin/dvdnav-config
DV_CFLAGS = 
DV_LIBS = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = .exe
FGREP = /bin/grep -F
FILE_LIBVLCCORE_DLL = !define LIBVLCCORE_DLL libvlccore.dll
FILE_LIBVLC_DLL = !define LIBVLC_DLL libvlc.dll
FLAC_CFLAGS = -IC:/Msys/1.0/win32/include/FLAC -IC:/Msys/1.0/win32/include  
FLAC_LIBS = -LC:/Msys/1.0/win32/lib -lFLAC -lm -logg  
FLUIDSYNTH_CFLAGS = -IC:/Msys/1.0/win32/include  
FLUIDSYNTH_LIBS = -LC:/Msys/1.0/win32/lib -lfluidsynth -ldsound -lwinmm  
FREETYPE_CFLAGS = -IC:/Msys/1.0/win32/include/freetype2 -IC:/Msys/1.0/win32/include  
FREETYPE_LIBS = -LC:/Msys/1.0/win32/lib -lfreetype -lz  
FRIBIDI_CFLAGS = -IC:/Msys/1.0/win32/include/fribidi  
FRIBIDI_LIBS = -LC:/Msys/1.0/win32/lib -lfribidi  
GCRYPT_CFLAGS = -I/usr/win32/include
GCRYPT_LIBS = -L/usr/win32/lib -lgcrypt -lgpg-error
GETTEXT_MACRO_VERSION = 0.17
GL_CFLAGS = 
GL_LIBS = 
GMSGFMT = :
GMSGFMT_015 = :
GNOMEVFS_CFLAGS = 
GNOMEVFS_LIBS = 
GNUGETOPT_LIBS = 
GNUTLS_CFLAGS = -IC:/Msys/1.0/win32/include  
GNUTLS_LIBS = -LC:/Msys/1.0/win32/lib -lgnutls  
GOOM_CFLAGS = -IC:/Msys/1.0/win32/include  
GOOM_LIBS = -LC:/Msys/1.0/win32/lib -lgoom2  
GREP = /bin/grep
HILDON_CFLAGS = 
HILDON_FM_CFLAGS = 
HILDON_FM_LIBS = 
HILDON_LIBS = 
INSTALL = /bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTLLIBS = 
INTL_MACOSX_LIBS = 
JACK_CFLAGS = 
JACK_LIBS = 
KATE_CFLAGS = -IC:/Msys/1.0/win32/include  
KATE_LIBS = -LC:/Msys/1.0/win32/lib -lkate  
KDE4_CONFIG = kde4-config
LD = ld
LDFLAGS = -L/usr/win32/lib
LIBASS_CFLAGS = -IC:/Msys/1.0/win32/include -IC:/Msys/1.0/win32/include/freetype2  
LIBASS_LIBS = -LC:/Msys/1.0/win32/lib -L/usr/win32/lib -lass -lm -lfontconfig -lxml2 -liconv -lfreetype -lz  
LIBCDDB_CFLAGS = -IC:/Msys/1.0/win32/include  
LIBCDDB_LIBS = C:/Msys/1.0/win32/lib/libregex.a -LC:/Msys/1.0/win32/lib -lcddb -lregex -lws2_32  
LIBCDIO_CFLAGS = 
LIBCDIO_LIBS = 
LIBDL = 
LIBEXT = .dll
LIBICONV = /usr/win32/lib/libiconv.a
LIBINTL = 
LIBMODPLUG_CFLAGS = -IC:/Msys/1.0/win32/include -IC:/Msys/1.0/win32/include/libmodplug  
LIBMODPLUG_LIBS = -LC:/Msys/1.0/win32/lib -lmodplug -lstdc++ -lm  
LIBMPEG2_CFLAGS = -IC:/Msys/1.0/win32/include/mpeg2dec  
LIBMPEG2_LIBS = -LC:/Msys/1.0/win32/lib -lmpeg2  
LIBOBJS =  ${LIBOBJDIR}asprintf$U.o ${LIBOBJDIR}getdelim$U.o ${LIBOBJDIR}gmtime_r$U.o ${LIBOBJDIR}localtime_r$U.o ${LIBOBJDIR}nrand48$U.o ${LIBOBJDIR}strcasestr$U.o ${LIBOBJDIR}strlcpy$U.o ${LIBOBJDIR}strndup$U.o ${LIBOBJDIR}strnlen$U.o ${LIBOBJDIR}strsep$U.o ${LIBOBJDIR}strtok_r$U.o ${LIBOBJDIR}vasprintf$U.o
LIBPROXY_CFLAGS = 
LIBPROXY_LIBS = 
LIBS = -lmingw32 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBV4L2_CFLAGS = 
LIBV4L2_LIBS = 
LIBV4L_CFLAGS = 
LIBV4L_LIBS = 
LIBVA_CFLAGS = 
LIBVA_LIBS = 
LIBVCDINFO_CFLAGS = 
LIBVCDINFO_LIBS = 
LIBXML2_CFLAGS = -DLIBXML_STATIC -IC:/Msys/1.0/win32/include/libxml2  
LIBXML2_LIBS = -LC:/Msys/1.0/win32/lib -lxml2  
LIPO = 
LN_S = ln -s
LTLIBICONV = -L/usr/win32/lib -liconv
LTLIBINTL = 
LTLIBOBJS =  ${LIBOBJDIR}asprintf$U.lo ${LIBOBJDIR}getdelim$U.lo ${LIBOBJDIR}gmtime_r$U.lo ${LIBOBJDIR}localtime_r$U.lo ${LIBOBJDIR}nrand48$U.lo ${LIBOBJDIR}strcasestr$U.lo ${LIBOBJDIR}strlcpy$U.lo ${LIBOBJDIR}strndup$U.lo ${LIBOBJDIR}strnlen$U.lo ${LIBOBJDIR}strsep$U.lo ${LIBOBJDIR}strtok_r$U.lo ${LIBOBJDIR}vasprintf$U.lo
LTLIBa52tofloat32 = liba52tofloat32_plugin.la
LTLIBaa = 
LTLIBaccess_alsa = 
LTLIBaccess_avio = 
LTLIBaccess_dv = 
LTLIBaccess_eyetv = 
LTLIBaccess_gnomevfs = 
LTLIBaccess_jack = 
LTLIBaccess_mmap = 
LTLIBaccess_mtp = 
LTLIBaccess_oss = 
LTLIBaccess_output_shout = libaccess_output_shout_plugin.la
LTLIBaccess_realrtsp = libaccess_realrtsp_plugin.la
LTLIBaccess_sftp = 
LTLIBaccess_smb = libaccess_smb_plugin.la
LTLIBalsa = 
LTLIBaout_directx = libaout_directx_plugin.la
LTLIBaout_sdl = libaout_sdl_plugin.la
LTLIBasademux = 
LTLIBatmo = libatmo_plugin.la
LTLIBauhal = 
LTLIBavcodec = libavcodec_plugin.la
LTLIBavformat = 
LTLIBbda = libbda_plugin.la
LTLIBbonjour = 
LTLIBcaca = libcaca_plugin.la
LTLIBcdda = libcdda_plugin.la
LTLIBdbus = 
LTLIBdc1394 = 
LTLIBdirac = 
LTLIBdirect3d = libdirect3d_plugin.la
LTLIBdirectfb = 
LTLIBdirectx = libdirectx_plugin.la
LTLIBdmo = libdmo_plugin.la
LTLIBdshow = libdshow_plugin.la
LTLIBdtstofloat32 = libdtstofloat32_plugin.la
LTLIBdvb = 
LTLIBdvdnav = libdvdnav_plugin.la
LTLIBdvdread = libdvdread_plugin.la
LTLIBdynamicoverlay = 
LTLIBfaad = libfaad_plugin.la
LTLIBfb = 
LTLIBfbosd = 
LTLIBflac = libflac_plugin.la
LTLIBfluidsynth = libfluidsynth_plugin.la
LTLIBfreetype = libfreetype_plugin.la
LTLIBglobalhotkeys = libglobalhotkeys_plugin.la
LTLIBglwin32 = libglwin32_plugin.la
LTLIBgme = 
LTLIBgnutls = libgnutls_plugin.la
LTLIBgoom = libgoom_plugin.la
LTLIBgrowl = 
LTLIBgrowl_udp = 
LTLIBhd1000a = 
LTLIBhildon = 
LTLIBid3tag = 
LTLIBinhibit = 
LTLIBjack = 
LTLIBkate = libkate_plugin.la
LTLIBlibass = liblibass_plugin.la
LTLIBlibmpeg2 = liblibmpeg2_plugin.la
LTLIBlirc = 
LTLIBlive555 = liblive555_plugin.la
LTLIBmacosx = 
LTLIBmacosx_dialog_provider = 
LTLIBminimal_macosx = 
LTLIBmkv = 
LTLIBmod = libmod_plugin.la
LTLIBmozilla = 
LTLIBmpc = 
LTLIBmpgatofixed32 = libmpgatofixed32_plugin.la
LTLIBmtp = 
LTLIBmux_ogg = libmux_ogg_plugin.la
LTLIBmux_ts = libmux_ts_plugin.la
LTLIBncurses = 
LTLIBnotify = 
LTLIBogg = libogg_plugin.la
LTLIBoldhttp = liboldhttp_plugin.la
LTLIBomxil = 
LTLIBopencv_example = 
LTLIBosd_parser = libosd_parser_plugin.la
LTLIBosdmenu = libosdmenu_plugin.la
LTLIBoss = 
LTLIBosso_screensaver = 
LTLIBpanoramix = libpanoramix_plugin.la
LTLIBpng = libpng_plugin.la
LTLIBportaudio = libportaudio_plugin.la
LTLIBpostproc = libpostproc_plugin.la
LTLIBprojectm = libprojectm_plugin.la
LTLIBpulse = 
LTLIBpvr = 
LTLIBqt4 = libqt4_plugin.la
LTLIBqtcapture = 
LTLIBquicktime = libquicktime_plugin.la
LTLIBrealvideo = librealvideo_plugin.la
LTLIBremoteosd = libremoteosd_plugin.la
LTLIBschroedinger = libschroedinger_plugin.la
LTLIBscreen = libscreen_plugin.la
LTLIBscreensaver = 
LTLIBsdl_image = libsdl_image_plugin.la
LTLIBshine = 
LTLIBskins2 = libskins2_plugin.la
LTLIBsnapshot = 
LTLIBspeex = libspeex_plugin.la
LTLIBsqlite = 
LTLIBstream_out_raop = libstream_out_raop_plugin.la
LTLIBstream_out_switcher = 
LTLIBsvg = 
LTLIBswscale = libswscale_plugin.la
LTLIBtaglib = 
LTLIBtelepathy = 
LTLIBtelx = 
LTLIBtheora = libtheora_plugin.la
LTLIBtremor = 
LTLIBts = libts_plugin.la
LTLIBtwolame = libtwolame_plugin.la
LTLIBudev = 
LTLIBunzip = libunzip_plugin.la
LTLIBupnp_cc = 
LTLIBupnp_intel = 
LTLIBv4l = 
LTLIBv4l2 = 
LTLIBvcd = libvcd_plugin.la
LTLIBvcdx = 
LTLIBvisual = libvisual_plugin.la
LTLIBvorbis = libvorbis_plugin.la
LTLIBvout_macosx = 
LTLIBvout_sdl = libvout_sdl_plugin.la
LTLIBwaveout = libwaveout_plugin.la
LTLIBwingapi = 
LTLIBwingdi = libwingdi_plugin.la
LTLIBwma_fixed = 
LTLIBx264 = libx264_plugin.la
LTLIBxcb_apps = 
LTLIBxcb_glx = 
LTLIBxcb_screen = 
LTLIBxcb_window = 
LTLIBxcb_x11 = 
LTLIBxcb_xv = 
LTLIBxdg_screensaver = 
LTLIBxml = libxml_plugin.la
LTLIBxosd = 
LTLIBzip = libzip_plugin.la
LTLIBzvbi = libzvbi_plugin.la
LUAC = /bin/luac
LUA_CFLAGS = -IC:/Msys/1.0/win32/include  
LUA_LIBS = -LC:/Msys/1.0/win32/lib -llua -lm  
MACOSX_DEPLOYMENT_TARGET = 
MAINT = 
MAKEINFO = ${SHELL} /home/skoruga/vlc-shaders/vlc/autotools/missing --run makeinfo
MIDL = no
MINIZIP_CFLAGS = -I\${top_srcdir}/libs/unzip
MINIZIP_LIBS = \${top_builddir}/libs/unzip/libunzip.la
MKDIR_P = /bin/mkdir -p
MMX_CFLAGS = -mmmx
MOC = moc
MOZILLA_CFLAGS = 
MOZILLA_CONFIG = 
MOZILLA_LIBS = 
MOZILLA_SDK_PATH = /usr/win32/gecko-sdk
MSGFMT = :
MSGFMT_015 = :
MSGMERGE = :
MTP_CFLAGS = 
MTP_LIBS = 
MUX_OGG_CFLAGS = -IC:/Msys/1.0/win32/include  
MUX_OGG_LIBS = -LC:/Msys/1.0/win32/lib -logg  
NM = nm
NMEDIT = 
NOTIFY_CFLAGS = 
NOTIFY_LIBS = 
OBJC = gcc
OBJCDEPMODE = depmode=gcc3
OBJCFLAGS = 
OBJCOPY = objcopy
OBJDUMP = objdump
OBJEXT = o
OGG_CFLAGS = -IC:/Msys/1.0/win32/include  
OGG_LIBS = -LC:/Msys/1.0/win32/lib -logg  
OPENCV_CFLAGS = 
OPENCV_LIBS = 
OSSO_SCREENSAVER_CFLAGS = 
OSSO_SCREENSAVER_LIBS = 
OTOOL = 
OTOOL64 = 
PACKAGE = vlc
PACKAGE_BUGREPORT = 
PACKAGE_NAME = vlc
PACKAGE_STRING = vlc 1.2.0-git
PACKAGE_TARNAME = vlc
PACKAGE_VERSION = 1.2.0-git
PATH_SEPARATOR = :
PCRE_CFLAGS = 
PCRE_LIBS = 
PEFLAGS = :
PKGDIR = vlc
PKG_CONFIG = /bin/pkg-config --static
PKG_CONFIG_PATH = /win32/lib/pkgconfig
PORTAUDIO_CFLAGS = -mthreads -IC:/Msys/1.0/win32/include  
PORTAUDIO_LIBS = -LC:/Msys/1.0/win32/lib -lportaudio -lwinmm -lm -lstdc++ -lole32 -luuid  
POSTPROC_CFLAGS = -IC:/Msys/1.0/win32/include  
POSTPROC_LIBS = -LC:/Msys/1.0/win32/lib -lpostproc -lavutil  
POSUB = 
PROJECTM2_CFLAGS = -IC:/Msys/1.0/win32/include  
PROJECTM2_LIBS = -LC:/Msys/1.0/win32/lib -lprojectM -lMilkdropPresetFactory -lRenderer -lglu32 -lglew32 -lopengl32  
PROJECTM_CFLAGS = -IC:/Msys/1.0/win32/include  
PROJECTM_LIBS = -LC:/Msys/1.0/win32/lib -lprojectM -lMilkdropPresetFactory -lRenderer -lglu32 -lglew32 -lopengl32  
PULSE_CFLAGS = 
PULSE_LIBS = 
QT4_CFLAGS = -DQT_NODLL -IC:/Msys/1.0/win32/include/qt4 -IC:/Msys/1.0/win32/include/qt4/QtCore -IC:/Msys/1.0/win32/include/qt4/QtGui  
QT4_LIBS = -Wl,--subsystem,windows -mwindows -LC:/Msys/1.0/win32/lib -lqjpeg -lqtaccessiblewidgets -lQtGui -lQtCore -lrpcrt4 -loleaut32 -lole32 -luuid -lwinspool -lwinmm -lshell32 -lcomctl32 -lcomdlg32 -ladvapi32 -lgdi32 -limm32 -lwsock32  
RANLIB = ranlib
RCC = rcc
SCHROEDINGER_CFLAGS = -IC:/Msys/1.0/win32/include/schroedinger-1.0 -IC:/Msys/1.0/win32/include/orc-0.4  
SCHROEDINGER_LIBS = -LC:/Msys/1.0/win32/lib -lschroedinger-1.0 -lorc-0.4 -lm  
SDL_CFLAGS = -D_GNU_SOURCE=1 -Dmain=SDL_main -IC:/Msys/1.0/win32/include/SDL  
SDL_IMAGE_CFLAGS = -D_GNU_SOURCE=1 -Dmain=SDL_main -IC:/Msys/1.0/win32/include/SDL  
SDL_IMAGE_LIBS = -mwindows -LC:/Msys/1.0/win32/lib -lSDL_image -lmingw32 -lSDLmain -lSDL -liconv -lm -luser32 -lgdi32 -lwinmm  
SDL_LIBS = -mwindows -LC:/Msys/1.0/win32/lib -lmingw32 -lSDLmain -lSDL -liconv -lm -luser32 -lgdi32 -lwinmm  
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
SHOUT_CFLAGS = -IC:/Msys/1.0/win32/include  
SHOUT_LIBS = -LC:/Msys/1.0/win32/lib -lshout -lvorbis -ltheora -lspeex -lm -logg  
SOCKET_LIBS = 
SPEEX_CFLAGS = -IC:/Msys/1.0/win32/include  
SPEEX_LIBS = -LC:/Msys/1.0/win32/lib -logg -lspeex -lm  
SQLITE_CFLAGS = 
SQLITE_LIBS = 
SSE2_CFLAGS = -msse2
STRIP = strip
SVG_CFLAGS = 
SVG_LIBS = 
SWSCALE_CFLAGS = -IC:/Msys/1.0/win32/include  
SWSCALE_LIBS = -LC:/Msys/1.0/win32/lib -lswscale -lavutil  
SYS = mingw32
TAGLIB_CFLAGS = 
TAGLIB_LIBS = 
THEORA_CFLAGS = -IC:/Msys/1.0/win32/include  
THEORA_LIBS = -LC:/Msys/1.0/win32/lib -ltheora -logg  
TIGER_CFLAGS = 
TIGER_LIBS = 
TWOLAME_CFLAGS = -IC:/Msys/1.0/win32/include  
TWOLAME_LIBS = -LC:/Msys/1.0/win32/lib -ltwolame  
U2D = unix2dos
UDEV_CFLAGS = 
UDEV_LIBS = 
UIC = uic
UPNP_CFLAGS = 
UPNP_LIBS = 
USE_NLS = no
VERSION = 1.2.0-git
VERSION_EXTRA = -git
VERSION_EXTRA_RC = 99
VERSION_MAJOR = 1
VERSION_MESSAGE = 1.2.0-git Twoflower
VERSION_MINOR = 2
VERSION_REVISION = 0
VLC_CONFIG = top_srcdir="$(top_srcdir)" top_builddir="$(top_builddir)" $(top_builddir)/vlc-config
VORBIS_CFLAGS = -IC:/Msys/1.0/win32/include  
VORBIS_LIBS = -LC:/Msys/1.0/win32/lib -lvorbisenc -lvorbis -lm -logg  
WIDL = no
WINDRES = windres
WINE_SDK_PATH = 
X264_CFLAGS = -IC:/Msys/1.0/win32/include  
X264_LIBS = -LC:/Msys/1.0/win32/lib -lx264 -lpthreadGC2 -lwsock32  
XCB_CFLAGS = 
XCB_KEYSYMS_CFLAGS = 
XCB_KEYSYMS_LIBS = 
XCB_LIBS = 
XCB_RANDR_CFLAGS = 
XCB_RANDR_LIBS = 
XCB_SHM_CFLAGS = 
XCB_SHM_LIBS = 
XCB_XV_CFLAGS = 
XCB_XV_LIBS = 
XGETTEXT = :
XGETTEXT_015 = :
XGETTEXT_EXTRA_OPTIONS = 
XLIB_XCB_CFLAGS = 
XLIB_XCB_LIBS = 
XMKMF = 
XPM_CFLAGS = 
XPM_LIBS = 
XPROTO_CFLAGS = 
XPROTO_LIBS = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS = 
ZVBI_CFLAGS = -IC:/Msys/1.0/win32/include  
ZVBI_LIBS = /usr/win32/lib/libiconv.a -LC:/Msys/1.0/win32/lib -L/usr/win32/lib -lzvbi -lpthreadGC2 -lwsock32 -lintl -liconv -lm -lpng -lz  
abs_builddir = /home/skoruga/vlc-shaders/vlc/modules/audio_output
abs_srcdir = /home/skoruga/vlc-shaders/vlc/modules/audio_output
abs_top_builddir = /home/skoruga/vlc-shaders/vlc
abs_top_srcdir = /home/skoruga/vlc-shaders/vlc
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_DUMPBIN = 
ac_ct_OBJC = gcc
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = i386-pc-linux-gnu
build_alias = i386-linux
build_cpu = i386
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i586-pc-mingw32msvc
host_alias = i586-mingw32msvc
host_cpu = i586
host_os = mingw32msvc
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/skoruga/vlc-shaders/vlc/autotools/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
soliddatadir = ${datadir}/kde4/apps/solid/actions
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
to_host_path_cmd = func_nix_to_mingw_path_convert
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
vlcdatadir = ${datadir}/${PKGDIR}
vlclibdir = ${libdir}/${PKGDIR}
basedir = audio_output
dir = audio_output
mods = alsa aout_directx aout_file aout_sdl auhal hd1000a jack oss portaudio pulse waveout
libvlc_LTLIBRARIES = $(LTLIBalsa) $(LTLIBaout_directx) \
	$(LTLIBaout_sdl) $(LTLIBauhal) $(LTLIBhd1000a) $(LTLIBjack) \
	$(LTLIBoss) $(LTLIBportaudio) $(LTLIBpulse) $(LTLIBwaveout) \
	libaout_file_plugin.la
EXTRA_LTLIBRARIES = libalsa_plugin.la libaout_directx_plugin.la libaout_sdl_plugin.la libauhal_plugin.la libhd1000a_plugin.la libjack_plugin.la liboss_plugin.la libportaudio_plugin.la libpulse_plugin.la libwaveout_plugin.la
NULL = 
libvlcdir = $(vlclibdir)/plugins/$(basedir)
EXTRA_DIST = Modules.am
BUILT_SOURCES = 
CLEANFILES = $(BUILT_SOURCES)
LTLIBVLCCORE = $(top_builddir)/src/libvlccore.la
AM_CFLAGS = `$(VLC_CONFIG) --cflags plugin $@`
AM_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin $@`
AM_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin $@`
AM_LDFLAGS = -rpath '$(libvlcdir)' \
	-avoid-version -module \
	-export-symbol-regex ^vlc_entry \
	-shrext $(LIBEXT) \
	-rpath "$(libvlcdir)" \
	-no-undefined \
	 `$(VLC_CONFIG) --ldflags plugin $@`

AM_LIBADD = `$(VLC_CONFIG) -libs plugin $@` \
	$(LTLIBVLCCORE) $(top_builddir)/compat/libcompat.la

SOURCES_alsa = alsa.c
SOURCES_aout_directx = directx.c windows_audio_common.h
SOURCES_aout_file = file.c
SOURCES_oss = oss.c
SOURCES_aout_sdl = sdl.c
SOURCES_waveout = waveout.c windows_audio_common.h
SOURCES_hd1000a = hd1000a.cpp
SOURCES_portaudio = portaudio.c
SOURCES_auhal = auhal.c
SOURCES_jack = jack.c
SOURCES_pulse = pulse.c

# The alsa plugin
libalsa_plugin_la_SOURCES = $(SOURCES_alsa)
nodist_libalsa_plugin_la_SOURCES = $(nodist_SOURCES_alsa)
# Force per-target objects:
libalsa_plugin_la_CFLAGS = $(AM_CFLAGS)
libalsa_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libalsa_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libalsa_plugin_la_LIBADD = $(AM_LIBADD)
libalsa_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The aout_directx plugin
libaout_directx_plugin_la_SOURCES = $(SOURCES_aout_directx)
nodist_libaout_directx_plugin_la_SOURCES = $(nodist_SOURCES_aout_directx)
# Force per-target objects:
libaout_directx_plugin_la_CFLAGS = $(AM_CFLAGS)
libaout_directx_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libaout_directx_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libaout_directx_plugin_la_LIBADD = $(AM_LIBADD)
libaout_directx_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The aout_file plugin
libaout_file_plugin_la_SOURCES = $(SOURCES_aout_file)
nodist_libaout_file_plugin_la_SOURCES = $(nodist_SOURCES_aout_file)
# Force per-target objects:
libaout_file_plugin_la_CFLAGS = $(AM_CFLAGS)
libaout_file_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libaout_file_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libaout_file_plugin_la_LIBADD = $(AM_LIBADD)
libaout_file_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The aout_sdl plugin
libaout_sdl_plugin_la_SOURCES = $(SOURCES_aout_sdl)
nodist_libaout_sdl_plugin_la_SOURCES = $(nodist_SOURCES_aout_sdl)
# Force per-target objects:
libaout_sdl_plugin_la_CFLAGS = $(AM_CFLAGS)
libaout_sdl_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libaout_sdl_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libaout_sdl_plugin_la_LIBADD = $(AM_LIBADD)
libaout_sdl_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The auhal plugin
libauhal_plugin_la_SOURCES = $(SOURCES_auhal)
nodist_libauhal_plugin_la_SOURCES = $(nodist_SOURCES_auhal)
# Force per-target objects:
libauhal_plugin_la_CFLAGS = $(AM_CFLAGS)
libauhal_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libauhal_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libauhal_plugin_la_LIBADD = $(AM_LIBADD)
libauhal_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The hd1000a plugin
libhd1000a_plugin_la_SOURCES = $(SOURCES_hd1000a)
nodist_libhd1000a_plugin_la_SOURCES = $(nodist_SOURCES_hd1000a)
# Force per-target objects:
libhd1000a_plugin_la_CFLAGS = $(AM_CFLAGS)
libhd1000a_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libhd1000a_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libhd1000a_plugin_la_LIBADD = $(AM_LIBADD)
libhd1000a_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The jack plugin
libjack_plugin_la_SOURCES = $(SOURCES_jack)
nodist_libjack_plugin_la_SOURCES = $(nodist_SOURCES_jack)
# Force per-target objects:
libjack_plugin_la_CFLAGS = $(AM_CFLAGS)
libjack_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libjack_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libjack_plugin_la_LIBADD = $(AM_LIBADD)
libjack_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The oss plugin
liboss_plugin_la_SOURCES = $(SOURCES_oss)
nodist_liboss_plugin_la_SOURCES = $(nodist_SOURCES_oss)
# Force per-target objects:
liboss_plugin_la_CFLAGS = $(AM_CFLAGS)
liboss_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
liboss_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
liboss_plugin_la_LIBADD = $(AM_LIBADD)
liboss_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The portaudio plugin
libportaudio_plugin_la_SOURCES = $(SOURCES_portaudio)
nodist_libportaudio_plugin_la_SOURCES = $(nodist_SOURCES_portaudio)
# Force per-target objects:
libportaudio_plugin_la_CFLAGS = $(AM_CFLAGS)
libportaudio_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libportaudio_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libportaudio_plugin_la_LIBADD = $(AM_LIBADD)
libportaudio_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The pulse plugin
libpulse_plugin_la_SOURCES = $(SOURCES_pulse)
nodist_libpulse_plugin_la_SOURCES = $(nodist_SOURCES_pulse)
# Force per-target objects:
libpulse_plugin_la_CFLAGS = $(AM_CFLAGS)
libpulse_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libpulse_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libpulse_plugin_la_LIBADD = $(AM_LIBADD)
libpulse_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The waveout plugin
libwaveout_plugin_la_SOURCES = $(SOURCES_waveout)
nodist_libwaveout_plugin_la_SOURCES = $(nodist_SOURCES_waveout)
# Force per-target objects:
libwaveout_plugin_la_CFLAGS = $(AM_CFLAGS)
libwaveout_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libwaveout_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libwaveout_plugin_la_LIBADD = $(AM_LIBADD)
libwaveout_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/modules/common.am $(srcdir)/Modules.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu modules/audio_output/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu modules/audio_output/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libvlcLTLIBRARIES: $(libvlc_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libvlcdir)" || $(MKDIR_P) "$(DESTDIR)$(libvlcdir)"
	@list='$(libvlc_LTLIBRARIES)'; test -n "$(libvlcdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libvlcdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libvlcdir)"; \
	}

uninstall-libvlcLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(libvlc_LTLIBRARIES)'; test -n "$(libvlcdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libvlcdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libvlcdir)/$$f"; \
	done

clean-libvlcLTLIBRARIES:
	-test -z "$(libvlc_LTLIBRARIES)" || rm -f $(libvlc_LTLIBRARIES)
	@list='$(libvlc_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libalsa_plugin.la: $(libalsa_plugin_la_OBJECTS) $(libalsa_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libalsa_plugin_la_LINK)  $(libalsa_plugin_la_OBJECTS) $(libalsa_plugin_la_LIBADD) $(LIBS)
libaout_directx_plugin.la: $(libaout_directx_plugin_la_OBJECTS) $(libaout_directx_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libaout_directx_plugin_la_LINK)  $(libaout_directx_plugin_la_OBJECTS) $(libaout_directx_plugin_la_LIBADD) $(LIBS)
libaout_file_plugin.la: $(libaout_file_plugin_la_OBJECTS) $(libaout_file_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libaout_file_plugin_la_LINK) -rpath $(libvlcdir) $(libaout_file_plugin_la_OBJECTS) $(libaout_file_plugin_la_LIBADD) $(LIBS)
libaout_sdl_plugin.la: $(libaout_sdl_plugin_la_OBJECTS) $(libaout_sdl_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libaout_sdl_plugin_la_LINK)  $(libaout_sdl_plugin_la_OBJECTS) $(libaout_sdl_plugin_la_LIBADD) $(LIBS)
libauhal_plugin.la: $(libauhal_plugin_la_OBJECTS) $(libauhal_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libauhal_plugin_la_LINK)  $(libauhal_plugin_la_OBJECTS) $(libauhal_plugin_la_LIBADD) $(LIBS)
libhd1000a_plugin.la: $(libhd1000a_plugin_la_OBJECTS) $(libhd1000a_plugin_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libhd1000a_plugin_la_LINK)  $(libhd1000a_plugin_la_OBJECTS) $(libhd1000a_plugin_la_LIBADD) $(LIBS)
libjack_plugin.la: $(libjack_plugin_la_OBJECTS) $(libjack_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libjack_plugin_la_LINK)  $(libjack_plugin_la_OBJECTS) $(libjack_plugin_la_LIBADD) $(LIBS)
liboss_plugin.la: $(liboss_plugin_la_OBJECTS) $(liboss_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(liboss_plugin_la_LINK)  $(liboss_plugin_la_OBJECTS) $(liboss_plugin_la_LIBADD) $(LIBS)
libportaudio_plugin.la: $(libportaudio_plugin_la_OBJECTS) $(libportaudio_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libportaudio_plugin_la_LINK)  $(libportaudio_plugin_la_OBJECTS) $(libportaudio_plugin_la_LIBADD) $(LIBS)
libpulse_plugin.la: $(libpulse_plugin_la_OBJECTS) $(libpulse_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libpulse_plugin_la_LINK)  $(libpulse_plugin_la_OBJECTS) $(libpulse_plugin_la_LIBADD) $(LIBS)
libwaveout_plugin.la: $(libwaveout_plugin_la_OBJECTS) $(libwaveout_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libwaveout_plugin_la_LINK)  $(libwaveout_plugin_la_OBJECTS) $(libwaveout_plugin_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libalsa_plugin_la-alsa.Plo
include ./$(DEPDIR)/libaout_directx_plugin_la-directx.Plo
include ./$(DEPDIR)/libaout_file_plugin_la-file.Plo
include ./$(DEPDIR)/libaout_sdl_plugin_la-sdl.Plo
include ./$(DEPDIR)/libauhal_plugin_la-auhal.Plo
include ./$(DEPDIR)/libhd1000a_plugin_la-hd1000a.Plo
include ./$(DEPDIR)/libjack_plugin_la-jack.Plo
include ./$(DEPDIR)/liboss_plugin_la-oss.Plo
include ./$(DEPDIR)/libportaudio_plugin_la-portaudio.Plo
include ./$(DEPDIR)/libpulse_plugin_la-pulse.Plo
include ./$(DEPDIR)/libwaveout_plugin_la-waveout.Plo

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libalsa_plugin_la-alsa.lo: alsa.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libalsa_plugin_la_CFLAGS) $(CFLAGS) -MT libalsa_plugin_la-alsa.lo -MD -MP -MF $(DEPDIR)/libalsa_plugin_la-alsa.Tpo -c -o libalsa_plugin_la-alsa.lo `test -f 'alsa.c' || echo '$(srcdir)/'`alsa.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libalsa_plugin_la-alsa.Tpo $(DEPDIR)/libalsa_plugin_la-alsa.Plo
#	$(AM_V_CC) \
#	source='alsa.c' object='libalsa_plugin_la-alsa.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libalsa_plugin_la_CFLAGS) $(CFLAGS) -c -o libalsa_plugin_la-alsa.lo `test -f 'alsa.c' || echo '$(srcdir)/'`alsa.c

libaout_directx_plugin_la-directx.lo: directx.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaout_directx_plugin_la_CFLAGS) $(CFLAGS) -MT libaout_directx_plugin_la-directx.lo -MD -MP -MF $(DEPDIR)/libaout_directx_plugin_la-directx.Tpo -c -o libaout_directx_plugin_la-directx.lo `test -f 'directx.c' || echo '$(srcdir)/'`directx.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libaout_directx_plugin_la-directx.Tpo $(DEPDIR)/libaout_directx_plugin_la-directx.Plo
#	$(AM_V_CC) \
#	source='directx.c' object='libaout_directx_plugin_la-directx.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaout_directx_plugin_la_CFLAGS) $(CFLAGS) -c -o libaout_directx_plugin_la-directx.lo `test -f 'directx.c' || echo '$(srcdir)/'`directx.c

libaout_file_plugin_la-file.lo: file.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaout_file_plugin_la_CFLAGS) $(CFLAGS) -MT libaout_file_plugin_la-file.lo -MD -MP -MF $(DEPDIR)/libaout_file_plugin_la-file.Tpo -c -o libaout_file_plugin_la-file.lo `test -f 'file.c' || echo '$(srcdir)/'`file.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libaout_file_plugin_la-file.Tpo $(DEPDIR)/libaout_file_plugin_la-file.Plo
#	$(AM_V_CC) \
#	source='file.c' object='libaout_file_plugin_la-file.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaout_file_plugin_la_CFLAGS) $(CFLAGS) -c -o libaout_file_plugin_la-file.lo `test -f 'file.c' || echo '$(srcdir)/'`file.c

libaout_sdl_plugin_la-sdl.lo: sdl.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaout_sdl_plugin_la_CFLAGS) $(CFLAGS) -MT libaout_sdl_plugin_la-sdl.lo -MD -MP -MF $(DEPDIR)/libaout_sdl_plugin_la-sdl.Tpo -c -o libaout_sdl_plugin_la-sdl.lo `test -f 'sdl.c' || echo '$(srcdir)/'`sdl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libaout_sdl_plugin_la-sdl.Tpo $(DEPDIR)/libaout_sdl_plugin_la-sdl.Plo
#	$(AM_V_CC) \
#	source='sdl.c' object='libaout_sdl_plugin_la-sdl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaout_sdl_plugin_la_CFLAGS) $(CFLAGS) -c -o libaout_sdl_plugin_la-sdl.lo `test -f 'sdl.c' || echo '$(srcdir)/'`sdl.c

libauhal_plugin_la-auhal.lo: auhal.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libauhal_plugin_la_CFLAGS) $(CFLAGS) -MT libauhal_plugin_la-auhal.lo -MD -MP -MF $(DEPDIR)/libauhal_plugin_la-auhal.Tpo -c -o libauhal_plugin_la-auhal.lo `test -f 'auhal.c' || echo '$(srcdir)/'`auhal.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libauhal_plugin_la-auhal.Tpo $(DEPDIR)/libauhal_plugin_la-auhal.Plo
#	$(AM_V_CC) \
#	source='auhal.c' object='libauhal_plugin_la-auhal.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libauhal_plugin_la_CFLAGS) $(CFLAGS) -c -o libauhal_plugin_la-auhal.lo `test -f 'auhal.c' || echo '$(srcdir)/'`auhal.c

libjack_plugin_la-jack.lo: jack.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjack_plugin_la_CFLAGS) $(CFLAGS) -MT libjack_plugin_la-jack.lo -MD -MP -MF $(DEPDIR)/libjack_plugin_la-jack.Tpo -c -o libjack_plugin_la-jack.lo `test -f 'jack.c' || echo '$(srcdir)/'`jack.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjack_plugin_la-jack.Tpo $(DEPDIR)/libjack_plugin_la-jack.Plo
#	$(AM_V_CC) \
#	source='jack.c' object='libjack_plugin_la-jack.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjack_plugin_la_CFLAGS) $(CFLAGS) -c -o libjack_plugin_la-jack.lo `test -f 'jack.c' || echo '$(srcdir)/'`jack.c

liboss_plugin_la-oss.lo: oss.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liboss_plugin_la_CFLAGS) $(CFLAGS) -MT liboss_plugin_la-oss.lo -MD -MP -MF $(DEPDIR)/liboss_plugin_la-oss.Tpo -c -o liboss_plugin_la-oss.lo `test -f 'oss.c' || echo '$(srcdir)/'`oss.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liboss_plugin_la-oss.Tpo $(DEPDIR)/liboss_plugin_la-oss.Plo
#	$(AM_V_CC) \
#	source='oss.c' object='liboss_plugin_la-oss.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liboss_plugin_la_CFLAGS) $(CFLAGS) -c -o liboss_plugin_la-oss.lo `test -f 'oss.c' || echo '$(srcdir)/'`oss.c

libportaudio_plugin_la-portaudio.lo: portaudio.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libportaudio_plugin_la_CFLAGS) $(CFLAGS) -MT libportaudio_plugin_la-portaudio.lo -MD -MP -MF $(DEPDIR)/libportaudio_plugin_la-portaudio.Tpo -c -o libportaudio_plugin_la-portaudio.lo `test -f 'portaudio.c' || echo '$(srcdir)/'`portaudio.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libportaudio_plugin_la-portaudio.Tpo $(DEPDIR)/libportaudio_plugin_la-portaudio.Plo
#	$(AM_V_CC) \
#	source='portaudio.c' object='libportaudio_plugin_la-portaudio.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libportaudio_plugin_la_CFLAGS) $(CFLAGS) -c -o libportaudio_plugin_la-portaudio.lo `test -f 'portaudio.c' || echo '$(srcdir)/'`portaudio.c

libpulse_plugin_la-pulse.lo: pulse.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpulse_plugin_la_CFLAGS) $(CFLAGS) -MT libpulse_plugin_la-pulse.lo -MD -MP -MF $(DEPDIR)/libpulse_plugin_la-pulse.Tpo -c -o libpulse_plugin_la-pulse.lo `test -f 'pulse.c' || echo '$(srcdir)/'`pulse.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpulse_plugin_la-pulse.Tpo $(DEPDIR)/libpulse_plugin_la-pulse.Plo
#	$(AM_V_CC) \
#	source='pulse.c' object='libpulse_plugin_la-pulse.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpulse_plugin_la_CFLAGS) $(CFLAGS) -c -o libpulse_plugin_la-pulse.lo `test -f 'pulse.c' || echo '$(srcdir)/'`pulse.c

libwaveout_plugin_la-waveout.lo: waveout.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwaveout_plugin_la_CFLAGS) $(CFLAGS) -MT libwaveout_plugin_la-waveout.lo -MD -MP -MF $(DEPDIR)/libwaveout_plugin_la-waveout.Tpo -c -o libwaveout_plugin_la-waveout.lo `test -f 'waveout.c' || echo '$(srcdir)/'`waveout.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libwaveout_plugin_la-waveout.Tpo $(DEPDIR)/libwaveout_plugin_la-waveout.Plo
#	$(AM_V_CC) \
#	source='waveout.c' object='libwaveout_plugin_la-waveout.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwaveout_plugin_la_CFLAGS) $(CFLAGS) -c -o libwaveout_plugin_la-waveout.lo `test -f 'waveout.c' || echo '$(srcdir)/'`waveout.c

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

libhd1000a_plugin_la-hd1000a.lo: hd1000a.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libhd1000a_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libhd1000a_plugin_la-hd1000a.lo -MD -MP -MF $(DEPDIR)/libhd1000a_plugin_la-hd1000a.Tpo -c -o libhd1000a_plugin_la-hd1000a.lo `test -f 'hd1000a.cpp' || echo '$(srcdir)/'`hd1000a.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhd1000a_plugin_la-hd1000a.Tpo $(DEPDIR)/libhd1000a_plugin_la-hd1000a.Plo
#	$(AM_V_CXX) \
#	source='hd1000a.cpp' object='libhd1000a_plugin_la-hd1000a.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libhd1000a_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libhd1000a_plugin_la-hd1000a.lo `test -f 'hd1000a.cpp' || echo '$(srcdir)/'`hd1000a.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(libvlcdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-libvlcLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-libvlcLTLIBRARIES

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libvlcLTLIBRARIES

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-libvlcLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libvlcLTLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-libvlcLTLIBRARIES


$(srcdir)/Makefile.am: $(srcdir)/Modules.am $(top_srcdir)/modules/genmf
	$(AM_V_GEN)cd \$(top_srcdir) && \$(SHELL) modules/genmf $(dir)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
