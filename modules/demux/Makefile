# Makefile.in generated by automake 1.11 from Makefile.am.
# modules/demux/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# modules/demux/Makefile.am automatically generated from modules/demux/Modules.am by modules/genmf
# DO NOT EDIT THIS FILE DIRECTLY! See Modules.am instead.

# Common code for VLC modules/.../Makefile.am
#
# Copyright (C) 2005-2007 the VideoLAN team
# Copyright (C) 2005-2008 RÃ©mi Denis-Courmont
#
# Authors: Sam Hocevar <sam@zoy.org>


pkgdatadir = $(datadir)/vlc
pkgincludedir = $(includedir)/vlc
pkglibdir = $(libdir)/vlc
pkglibexecdir = $(libexecdir)/vlc
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i386-pc-linux-gnu
host_triplet = i586-pc-mingw32msvc
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/Modules.am $(top_srcdir)/modules/common.am
subdir = modules/demux
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/flags.m4 \
	$(top_srcdir)/m4/gettext.m4 $(top_srcdir)/m4/iconv.m4 \
	$(top_srcdir)/m4/intlmacosx.m4 $(top_srcdir)/m4/lib-ld.m4 \
	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/nls.m4 \
	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/m4/po.m4 \
	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/m4/vlc.m4 \
	$(top_srcdir)/m4/with_pkg.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libvlcdir)"
LTLIBRARIES = $(libvlc_LTLIBRARIES)
am__DEPENDENCIES_1 = `$(VLC_CONFIG) plugin $@` $(LTLIBVLCCORE) \
	$(top_builddir)/compat/libcompat.la
am__objects_1 = libaiff_plugin_la-aiff.lo
am_libaiff_plugin_la_OBJECTS = $(am__objects_1)
nodist_libaiff_plugin_la_OBJECTS =
libaiff_plugin_la_OBJECTS = $(am_libaiff_plugin_la_OBJECTS) \
	$(nodist_libaiff_plugin_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
libaiff_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libaiff_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am__objects_2 = libasademux_plugin_la-subtitle_asa.lo \
	libasademux_plugin_la-asademux.lo
am_libasademux_plugin_la_OBJECTS = $(am__objects_2)
nodist_libasademux_plugin_la_OBJECTS =
libasademux_plugin_la_OBJECTS = $(am_libasademux_plugin_la_OBJECTS) \
	$(nodist_libasademux_plugin_la_OBJECTS)
libasademux_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libasademux_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_3 = libau_plugin_la-au.lo
am_libau_plugin_la_OBJECTS = $(am__objects_3)
nodist_libau_plugin_la_OBJECTS =
libau_plugin_la_OBJECTS = $(am_libau_plugin_la_OBJECTS) \
	$(nodist_libau_plugin_la_OBJECTS)
libau_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libau_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am__objects_4 = libdemux_cdg_plugin_la-cdg.lo
am_libdemux_cdg_plugin_la_OBJECTS = $(am__objects_4)
nodist_libdemux_cdg_plugin_la_OBJECTS =
libdemux_cdg_plugin_la_OBJECTS = $(am_libdemux_cdg_plugin_la_OBJECTS) \
	$(nodist_libdemux_cdg_plugin_la_OBJECTS)
libdemux_cdg_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libdemux_cdg_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_5 = libdemuxdump_plugin_la-demuxdump.lo
am_libdemuxdump_plugin_la_OBJECTS = $(am__objects_5)
nodist_libdemuxdump_plugin_la_OBJECTS =
libdemuxdump_plugin_la_OBJECTS = $(am_libdemuxdump_plugin_la_OBJECTS) \
	$(nodist_libdemuxdump_plugin_la_OBJECTS)
libdemuxdump_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libdemuxdump_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_6 = libdirac_plugin_la-dirac.lo
am_libdirac_plugin_la_OBJECTS = $(am__objects_6)
nodist_libdirac_plugin_la_OBJECTS =
libdirac_plugin_la_OBJECTS = $(am_libdirac_plugin_la_OBJECTS) \
	$(nodist_libdirac_plugin_la_OBJECTS)
libdirac_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libdirac_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_7 = libflacsys_plugin_la-flac.lo
am_libflacsys_plugin_la_OBJECTS = $(am__objects_7)
nodist_libflacsys_plugin_la_OBJECTS =
libflacsys_plugin_la_OBJECTS = $(am_libflacsys_plugin_la_OBJECTS) \
	$(nodist_libflacsys_plugin_la_OBJECTS)
libflacsys_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libflacsys_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_8 = libgme_plugin_la-gme.lo
am_libgme_plugin_la_OBJECTS = $(am__objects_8)
nodist_libgme_plugin_la_OBJECTS =
libgme_plugin_la_OBJECTS = $(am_libgme_plugin_la_OBJECTS) \
	$(nodist_libgme_plugin_la_OBJECTS)
libgme_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libgme_plugin_la_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_9 = libimage_plugin_la-image.lo
am_libimage_plugin_la_OBJECTS = $(am__objects_9)
nodist_libimage_plugin_la_OBJECTS =
libimage_plugin_la_OBJECTS = $(am_libimage_plugin_la_OBJECTS) \
	$(nodist_libimage_plugin_la_OBJECTS)
libimage_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libimage_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_10 = liblive555_plugin_la-live555.lo \
	liblive555_plugin_la-asf.lo liblive555_plugin_la-buffer.lo
am_liblive555_plugin_la_OBJECTS = $(am__objects_10)
nodist_liblive555_plugin_la_OBJECTS =
liblive555_plugin_la_OBJECTS = $(am_liblive555_plugin_la_OBJECTS) \
	$(nodist_liblive555_plugin_la_OBJECTS)
liblive555_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(liblive555_plugin_la_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_11 = libmjpeg_plugin_la-mjpeg.lo
am_libmjpeg_plugin_la_OBJECTS = $(am__objects_11)
nodist_libmjpeg_plugin_la_OBJECTS =
libmjpeg_plugin_la_OBJECTS = $(am_libmjpeg_plugin_la_OBJECTS) \
	$(nodist_libmjpeg_plugin_la_OBJECTS)
libmjpeg_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libmjpeg_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_12 = libmod_plugin_la-mod.lo libmod_plugin_la-dummy.lo
am_libmod_plugin_la_OBJECTS = $(am__objects_12)
nodist_libmod_plugin_la_OBJECTS =
libmod_plugin_la_OBJECTS = $(am_libmod_plugin_la_OBJECTS) \
	$(nodist_libmod_plugin_la_OBJECTS)
libmod_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libmod_plugin_la_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_13 = libmpc_plugin_la-mpc.lo
am_libmpc_plugin_la_OBJECTS = $(am__objects_13)
nodist_libmpc_plugin_la_OBJECTS =
libmpc_plugin_la_OBJECTS = $(am_libmpc_plugin_la_OBJECTS) \
	$(nodist_libmpc_plugin_la_OBJECTS)
libmpc_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libmpc_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am__objects_14 = libnsc_plugin_la-nsc.lo
am_libnsc_plugin_la_OBJECTS = $(am__objects_14)
nodist_libnsc_plugin_la_OBJECTS =
libnsc_plugin_la_OBJECTS = $(am_libnsc_plugin_la_OBJECTS) \
	$(nodist_libnsc_plugin_la_OBJECTS)
libnsc_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libnsc_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am__objects_15 = libnsv_plugin_la-nsv.lo
am_libnsv_plugin_la_OBJECTS = $(am__objects_15)
nodist_libnsv_plugin_la_OBJECTS =
libnsv_plugin_la_OBJECTS = $(am_libnsv_plugin_la_OBJECTS) \
	$(nodist_libnsv_plugin_la_OBJECTS)
libnsv_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libnsv_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am__objects_16 = libnuv_plugin_la-nuv.lo
am_libnuv_plugin_la_OBJECTS = $(am__objects_16)
nodist_libnuv_plugin_la_OBJECTS =
libnuv_plugin_la_OBJECTS = $(am_libnuv_plugin_la_OBJECTS) \
	$(nodist_libnuv_plugin_la_OBJECTS)
libnuv_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libnuv_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am__objects_17 = libogg_plugin_la-ogg.lo \
	libogg_plugin_la-kate_categories.lo
am_libogg_plugin_la_OBJECTS = $(am__objects_17)
nodist_libogg_plugin_la_OBJECTS =
libogg_plugin_la_OBJECTS = $(am_libogg_plugin_la_OBJECTS) \
	$(nodist_libogg_plugin_la_OBJECTS)
libogg_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libogg_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am__objects_18 = libps_plugin_la-ps.lo
am_libps_plugin_la_OBJECTS = $(am__objects_18)
nodist_libps_plugin_la_OBJECTS =
libps_plugin_la_OBJECTS = $(am_libps_plugin_la_OBJECTS) \
	$(nodist_libps_plugin_la_OBJECTS)
libps_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libps_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am__objects_19 = libpva_plugin_la-pva.lo
am_libpva_plugin_la_OBJECTS = $(am__objects_19)
nodist_libpva_plugin_la_OBJECTS =
libpva_plugin_la_OBJECTS = $(am_libpva_plugin_la_OBJECTS) \
	$(nodist_libpva_plugin_la_OBJECTS)
libpva_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libpva_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am__objects_20 = librawaud_plugin_la-rawaud.lo
am_librawaud_plugin_la_OBJECTS = $(am__objects_20)
nodist_librawaud_plugin_la_OBJECTS =
librawaud_plugin_la_OBJECTS = $(am_librawaud_plugin_la_OBJECTS) \
	$(nodist_librawaud_plugin_la_OBJECTS)
librawaud_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(librawaud_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_21 = librawdv_plugin_la-rawdv.lo
am_librawdv_plugin_la_OBJECTS = $(am__objects_21)
nodist_librawdv_plugin_la_OBJECTS =
librawdv_plugin_la_OBJECTS = $(am_librawdv_plugin_la_OBJECTS) \
	$(nodist_librawdv_plugin_la_OBJECTS)
librawdv_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(librawdv_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_22 = librawvid_plugin_la-rawvid.lo
am_librawvid_plugin_la_OBJECTS = $(am__objects_22)
nodist_librawvid_plugin_la_OBJECTS =
librawvid_plugin_la_OBJECTS = $(am_librawvid_plugin_la_OBJECTS) \
	$(nodist_librawvid_plugin_la_OBJECTS)
librawvid_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(librawvid_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_23 = libreal_plugin_la-real.lo
am_libreal_plugin_la_OBJECTS = $(am__objects_23)
nodist_libreal_plugin_la_OBJECTS =
libreal_plugin_la_OBJECTS = $(am_libreal_plugin_la_OBJECTS) \
	$(nodist_libreal_plugin_la_OBJECTS)
libreal_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libreal_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am__objects_24 = libsmf_plugin_la-smf.lo
am_libsmf_plugin_la_OBJECTS = $(am__objects_24)
nodist_libsmf_plugin_la_OBJECTS =
libsmf_plugin_la_OBJECTS = $(am_libsmf_plugin_la_OBJECTS) \
	$(nodist_libsmf_plugin_la_OBJECTS)
libsmf_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libsmf_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am__objects_25 = libsubtitle_plugin_la-subtitle.lo
am_libsubtitle_plugin_la_OBJECTS = $(am__objects_25)
nodist_libsubtitle_plugin_la_OBJECTS =
libsubtitle_plugin_la_OBJECTS = $(am_libsubtitle_plugin_la_OBJECTS) \
	$(nodist_libsubtitle_plugin_la_OBJECTS)
libsubtitle_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libsubtitle_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_26 = libts_plugin_la-ts.lo libts_plugin_la-csa.lo
am_libts_plugin_la_OBJECTS = $(am__objects_26)
nodist_libts_plugin_la_OBJECTS =
libts_plugin_la_OBJECTS = $(am_libts_plugin_la_OBJECTS) \
	$(nodist_libts_plugin_la_OBJECTS)
libts_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libts_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am__objects_27 = libtta_plugin_la-tta.lo
am_libtta_plugin_la_OBJECTS = $(am__objects_27)
nodist_libtta_plugin_la_OBJECTS =
libtta_plugin_la_OBJECTS = $(am_libtta_plugin_la_OBJECTS) \
	$(nodist_libtta_plugin_la_OBJECTS)
libtta_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libtta_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am__objects_28 = libty_plugin_la-ty.lo
am_libty_plugin_la_OBJECTS = $(am__objects_28)
nodist_libty_plugin_la_OBJECTS =
libty_plugin_la_OBJECTS = $(am_libty_plugin_la_OBJECTS) \
	$(nodist_libty_plugin_la_OBJECTS)
libty_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libty_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am__objects_29 = libvc1_plugin_la-vc1.lo
am_libvc1_plugin_la_OBJECTS = $(am__objects_29)
nodist_libvc1_plugin_la_OBJECTS =
libvc1_plugin_la_OBJECTS = $(am_libvc1_plugin_la_OBJECTS) \
	$(nodist_libvc1_plugin_la_OBJECTS)
libvc1_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libvc1_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am__objects_30 = libvobsub_plugin_la-vobsub.lo
am_libvobsub_plugin_la_OBJECTS = $(am__objects_30)
nodist_libvobsub_plugin_la_OBJECTS =
libvobsub_plugin_la_OBJECTS = $(am_libvobsub_plugin_la_OBJECTS) \
	$(nodist_libvobsub_plugin_la_OBJECTS)
libvobsub_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libvobsub_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_31 = libvoc_plugin_la-voc.lo
am_libvoc_plugin_la_OBJECTS = $(am__objects_31)
nodist_libvoc_plugin_la_OBJECTS =
libvoc_plugin_la_OBJECTS = $(am_libvoc_plugin_la_OBJECTS) \
	$(nodist_libvoc_plugin_la_OBJECTS)
libvoc_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libvoc_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am__objects_32 = libwav_plugin_la-wav.lo
am_libwav_plugin_la_OBJECTS = $(am__objects_32)
nodist_libwav_plugin_la_OBJECTS =
libwav_plugin_la_OBJECTS = $(am_libwav_plugin_la_OBJECTS) \
	$(nodist_libwav_plugin_la_OBJECTS)
libwav_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libwav_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am__objects_33 = libxa_plugin_la-xa.lo
am_libxa_plugin_la_OBJECTS = $(am__objects_33)
nodist_libxa_plugin_la_OBJECTS =
libxa_plugin_la_OBJECTS = $(am_libxa_plugin_la_OBJECTS) \
	$(nodist_libxa_plugin_la_OBJECTS)
libxa_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libxa_plugin_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/autotools/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX   " $@;
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(libaiff_plugin_la_SOURCES) \
	$(nodist_libaiff_plugin_la_SOURCES) \
	$(libasademux_plugin_la_SOURCES) \
	$(nodist_libasademux_plugin_la_SOURCES) \
	$(libau_plugin_la_SOURCES) $(nodist_libau_plugin_la_SOURCES) \
	$(libdemux_cdg_plugin_la_SOURCES) \
	$(nodist_libdemux_cdg_plugin_la_SOURCES) \
	$(libdemuxdump_plugin_la_SOURCES) \
	$(nodist_libdemuxdump_plugin_la_SOURCES) \
	$(libdirac_plugin_la_SOURCES) \
	$(nodist_libdirac_plugin_la_SOURCES) \
	$(libflacsys_plugin_la_SOURCES) \
	$(nodist_libflacsys_plugin_la_SOURCES) \
	$(libgme_plugin_la_SOURCES) $(nodist_libgme_plugin_la_SOURCES) \
	$(libimage_plugin_la_SOURCES) \
	$(nodist_libimage_plugin_la_SOURCES) \
	$(liblive555_plugin_la_SOURCES) \
	$(nodist_liblive555_plugin_la_SOURCES) \
	$(libmjpeg_plugin_la_SOURCES) \
	$(nodist_libmjpeg_plugin_la_SOURCES) \
	$(libmod_plugin_la_SOURCES) $(nodist_libmod_plugin_la_SOURCES) \
	$(libmpc_plugin_la_SOURCES) $(nodist_libmpc_plugin_la_SOURCES) \
	$(libnsc_plugin_la_SOURCES) $(nodist_libnsc_plugin_la_SOURCES) \
	$(libnsv_plugin_la_SOURCES) $(nodist_libnsv_plugin_la_SOURCES) \
	$(libnuv_plugin_la_SOURCES) $(nodist_libnuv_plugin_la_SOURCES) \
	$(libogg_plugin_la_SOURCES) $(nodist_libogg_plugin_la_SOURCES) \
	$(libps_plugin_la_SOURCES) $(nodist_libps_plugin_la_SOURCES) \
	$(libpva_plugin_la_SOURCES) $(nodist_libpva_plugin_la_SOURCES) \
	$(librawaud_plugin_la_SOURCES) \
	$(nodist_librawaud_plugin_la_SOURCES) \
	$(librawdv_plugin_la_SOURCES) \
	$(nodist_librawdv_plugin_la_SOURCES) \
	$(librawvid_plugin_la_SOURCES) \
	$(nodist_librawvid_plugin_la_SOURCES) \
	$(libreal_plugin_la_SOURCES) \
	$(nodist_libreal_plugin_la_SOURCES) \
	$(libsmf_plugin_la_SOURCES) $(nodist_libsmf_plugin_la_SOURCES) \
	$(libsubtitle_plugin_la_SOURCES) \
	$(nodist_libsubtitle_plugin_la_SOURCES) \
	$(libts_plugin_la_SOURCES) $(nodist_libts_plugin_la_SOURCES) \
	$(libtta_plugin_la_SOURCES) $(nodist_libtta_plugin_la_SOURCES) \
	$(libty_plugin_la_SOURCES) $(nodist_libty_plugin_la_SOURCES) \
	$(libvc1_plugin_la_SOURCES) $(nodist_libvc1_plugin_la_SOURCES) \
	$(libvobsub_plugin_la_SOURCES) \
	$(nodist_libvobsub_plugin_la_SOURCES) \
	$(libvoc_plugin_la_SOURCES) $(nodist_libvoc_plugin_la_SOURCES) \
	$(libwav_plugin_la_SOURCES) $(nodist_libwav_plugin_la_SOURCES) \
	$(libxa_plugin_la_SOURCES) $(nodist_libxa_plugin_la_SOURCES)
DIST_SOURCES = $(libaiff_plugin_la_SOURCES) \
	$(libasademux_plugin_la_SOURCES) $(libau_plugin_la_SOURCES) \
	$(libdemux_cdg_plugin_la_SOURCES) \
	$(libdemuxdump_plugin_la_SOURCES) \
	$(libdirac_plugin_la_SOURCES) $(libflacsys_plugin_la_SOURCES) \
	$(libgme_plugin_la_SOURCES) $(libimage_plugin_la_SOURCES) \
	$(liblive555_plugin_la_SOURCES) $(libmjpeg_plugin_la_SOURCES) \
	$(libmod_plugin_la_SOURCES) $(libmpc_plugin_la_SOURCES) \
	$(libnsc_plugin_la_SOURCES) $(libnsv_plugin_la_SOURCES) \
	$(libnuv_plugin_la_SOURCES) $(libogg_plugin_la_SOURCES) \
	$(libps_plugin_la_SOURCES) $(libpva_plugin_la_SOURCES) \
	$(librawaud_plugin_la_SOURCES) $(librawdv_plugin_la_SOURCES) \
	$(librawvid_plugin_la_SOURCES) $(libreal_plugin_la_SOURCES) \
	$(libsmf_plugin_la_SOURCES) $(libsubtitle_plugin_la_SOURCES) \
	$(libts_plugin_la_SOURCES) $(libtta_plugin_la_SOURCES) \
	$(libty_plugin_la_SOURCES) $(libvc1_plugin_la_SOURCES) \
	$(libvobsub_plugin_la_SOURCES) $(libvoc_plugin_la_SOURCES) \
	$(libwav_plugin_la_SOURCES) $(libxa_plugin_la_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /home/skoruga/vlc-shaders/vlc/autotools/missing --run aclocal-1.11
ALIASES =  cvlc rvlc svlc qvlc
ALSA_CFLAGS = 
ALSA_LIBS = 
AMTAR = ${SHELL} /home/skoruga/vlc-shaders/vlc/autotools/missing --run tar
AM_CPPFLAGS = 
AM_DEFAULT_VERBOSITY = 0
AR = ar
ARCH = i586 mmx sse sse2
ARM_NEON_CFLAGS = 
AS = as
ASM = 
AUTOCONF = ${SHELL} /home/skoruga/vlc-shaders/vlc/autotools/missing --run autoconf
AUTOHEADER = ${SHELL} /home/skoruga/vlc-shaders/vlc/autotools/missing --run autoheader
AUTOMAKE = ${SHELL} /home/skoruga/vlc-shaders/vlc/autotools/missing --run automake-1.11
AVCODEC_CFLAGS = -IC:/Msys/1.0/win32/include  
AVCODEC_LIBS = -LC:/Msys/1.0/win32/lib -lavcodec -lpsapi -lz -lgsm -lmp3lame -lm -lvpx -lavutil  
AVFORMAT_CFLAGS = -IC:/Msys/1.0/win32/include  
AVFORMAT_LIBS = -LC:/Msys/1.0/win32/lib -lavformat -lavcodec -lpsapi -lz -lgsm -lmp3lame -lm -lvpx -lavutil  
AWK = gawk
BONJOUR_CFLAGS = 
BONJOUR_LIBS = 
CACA_CFLAGS = -IC:/Msys/1.0/win32/include  
CACA_LIBS = -LC:/Msys/1.0/win32/lib -lcaca -lz  
CC = gcc -std=gnu99
CCAS = gcc -std=gnu99
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -g -O2
CCDEPMODE = depmode=gcc3
CFLAGS =  -mms-bitfields -Wall -Wextra -Wsign-compare -Wundef -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wmissing-prototypes -Wvolatile-register-var -Werror-implicit-function-declaration
CONTRIB_DIR = 
COPYRIGHT_MESSAGE = Copyright Â© 1996-2010 the VideoLAN team
COPYRIGHT_YEARS = 1996-2010
CPP = gcc -std=gnu99 -E
CPPFLAGS = -I$(top_srcdir)/include -I$(top_builddir)/include -I/usr/win32/include -I/usr/win32/include/ebml -D__USE_MINGW_ANSI_STDIO=1 -DSYS_MINGW32
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -mms-bitfields 
CYGPATH = 
CYGPATH_W = echo
DBUS_CFLAGS = 
DBUS_LIBS = 
DC1394_CFLAGS = 
DC1394_LIBS = 
DCA_CFLAGS = -IC:/Msys/1.0/win32/include/libdca  
DCA_LIBS = -LC:/Msys/1.0/win32/lib -ldca  
DEFS = -DHAVE_CONFIG_H
DEFS_BIGENDIAN = 
DEPDIR = .deps
DIRAC_CFLAGS = 
DIRAC_LIBS = 
DIRECTFB_CFLAGS = 
DIRECTFB_CONFIG = 
DIRECTFB_LIBS = 
DLLTOOL = dlltool
DSYMUTIL = 
DUMPBIN = :
DVDNAV_CONFIG = /usr/win32/bin/dvdnav-config
DV_CFLAGS = 
DV_LIBS = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = .exe
FGREP = /bin/grep -F
FILE_LIBVLCCORE_DLL = !define LIBVLCCORE_DLL libvlccore.dll
FILE_LIBVLC_DLL = !define LIBVLC_DLL libvlc.dll
FLAC_CFLAGS = -IC:/Msys/1.0/win32/include/FLAC -IC:/Msys/1.0/win32/include  
FLAC_LIBS = -LC:/Msys/1.0/win32/lib -lFLAC -lm -logg  
FLUIDSYNTH_CFLAGS = -IC:/Msys/1.0/win32/include  
FLUIDSYNTH_LIBS = -LC:/Msys/1.0/win32/lib -lfluidsynth -ldsound -lwinmm  
FREETYPE_CFLAGS = -IC:/Msys/1.0/win32/include/freetype2 -IC:/Msys/1.0/win32/include  
FREETYPE_LIBS = -LC:/Msys/1.0/win32/lib -lfreetype -lz  
FRIBIDI_CFLAGS = -IC:/Msys/1.0/win32/include/fribidi  
FRIBIDI_LIBS = -LC:/Msys/1.0/win32/lib -lfribidi  
GCRYPT_CFLAGS = -I/usr/win32/include
GCRYPT_LIBS = -L/usr/win32/lib -lgcrypt -lgpg-error
GETTEXT_MACRO_VERSION = 0.17
GL_CFLAGS = 
GL_LIBS = 
GMSGFMT = :
GMSGFMT_015 = :
GNOMEVFS_CFLAGS = 
GNOMEVFS_LIBS = 
GNUGETOPT_LIBS = 
GNUTLS_CFLAGS = -IC:/Msys/1.0/win32/include  
GNUTLS_LIBS = -LC:/Msys/1.0/win32/lib -lgnutls  
GOOM_CFLAGS = -IC:/Msys/1.0/win32/include  
GOOM_LIBS = -LC:/Msys/1.0/win32/lib -lgoom2  
GREP = /bin/grep
HILDON_CFLAGS = 
HILDON_FM_CFLAGS = 
HILDON_FM_LIBS = 
HILDON_LIBS = 
INSTALL = /bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTLLIBS = 
INTL_MACOSX_LIBS = 
JACK_CFLAGS = 
JACK_LIBS = 
KATE_CFLAGS = -IC:/Msys/1.0/win32/include  
KATE_LIBS = -LC:/Msys/1.0/win32/lib -lkate  
KDE4_CONFIG = kde4-config
LD = ld
LDFLAGS = -L/usr/win32/lib
LIBASS_CFLAGS = -IC:/Msys/1.0/win32/include -IC:/Msys/1.0/win32/include/freetype2  
LIBASS_LIBS = -LC:/Msys/1.0/win32/lib -L/usr/win32/lib -lass -lm -lfontconfig -lxml2 -liconv -lfreetype -lz  
LIBCDDB_CFLAGS = -IC:/Msys/1.0/win32/include  
LIBCDDB_LIBS = C:/Msys/1.0/win32/lib/libregex.a -LC:/Msys/1.0/win32/lib -lcddb -lregex -lws2_32  
LIBCDIO_CFLAGS = 
LIBCDIO_LIBS = 
LIBDL = 
LIBEXT = .dll
LIBICONV = /usr/win32/lib/libiconv.a
LIBINTL = 
LIBMODPLUG_CFLAGS = -IC:/Msys/1.0/win32/include -IC:/Msys/1.0/win32/include/libmodplug  
LIBMODPLUG_LIBS = -LC:/Msys/1.0/win32/lib -lmodplug -lstdc++ -lm  
LIBMPEG2_CFLAGS = -IC:/Msys/1.0/win32/include/mpeg2dec  
LIBMPEG2_LIBS = -LC:/Msys/1.0/win32/lib -lmpeg2  
LIBOBJS =  ${LIBOBJDIR}asprintf$U.o ${LIBOBJDIR}getdelim$U.o ${LIBOBJDIR}gmtime_r$U.o ${LIBOBJDIR}localtime_r$U.o ${LIBOBJDIR}nrand48$U.o ${LIBOBJDIR}strcasestr$U.o ${LIBOBJDIR}strlcpy$U.o ${LIBOBJDIR}strndup$U.o ${LIBOBJDIR}strnlen$U.o ${LIBOBJDIR}strsep$U.o ${LIBOBJDIR}strtok_r$U.o ${LIBOBJDIR}vasprintf$U.o
LIBPROXY_CFLAGS = 
LIBPROXY_LIBS = 
LIBS = -lmingw32 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBV4L2_CFLAGS = 
LIBV4L2_LIBS = 
LIBV4L_CFLAGS = 
LIBV4L_LIBS = 
LIBVA_CFLAGS = 
LIBVA_LIBS = 
LIBVCDINFO_CFLAGS = 
LIBVCDINFO_LIBS = 
LIBXML2_CFLAGS = -DLIBXML_STATIC -IC:/Msys/1.0/win32/include/libxml2  
LIBXML2_LIBS = -LC:/Msys/1.0/win32/lib -lxml2  
LIPO = 
LN_S = ln -s
LTLIBICONV = -L/usr/win32/lib -liconv
LTLIBINTL = 
LTLIBOBJS =  ${LIBOBJDIR}asprintf$U.lo ${LIBOBJDIR}getdelim$U.lo ${LIBOBJDIR}gmtime_r$U.lo ${LIBOBJDIR}localtime_r$U.lo ${LIBOBJDIR}nrand48$U.lo ${LIBOBJDIR}strcasestr$U.lo ${LIBOBJDIR}strlcpy$U.lo ${LIBOBJDIR}strndup$U.lo ${LIBOBJDIR}strnlen$U.lo ${LIBOBJDIR}strsep$U.lo ${LIBOBJDIR}strtok_r$U.lo ${LIBOBJDIR}vasprintf$U.lo
LTLIBa52tofloat32 = liba52tofloat32_plugin.la
LTLIBaa = 
LTLIBaccess_alsa = 
LTLIBaccess_avio = 
LTLIBaccess_dv = 
LTLIBaccess_eyetv = 
LTLIBaccess_gnomevfs = 
LTLIBaccess_jack = 
LTLIBaccess_mmap = 
LTLIBaccess_mtp = 
LTLIBaccess_oss = 
LTLIBaccess_output_shout = libaccess_output_shout_plugin.la
LTLIBaccess_realrtsp = libaccess_realrtsp_plugin.la
LTLIBaccess_sftp = 
LTLIBaccess_smb = libaccess_smb_plugin.la
LTLIBalsa = 
LTLIBaout_directx = libaout_directx_plugin.la
LTLIBaout_sdl = libaout_sdl_plugin.la
LTLIBasademux = 
LTLIBatmo = libatmo_plugin.la
LTLIBauhal = 
LTLIBavcodec = libavcodec_plugin.la
LTLIBavformat = 
LTLIBbda = libbda_plugin.la
LTLIBbonjour = 
LTLIBcaca = libcaca_plugin.la
LTLIBcdda = libcdda_plugin.la
LTLIBdbus = 
LTLIBdc1394 = 
LTLIBdirac = 
LTLIBdirect3d = libdirect3d_plugin.la
LTLIBdirectfb = 
LTLIBdirectx = libdirectx_plugin.la
LTLIBdmo = libdmo_plugin.la
LTLIBdshow = libdshow_plugin.la
LTLIBdtstofloat32 = libdtstofloat32_plugin.la
LTLIBdvb = 
LTLIBdvdnav = libdvdnav_plugin.la
LTLIBdvdread = libdvdread_plugin.la
LTLIBdynamicoverlay = 
LTLIBfaad = libfaad_plugin.la
LTLIBfb = 
LTLIBfbosd = 
LTLIBflac = libflac_plugin.la
LTLIBfluidsynth = libfluidsynth_plugin.la
LTLIBfreetype = libfreetype_plugin.la
LTLIBglobalhotkeys = libglobalhotkeys_plugin.la
LTLIBglwin32 = libglwin32_plugin.la
LTLIBgme = 
LTLIBgnutls = libgnutls_plugin.la
LTLIBgoom = libgoom_plugin.la
LTLIBgrowl = 
LTLIBgrowl_udp = 
LTLIBhd1000a = 
LTLIBhildon = 
LTLIBid3tag = 
LTLIBinhibit = 
LTLIBjack = 
LTLIBkate = libkate_plugin.la
LTLIBlibass = liblibass_plugin.la
LTLIBlibmpeg2 = liblibmpeg2_plugin.la
LTLIBlirc = 
LTLIBlive555 = liblive555_plugin.la
LTLIBmacosx = 
LTLIBmacosx_dialog_provider = 
LTLIBminimal_macosx = 
LTLIBmkv = 
LTLIBmod = libmod_plugin.la
LTLIBmozilla = 
LTLIBmpc = 
LTLIBmpgatofixed32 = libmpgatofixed32_plugin.la
LTLIBmtp = 
LTLIBmux_ogg = libmux_ogg_plugin.la
LTLIBmux_ts = libmux_ts_plugin.la
LTLIBncurses = 
LTLIBnotify = 
LTLIBogg = libogg_plugin.la
LTLIBoldhttp = liboldhttp_plugin.la
LTLIBomxil = 
LTLIBopencv_example = 
LTLIBosd_parser = libosd_parser_plugin.la
LTLIBosdmenu = libosdmenu_plugin.la
LTLIBoss = 
LTLIBosso_screensaver = 
LTLIBpanoramix = libpanoramix_plugin.la
LTLIBpng = libpng_plugin.la
LTLIBportaudio = libportaudio_plugin.la
LTLIBpostproc = libpostproc_plugin.la
LTLIBprojectm = libprojectm_plugin.la
LTLIBpulse = 
LTLIBpvr = 
LTLIBqt4 = libqt4_plugin.la
LTLIBqtcapture = 
LTLIBquicktime = libquicktime_plugin.la
LTLIBrealvideo = librealvideo_plugin.la
LTLIBremoteosd = libremoteosd_plugin.la
LTLIBschroedinger = libschroedinger_plugin.la
LTLIBscreen = libscreen_plugin.la
LTLIBscreensaver = 
LTLIBsdl_image = libsdl_image_plugin.la
LTLIBshine = 
LTLIBskins2 = libskins2_plugin.la
LTLIBsnapshot = 
LTLIBspeex = libspeex_plugin.la
LTLIBsqlite = 
LTLIBstream_out_raop = libstream_out_raop_plugin.la
LTLIBstream_out_switcher = 
LTLIBsvg = 
LTLIBswscale = libswscale_plugin.la
LTLIBtaglib = 
LTLIBtelepathy = 
LTLIBtelx = 
LTLIBtheora = libtheora_plugin.la
LTLIBtremor = 
LTLIBts = libts_plugin.la
LTLIBtwolame = libtwolame_plugin.la
LTLIBudev = 
LTLIBunzip = libunzip_plugin.la
LTLIBupnp_cc = 
LTLIBupnp_intel = 
LTLIBv4l = 
LTLIBv4l2 = 
LTLIBvcd = libvcd_plugin.la
LTLIBvcdx = 
LTLIBvisual = libvisual_plugin.la
LTLIBvorbis = libvorbis_plugin.la
LTLIBvout_macosx = 
LTLIBvout_sdl = libvout_sdl_plugin.la
LTLIBwaveout = libwaveout_plugin.la
LTLIBwingapi = 
LTLIBwingdi = libwingdi_plugin.la
LTLIBwma_fixed = 
LTLIBx264 = libx264_plugin.la
LTLIBxcb_apps = 
LTLIBxcb_glx = 
LTLIBxcb_screen = 
LTLIBxcb_window = 
LTLIBxcb_x11 = 
LTLIBxcb_xv = 
LTLIBxdg_screensaver = 
LTLIBxml = libxml_plugin.la
LTLIBxosd = 
LTLIBzip = libzip_plugin.la
LTLIBzvbi = libzvbi_plugin.la
LUAC = /bin/luac
LUA_CFLAGS = -IC:/Msys/1.0/win32/include  
LUA_LIBS = -LC:/Msys/1.0/win32/lib -llua -lm  
MACOSX_DEPLOYMENT_TARGET = 
MAINT = 
MAKEINFO = ${SHELL} /home/skoruga/vlc-shaders/vlc/autotools/missing --run makeinfo
MIDL = no
MINIZIP_CFLAGS = -I\${top_srcdir}/libs/unzip
MINIZIP_LIBS = \${top_builddir}/libs/unzip/libunzip.la
MKDIR_P = /bin/mkdir -p
MMX_CFLAGS = -mmmx
MOC = moc
MOZILLA_CFLAGS = 
MOZILLA_CONFIG = 
MOZILLA_LIBS = 
MOZILLA_SDK_PATH = /usr/win32/gecko-sdk
MSGFMT = :
MSGFMT_015 = :
MSGMERGE = :
MTP_CFLAGS = 
MTP_LIBS = 
MUX_OGG_CFLAGS = -IC:/Msys/1.0/win32/include  
MUX_OGG_LIBS = -LC:/Msys/1.0/win32/lib -logg  
NM = nm
NMEDIT = 
NOTIFY_CFLAGS = 
NOTIFY_LIBS = 
OBJC = gcc
OBJCDEPMODE = depmode=gcc3
OBJCFLAGS = 
OBJCOPY = objcopy
OBJDUMP = objdump
OBJEXT = o
OGG_CFLAGS = -IC:/Msys/1.0/win32/include  
OGG_LIBS = -LC:/Msys/1.0/win32/lib -logg  
OPENCV_CFLAGS = 
OPENCV_LIBS = 
OSSO_SCREENSAVER_CFLAGS = 
OSSO_SCREENSAVER_LIBS = 
OTOOL = 
OTOOL64 = 
PACKAGE = vlc
PACKAGE_BUGREPORT = 
PACKAGE_NAME = vlc
PACKAGE_STRING = vlc 1.2.0-git
PACKAGE_TARNAME = vlc
PACKAGE_VERSION = 1.2.0-git
PATH_SEPARATOR = :
PCRE_CFLAGS = 
PCRE_LIBS = 
PEFLAGS = :
PKGDIR = vlc
PKG_CONFIG = /bin/pkg-config --static
PKG_CONFIG_PATH = /win32/lib/pkgconfig
PORTAUDIO_CFLAGS = -mthreads -IC:/Msys/1.0/win32/include  
PORTAUDIO_LIBS = -LC:/Msys/1.0/win32/lib -lportaudio -lwinmm -lm -lstdc++ -lole32 -luuid  
POSTPROC_CFLAGS = -IC:/Msys/1.0/win32/include  
POSTPROC_LIBS = -LC:/Msys/1.0/win32/lib -lpostproc -lavutil  
POSUB = 
PROJECTM2_CFLAGS = -IC:/Msys/1.0/win32/include  
PROJECTM2_LIBS = -LC:/Msys/1.0/win32/lib -lprojectM -lMilkdropPresetFactory -lRenderer -lglu32 -lglew32 -lopengl32  
PROJECTM_CFLAGS = -IC:/Msys/1.0/win32/include  
PROJECTM_LIBS = -LC:/Msys/1.0/win32/lib -lprojectM -lMilkdropPresetFactory -lRenderer -lglu32 -lglew32 -lopengl32  
PULSE_CFLAGS = 
PULSE_LIBS = 
QT4_CFLAGS = -DQT_NODLL -IC:/Msys/1.0/win32/include/qt4 -IC:/Msys/1.0/win32/include/qt4/QtCore -IC:/Msys/1.0/win32/include/qt4/QtGui  
QT4_LIBS = -Wl,--subsystem,windows -mwindows -LC:/Msys/1.0/win32/lib -lqjpeg -lqtaccessiblewidgets -lQtGui -lQtCore -lrpcrt4 -loleaut32 -lole32 -luuid -lwinspool -lwinmm -lshell32 -lcomctl32 -lcomdlg32 -ladvapi32 -lgdi32 -limm32 -lwsock32  
RANLIB = ranlib
RCC = rcc
SCHROEDINGER_CFLAGS = -IC:/Msys/1.0/win32/include/schroedinger-1.0 -IC:/Msys/1.0/win32/include/orc-0.4  
SCHROEDINGER_LIBS = -LC:/Msys/1.0/win32/lib -lschroedinger-1.0 -lorc-0.4 -lm  
SDL_CFLAGS = -D_GNU_SOURCE=1 -Dmain=SDL_main -IC:/Msys/1.0/win32/include/SDL  
SDL_IMAGE_CFLAGS = -D_GNU_SOURCE=1 -Dmain=SDL_main -IC:/Msys/1.0/win32/include/SDL  
SDL_IMAGE_LIBS = -mwindows -LC:/Msys/1.0/win32/lib -lSDL_image -lmingw32 -lSDLmain -lSDL -liconv -lm -luser32 -lgdi32 -lwinmm  
SDL_LIBS = -mwindows -LC:/Msys/1.0/win32/lib -lmingw32 -lSDLmain -lSDL -liconv -lm -luser32 -lgdi32 -lwinmm  
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
SHOUT_CFLAGS = -IC:/Msys/1.0/win32/include  
SHOUT_LIBS = -LC:/Msys/1.0/win32/lib -lshout -lvorbis -ltheora -lspeex -lm -logg  
SOCKET_LIBS = 
SPEEX_CFLAGS = -IC:/Msys/1.0/win32/include  
SPEEX_LIBS = -LC:/Msys/1.0/win32/lib -logg -lspeex -lm  
SQLITE_CFLAGS = 
SQLITE_LIBS = 
SSE2_CFLAGS = -msse2
STRIP = strip
SVG_CFLAGS = 
SVG_LIBS = 
SWSCALE_CFLAGS = -IC:/Msys/1.0/win32/include  
SWSCALE_LIBS = -LC:/Msys/1.0/win32/lib -lswscale -lavutil  
SYS = mingw32
TAGLIB_CFLAGS = 
TAGLIB_LIBS = 
THEORA_CFLAGS = -IC:/Msys/1.0/win32/include  
THEORA_LIBS = -LC:/Msys/1.0/win32/lib -ltheora -logg  
TIGER_CFLAGS = 
TIGER_LIBS = 
TWOLAME_CFLAGS = -IC:/Msys/1.0/win32/include  
TWOLAME_LIBS = -LC:/Msys/1.0/win32/lib -ltwolame  
U2D = unix2dos
UDEV_CFLAGS = 
UDEV_LIBS = 
UIC = uic
UPNP_CFLAGS = 
UPNP_LIBS = 
USE_NLS = no
VERSION = 1.2.0-git
VERSION_EXTRA = -git
VERSION_EXTRA_RC = 99
VERSION_MAJOR = 1
VERSION_MESSAGE = 1.2.0-git Twoflower
VERSION_MINOR = 2
VERSION_REVISION = 0
VLC_CONFIG = top_srcdir="$(top_srcdir)" top_builddir="$(top_builddir)" $(top_builddir)/vlc-config
VORBIS_CFLAGS = -IC:/Msys/1.0/win32/include  
VORBIS_LIBS = -LC:/Msys/1.0/win32/lib -lvorbisenc -lvorbis -lm -logg  
WIDL = no
WINDRES = windres
WINE_SDK_PATH = 
X264_CFLAGS = -IC:/Msys/1.0/win32/include  
X264_LIBS = -LC:/Msys/1.0/win32/lib -lx264 -lpthreadGC2 -lwsock32  
XCB_CFLAGS = 
XCB_KEYSYMS_CFLAGS = 
XCB_KEYSYMS_LIBS = 
XCB_LIBS = 
XCB_RANDR_CFLAGS = 
XCB_RANDR_LIBS = 
XCB_SHM_CFLAGS = 
XCB_SHM_LIBS = 
XCB_XV_CFLAGS = 
XCB_XV_LIBS = 
XGETTEXT = :
XGETTEXT_015 = :
XGETTEXT_EXTRA_OPTIONS = 
XLIB_XCB_CFLAGS = 
XLIB_XCB_LIBS = 
XMKMF = 
XPM_CFLAGS = 
XPM_LIBS = 
XPROTO_CFLAGS = 
XPROTO_LIBS = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS = 
ZVBI_CFLAGS = -IC:/Msys/1.0/win32/include  
ZVBI_LIBS = /usr/win32/lib/libiconv.a -LC:/Msys/1.0/win32/lib -L/usr/win32/lib -lzvbi -lpthreadGC2 -lwsock32 -lintl -liconv -lm -lpng -lz  
abs_builddir = /home/skoruga/vlc-shaders/vlc/modules/demux
abs_srcdir = /home/skoruga/vlc-shaders/vlc/modules/demux
abs_top_builddir = /home/skoruga/vlc-shaders/vlc
abs_top_srcdir = /home/skoruga/vlc-shaders/vlc
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_DUMPBIN = 
ac_ct_OBJC = gcc
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = i386-pc-linux-gnu
build_alias = i386-linux
build_cpu = i386
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i586-pc-mingw32msvc
host_alias = i586-mingw32msvc
host_cpu = i586
host_os = mingw32msvc
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/skoruga/vlc-shaders/vlc/autotools/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
soliddatadir = ${datadir}/kde4/apps/solid/actions
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
to_host_path_cmd = func_nix_to_mingw_path_convert
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
vlcdatadir = ${datadir}/${PKGDIR}
vlclibdir = ${libdir}/${PKGDIR}
basedir = demux
dir = demux
mods = aiff asademux au demux_cdg demuxdump dirac flacsys gme image live555 mjpeg mod mpc nsc nsv nuv ogg ps pva rawaud rawdv rawvid real smf subtitle ts tta ty vc1 vobsub voc wav xa
libvlc_LTLIBRARIES = $(LTLIBasademux) $(LTLIBgme) $(LTLIBlive555) \
	$(LTLIBmod) $(LTLIBmpc) $(LTLIBogg) $(LTLIBts) \
	libaiff_plugin.la libau_plugin.la librawaud_plugin.la \
	libdirac_plugin.la libdemux_cdg_plugin.la \
	libdemuxdump_plugin.la libflacsys_plugin.la libmjpeg_plugin.la \
	libnsc_plugin.la libnsv_plugin.la libnuv_plugin.la \
	libpva_plugin.la libps_plugin.la librawdv_plugin.la \
	librawvid_plugin.la libreal_plugin.la libsmf_plugin.la \
	libsubtitle_plugin.la libtta_plugin.la libty_plugin.la \
	libvc1_plugin.la libvobsub_plugin.la libvoc_plugin.la \
	libwav_plugin.la libxa_plugin.la libimage_plugin.la $(NULL)
EXTRA_LTLIBRARIES = libasademux_plugin.la libgme_plugin.la liblive555_plugin.la libmod_plugin.la libmpc_plugin.la libogg_plugin.la libts_plugin.la
NULL = 
libvlcdir = $(vlclibdir)/plugins/$(basedir)
EXTRA_DIST = Modules.am
BUILT_SOURCES = dummy.cpp
CLEANFILES = $(BUILT_SOURCES)
LTLIBVLCCORE = $(top_builddir)/src/libvlccore.la
AM_CFLAGS = `$(VLC_CONFIG) --cflags plugin $@`
AM_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin $@`
AM_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin $@`
AM_LDFLAGS = -rpath '$(libvlcdir)' \
	-avoid-version -module \
	-export-symbol-regex ^vlc_entry \
	-shrext $(LIBEXT) \
	-rpath "$(libvlcdir)" \
	-no-undefined \
	 `$(VLC_CONFIG) --ldflags plugin $@`

AM_LIBADD = `$(VLC_CONFIG) -libs plugin $@` \
	$(LTLIBVLCCORE) $(top_builddir)/compat/libcompat.la

SUBDIRS = asf avformat avi mkv mp4 mpeg playlist
SOURCES_flacsys = flac.c
SOURCES_ogg = ogg.c vorbis.h kate_categories.c kate_categories.h xiph.h
SOURCES_demuxdump = demuxdump.c
SOURCES_rawdv = rawdv.c
SOURCES_rawvid = rawvid.c
SOURCES_au = au.c
SOURCES_rawaud = rawaud.c
SOURCES_wav = wav.c
SOURCES_live555 = live555.cpp ../access/mms/asf.c ../access/mms/buffer.c
SOURCES_nsv = nsv.c
SOURCES_real = real.c
SOURCES_ts = ts.c ../mux/mpeg/csa.c
SOURCES_ps = ps.c ps.h
SOURCES_mod = mod.c dummy.cpp
SOURCES_pva = pva.c
SOURCES_aiff = aiff.c
SOURCES_mjpeg = mjpeg.c
SOURCES_subtitle = subtitle.c
SOURCES_asademux = subtitle_asa.c asademux.c asademux_defs.h asademux.h
SOURCES_ty = ty.c ../codec/cc.h
SOURCES_vobsub = vobsub.c vobsub.h
SOURCES_voc = voc.c
SOURCES_xa = xa.c
SOURCES_nuv = nuv.c
SOURCES_nsc = nsc.c
SOURCES_mpc = mpc.c
SOURCES_gme = gme.cpp
SOURCES_tta = tta.c
SOURCES_vc1 = vc1.c
SOURCES_demux_cdg = cdg.c
SOURCES_smf = smf.c
SOURCES_dirac = dirac.c
SOURCES_image = image.c

# The aiff plugin
libaiff_plugin_la_SOURCES = $(SOURCES_aiff)
nodist_libaiff_plugin_la_SOURCES = $(nodist_SOURCES_aiff)
# Force per-target objects:
libaiff_plugin_la_CFLAGS = $(AM_CFLAGS)
libaiff_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libaiff_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libaiff_plugin_la_LIBADD = $(AM_LIBADD)
libaiff_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The asademux plugin
libasademux_plugin_la_SOURCES = $(SOURCES_asademux)
nodist_libasademux_plugin_la_SOURCES = $(nodist_SOURCES_asademux)
# Force per-target objects:
libasademux_plugin_la_CFLAGS = $(AM_CFLAGS)
libasademux_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libasademux_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libasademux_plugin_la_LIBADD = $(AM_LIBADD)
libasademux_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The au plugin
libau_plugin_la_SOURCES = $(SOURCES_au)
nodist_libau_plugin_la_SOURCES = $(nodist_SOURCES_au)
# Force per-target objects:
libau_plugin_la_CFLAGS = $(AM_CFLAGS)
libau_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libau_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libau_plugin_la_LIBADD = $(AM_LIBADD)
libau_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The demux_cdg plugin
libdemux_cdg_plugin_la_SOURCES = $(SOURCES_demux_cdg)
nodist_libdemux_cdg_plugin_la_SOURCES = $(nodist_SOURCES_demux_cdg)
# Force per-target objects:
libdemux_cdg_plugin_la_CFLAGS = $(AM_CFLAGS)
libdemux_cdg_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libdemux_cdg_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libdemux_cdg_plugin_la_LIBADD = $(AM_LIBADD)
libdemux_cdg_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The demuxdump plugin
libdemuxdump_plugin_la_SOURCES = $(SOURCES_demuxdump)
nodist_libdemuxdump_plugin_la_SOURCES = $(nodist_SOURCES_demuxdump)
# Force per-target objects:
libdemuxdump_plugin_la_CFLAGS = $(AM_CFLAGS)
libdemuxdump_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libdemuxdump_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libdemuxdump_plugin_la_LIBADD = $(AM_LIBADD)
libdemuxdump_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The dirac plugin
libdirac_plugin_la_SOURCES = $(SOURCES_dirac)
nodist_libdirac_plugin_la_SOURCES = $(nodist_SOURCES_dirac)
# Force per-target objects:
libdirac_plugin_la_CFLAGS = $(AM_CFLAGS)
libdirac_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libdirac_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libdirac_plugin_la_LIBADD = $(AM_LIBADD)
libdirac_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The flacsys plugin
libflacsys_plugin_la_SOURCES = $(SOURCES_flacsys)
nodist_libflacsys_plugin_la_SOURCES = $(nodist_SOURCES_flacsys)
# Force per-target objects:
libflacsys_plugin_la_CFLAGS = $(AM_CFLAGS)
libflacsys_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libflacsys_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libflacsys_plugin_la_LIBADD = $(AM_LIBADD)
libflacsys_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The gme plugin
libgme_plugin_la_SOURCES = $(SOURCES_gme)
nodist_libgme_plugin_la_SOURCES = $(nodist_SOURCES_gme)
# Force per-target objects:
libgme_plugin_la_CFLAGS = $(AM_CFLAGS)
libgme_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libgme_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libgme_plugin_la_LIBADD = $(AM_LIBADD)
libgme_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The image plugin
libimage_plugin_la_SOURCES = $(SOURCES_image)
nodist_libimage_plugin_la_SOURCES = $(nodist_SOURCES_image)
# Force per-target objects:
libimage_plugin_la_CFLAGS = $(AM_CFLAGS)
libimage_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libimage_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libimage_plugin_la_LIBADD = $(AM_LIBADD)
libimage_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The live555 plugin
liblive555_plugin_la_SOURCES = $(SOURCES_live555)
nodist_liblive555_plugin_la_SOURCES = $(nodist_SOURCES_live555)
# Force per-target objects:
liblive555_plugin_la_CFLAGS = $(AM_CFLAGS)
liblive555_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
liblive555_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
liblive555_plugin_la_LIBADD = $(AM_LIBADD)
liblive555_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The mjpeg plugin
libmjpeg_plugin_la_SOURCES = $(SOURCES_mjpeg)
nodist_libmjpeg_plugin_la_SOURCES = $(nodist_SOURCES_mjpeg)
# Force per-target objects:
libmjpeg_plugin_la_CFLAGS = $(AM_CFLAGS)
libmjpeg_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libmjpeg_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libmjpeg_plugin_la_LIBADD = $(AM_LIBADD)
libmjpeg_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The mod plugin
libmod_plugin_la_SOURCES = $(SOURCES_mod)
nodist_libmod_plugin_la_SOURCES = $(nodist_SOURCES_mod)
# Force per-target objects:
libmod_plugin_la_CFLAGS = $(AM_CFLAGS)
libmod_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libmod_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libmod_plugin_la_LIBADD = $(AM_LIBADD)
libmod_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The mpc plugin
libmpc_plugin_la_SOURCES = $(SOURCES_mpc)
nodist_libmpc_plugin_la_SOURCES = $(nodist_SOURCES_mpc)
# Force per-target objects:
libmpc_plugin_la_CFLAGS = $(AM_CFLAGS)
libmpc_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libmpc_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libmpc_plugin_la_LIBADD = $(AM_LIBADD)
libmpc_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The nsc plugin
libnsc_plugin_la_SOURCES = $(SOURCES_nsc)
nodist_libnsc_plugin_la_SOURCES = $(nodist_SOURCES_nsc)
# Force per-target objects:
libnsc_plugin_la_CFLAGS = $(AM_CFLAGS)
libnsc_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libnsc_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libnsc_plugin_la_LIBADD = $(AM_LIBADD)
libnsc_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The nsv plugin
libnsv_plugin_la_SOURCES = $(SOURCES_nsv)
nodist_libnsv_plugin_la_SOURCES = $(nodist_SOURCES_nsv)
# Force per-target objects:
libnsv_plugin_la_CFLAGS = $(AM_CFLAGS)
libnsv_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libnsv_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libnsv_plugin_la_LIBADD = $(AM_LIBADD)
libnsv_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The nuv plugin
libnuv_plugin_la_SOURCES = $(SOURCES_nuv)
nodist_libnuv_plugin_la_SOURCES = $(nodist_SOURCES_nuv)
# Force per-target objects:
libnuv_plugin_la_CFLAGS = $(AM_CFLAGS)
libnuv_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libnuv_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libnuv_plugin_la_LIBADD = $(AM_LIBADD)
libnuv_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The ogg plugin
libogg_plugin_la_SOURCES = $(SOURCES_ogg)
nodist_libogg_plugin_la_SOURCES = $(nodist_SOURCES_ogg)
# Force per-target objects:
libogg_plugin_la_CFLAGS = $(AM_CFLAGS)
libogg_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libogg_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libogg_plugin_la_LIBADD = $(AM_LIBADD)
libogg_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The ps plugin
libps_plugin_la_SOURCES = $(SOURCES_ps)
nodist_libps_plugin_la_SOURCES = $(nodist_SOURCES_ps)
# Force per-target objects:
libps_plugin_la_CFLAGS = $(AM_CFLAGS)
libps_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libps_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libps_plugin_la_LIBADD = $(AM_LIBADD)
libps_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The pva plugin
libpva_plugin_la_SOURCES = $(SOURCES_pva)
nodist_libpva_plugin_la_SOURCES = $(nodist_SOURCES_pva)
# Force per-target objects:
libpva_plugin_la_CFLAGS = $(AM_CFLAGS)
libpva_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libpva_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libpva_plugin_la_LIBADD = $(AM_LIBADD)
libpva_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The rawaud plugin
librawaud_plugin_la_SOURCES = $(SOURCES_rawaud)
nodist_librawaud_plugin_la_SOURCES = $(nodist_SOURCES_rawaud)
# Force per-target objects:
librawaud_plugin_la_CFLAGS = $(AM_CFLAGS)
librawaud_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
librawaud_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
librawaud_plugin_la_LIBADD = $(AM_LIBADD)
librawaud_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The rawdv plugin
librawdv_plugin_la_SOURCES = $(SOURCES_rawdv)
nodist_librawdv_plugin_la_SOURCES = $(nodist_SOURCES_rawdv)
# Force per-target objects:
librawdv_plugin_la_CFLAGS = $(AM_CFLAGS)
librawdv_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
librawdv_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
librawdv_plugin_la_LIBADD = $(AM_LIBADD)
librawdv_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The rawvid plugin
librawvid_plugin_la_SOURCES = $(SOURCES_rawvid)
nodist_librawvid_plugin_la_SOURCES = $(nodist_SOURCES_rawvid)
# Force per-target objects:
librawvid_plugin_la_CFLAGS = $(AM_CFLAGS)
librawvid_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
librawvid_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
librawvid_plugin_la_LIBADD = $(AM_LIBADD)
librawvid_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The real plugin
libreal_plugin_la_SOURCES = $(SOURCES_real)
nodist_libreal_plugin_la_SOURCES = $(nodist_SOURCES_real)
# Force per-target objects:
libreal_plugin_la_CFLAGS = $(AM_CFLAGS)
libreal_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libreal_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libreal_plugin_la_LIBADD = $(AM_LIBADD)
libreal_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The smf plugin
libsmf_plugin_la_SOURCES = $(SOURCES_smf)
nodist_libsmf_plugin_la_SOURCES = $(nodist_SOURCES_smf)
# Force per-target objects:
libsmf_plugin_la_CFLAGS = $(AM_CFLAGS)
libsmf_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libsmf_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libsmf_plugin_la_LIBADD = $(AM_LIBADD)
libsmf_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The subtitle plugin
libsubtitle_plugin_la_SOURCES = $(SOURCES_subtitle)
nodist_libsubtitle_plugin_la_SOURCES = $(nodist_SOURCES_subtitle)
# Force per-target objects:
libsubtitle_plugin_la_CFLAGS = $(AM_CFLAGS)
libsubtitle_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libsubtitle_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libsubtitle_plugin_la_LIBADD = $(AM_LIBADD)
libsubtitle_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The ts plugin
libts_plugin_la_SOURCES = $(SOURCES_ts)
nodist_libts_plugin_la_SOURCES = $(nodist_SOURCES_ts)
# Force per-target objects:
libts_plugin_la_CFLAGS = $(AM_CFLAGS)
libts_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libts_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libts_plugin_la_LIBADD = $(AM_LIBADD)
libts_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The tta plugin
libtta_plugin_la_SOURCES = $(SOURCES_tta)
nodist_libtta_plugin_la_SOURCES = $(nodist_SOURCES_tta)
# Force per-target objects:
libtta_plugin_la_CFLAGS = $(AM_CFLAGS)
libtta_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libtta_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libtta_plugin_la_LIBADD = $(AM_LIBADD)
libtta_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The ty plugin
libty_plugin_la_SOURCES = $(SOURCES_ty)
nodist_libty_plugin_la_SOURCES = $(nodist_SOURCES_ty)
# Force per-target objects:
libty_plugin_la_CFLAGS = $(AM_CFLAGS)
libty_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libty_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libty_plugin_la_LIBADD = $(AM_LIBADD)
libty_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The vc1 plugin
libvc1_plugin_la_SOURCES = $(SOURCES_vc1)
nodist_libvc1_plugin_la_SOURCES = $(nodist_SOURCES_vc1)
# Force per-target objects:
libvc1_plugin_la_CFLAGS = $(AM_CFLAGS)
libvc1_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libvc1_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libvc1_plugin_la_LIBADD = $(AM_LIBADD)
libvc1_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The vobsub plugin
libvobsub_plugin_la_SOURCES = $(SOURCES_vobsub)
nodist_libvobsub_plugin_la_SOURCES = $(nodist_SOURCES_vobsub)
# Force per-target objects:
libvobsub_plugin_la_CFLAGS = $(AM_CFLAGS)
libvobsub_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libvobsub_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libvobsub_plugin_la_LIBADD = $(AM_LIBADD)
libvobsub_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The voc plugin
libvoc_plugin_la_SOURCES = $(SOURCES_voc)
nodist_libvoc_plugin_la_SOURCES = $(nodist_SOURCES_voc)
# Force per-target objects:
libvoc_plugin_la_CFLAGS = $(AM_CFLAGS)
libvoc_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libvoc_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libvoc_plugin_la_LIBADD = $(AM_LIBADD)
libvoc_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The wav plugin
libwav_plugin_la_SOURCES = $(SOURCES_wav)
nodist_libwav_plugin_la_SOURCES = $(nodist_SOURCES_wav)
# Force per-target objects:
libwav_plugin_la_CFLAGS = $(AM_CFLAGS)
libwav_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libwav_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libwav_plugin_la_LIBADD = $(AM_LIBADD)
libwav_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym

# The xa plugin
libxa_plugin_la_SOURCES = $(SOURCES_xa)
nodist_libxa_plugin_la_SOURCES = $(nodist_SOURCES_xa)
# Force per-target objects:
libxa_plugin_la_CFLAGS = $(AM_CFLAGS)
libxa_plugin_la_CXXFLAGS = $(AM_CXXFLAGS)
libxa_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS)
# Set LIBADD and DEPENDENCIES manually:
libxa_plugin_la_LIBADD = $(AM_LIBADD)
libxa_plugin_la_DEPENDENCIES = $(top_srcdir)/src/libvlccore.sym
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/modules/common.am $(srcdir)/Modules.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu modules/demux/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu modules/demux/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libvlcLTLIBRARIES: $(libvlc_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libvlcdir)" || $(MKDIR_P) "$(DESTDIR)$(libvlcdir)"
	@list='$(libvlc_LTLIBRARIES)'; test -n "$(libvlcdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libvlcdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libvlcdir)"; \
	}

uninstall-libvlcLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(libvlc_LTLIBRARIES)'; test -n "$(libvlcdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libvlcdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libvlcdir)/$$f"; \
	done

clean-libvlcLTLIBRARIES:
	-test -z "$(libvlc_LTLIBRARIES)" || rm -f $(libvlc_LTLIBRARIES)
	@list='$(libvlc_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libaiff_plugin.la: $(libaiff_plugin_la_OBJECTS) $(libaiff_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libaiff_plugin_la_LINK) -rpath $(libvlcdir) $(libaiff_plugin_la_OBJECTS) $(libaiff_plugin_la_LIBADD) $(LIBS)
libasademux_plugin.la: $(libasademux_plugin_la_OBJECTS) $(libasademux_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libasademux_plugin_la_LINK)  $(libasademux_plugin_la_OBJECTS) $(libasademux_plugin_la_LIBADD) $(LIBS)
libau_plugin.la: $(libau_plugin_la_OBJECTS) $(libau_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libau_plugin_la_LINK) -rpath $(libvlcdir) $(libau_plugin_la_OBJECTS) $(libau_plugin_la_LIBADD) $(LIBS)
libdemux_cdg_plugin.la: $(libdemux_cdg_plugin_la_OBJECTS) $(libdemux_cdg_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libdemux_cdg_plugin_la_LINK) -rpath $(libvlcdir) $(libdemux_cdg_plugin_la_OBJECTS) $(libdemux_cdg_plugin_la_LIBADD) $(LIBS)
libdemuxdump_plugin.la: $(libdemuxdump_plugin_la_OBJECTS) $(libdemuxdump_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libdemuxdump_plugin_la_LINK) -rpath $(libvlcdir) $(libdemuxdump_plugin_la_OBJECTS) $(libdemuxdump_plugin_la_LIBADD) $(LIBS)
libdirac_plugin.la: $(libdirac_plugin_la_OBJECTS) $(libdirac_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libdirac_plugin_la_LINK) -rpath $(libvlcdir) $(libdirac_plugin_la_OBJECTS) $(libdirac_plugin_la_LIBADD) $(LIBS)
libflacsys_plugin.la: $(libflacsys_plugin_la_OBJECTS) $(libflacsys_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libflacsys_plugin_la_LINK) -rpath $(libvlcdir) $(libflacsys_plugin_la_OBJECTS) $(libflacsys_plugin_la_LIBADD) $(LIBS)
libgme_plugin.la: $(libgme_plugin_la_OBJECTS) $(libgme_plugin_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libgme_plugin_la_LINK)  $(libgme_plugin_la_OBJECTS) $(libgme_plugin_la_LIBADD) $(LIBS)
libimage_plugin.la: $(libimage_plugin_la_OBJECTS) $(libimage_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libimage_plugin_la_LINK) -rpath $(libvlcdir) $(libimage_plugin_la_OBJECTS) $(libimage_plugin_la_LIBADD) $(LIBS)
liblive555_plugin.la: $(liblive555_plugin_la_OBJECTS) $(liblive555_plugin_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(liblive555_plugin_la_LINK)  $(liblive555_plugin_la_OBJECTS) $(liblive555_plugin_la_LIBADD) $(LIBS)
libmjpeg_plugin.la: $(libmjpeg_plugin_la_OBJECTS) $(libmjpeg_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libmjpeg_plugin_la_LINK) -rpath $(libvlcdir) $(libmjpeg_plugin_la_OBJECTS) $(libmjpeg_plugin_la_LIBADD) $(LIBS)
libmod_plugin.la: $(libmod_plugin_la_OBJECTS) $(libmod_plugin_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libmod_plugin_la_LINK)  $(libmod_plugin_la_OBJECTS) $(libmod_plugin_la_LIBADD) $(LIBS)
libmpc_plugin.la: $(libmpc_plugin_la_OBJECTS) $(libmpc_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libmpc_plugin_la_LINK)  $(libmpc_plugin_la_OBJECTS) $(libmpc_plugin_la_LIBADD) $(LIBS)
libnsc_plugin.la: $(libnsc_plugin_la_OBJECTS) $(libnsc_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libnsc_plugin_la_LINK) -rpath $(libvlcdir) $(libnsc_plugin_la_OBJECTS) $(libnsc_plugin_la_LIBADD) $(LIBS)
libnsv_plugin.la: $(libnsv_plugin_la_OBJECTS) $(libnsv_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libnsv_plugin_la_LINK) -rpath $(libvlcdir) $(libnsv_plugin_la_OBJECTS) $(libnsv_plugin_la_LIBADD) $(LIBS)
libnuv_plugin.la: $(libnuv_plugin_la_OBJECTS) $(libnuv_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libnuv_plugin_la_LINK) -rpath $(libvlcdir) $(libnuv_plugin_la_OBJECTS) $(libnuv_plugin_la_LIBADD) $(LIBS)
libogg_plugin.la: $(libogg_plugin_la_OBJECTS) $(libogg_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libogg_plugin_la_LINK)  $(libogg_plugin_la_OBJECTS) $(libogg_plugin_la_LIBADD) $(LIBS)
libps_plugin.la: $(libps_plugin_la_OBJECTS) $(libps_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libps_plugin_la_LINK) -rpath $(libvlcdir) $(libps_plugin_la_OBJECTS) $(libps_plugin_la_LIBADD) $(LIBS)
libpva_plugin.la: $(libpva_plugin_la_OBJECTS) $(libpva_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libpva_plugin_la_LINK) -rpath $(libvlcdir) $(libpva_plugin_la_OBJECTS) $(libpva_plugin_la_LIBADD) $(LIBS)
librawaud_plugin.la: $(librawaud_plugin_la_OBJECTS) $(librawaud_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(librawaud_plugin_la_LINK) -rpath $(libvlcdir) $(librawaud_plugin_la_OBJECTS) $(librawaud_plugin_la_LIBADD) $(LIBS)
librawdv_plugin.la: $(librawdv_plugin_la_OBJECTS) $(librawdv_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(librawdv_plugin_la_LINK) -rpath $(libvlcdir) $(librawdv_plugin_la_OBJECTS) $(librawdv_plugin_la_LIBADD) $(LIBS)
librawvid_plugin.la: $(librawvid_plugin_la_OBJECTS) $(librawvid_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(librawvid_plugin_la_LINK) -rpath $(libvlcdir) $(librawvid_plugin_la_OBJECTS) $(librawvid_plugin_la_LIBADD) $(LIBS)
libreal_plugin.la: $(libreal_plugin_la_OBJECTS) $(libreal_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libreal_plugin_la_LINK) -rpath $(libvlcdir) $(libreal_plugin_la_OBJECTS) $(libreal_plugin_la_LIBADD) $(LIBS)
libsmf_plugin.la: $(libsmf_plugin_la_OBJECTS) $(libsmf_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libsmf_plugin_la_LINK) -rpath $(libvlcdir) $(libsmf_plugin_la_OBJECTS) $(libsmf_plugin_la_LIBADD) $(LIBS)
libsubtitle_plugin.la: $(libsubtitle_plugin_la_OBJECTS) $(libsubtitle_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libsubtitle_plugin_la_LINK) -rpath $(libvlcdir) $(libsubtitle_plugin_la_OBJECTS) $(libsubtitle_plugin_la_LIBADD) $(LIBS)
libts_plugin.la: $(libts_plugin_la_OBJECTS) $(libts_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libts_plugin_la_LINK)  $(libts_plugin_la_OBJECTS) $(libts_plugin_la_LIBADD) $(LIBS)
libtta_plugin.la: $(libtta_plugin_la_OBJECTS) $(libtta_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libtta_plugin_la_LINK) -rpath $(libvlcdir) $(libtta_plugin_la_OBJECTS) $(libtta_plugin_la_LIBADD) $(LIBS)
libty_plugin.la: $(libty_plugin_la_OBJECTS) $(libty_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libty_plugin_la_LINK) -rpath $(libvlcdir) $(libty_plugin_la_OBJECTS) $(libty_plugin_la_LIBADD) $(LIBS)
libvc1_plugin.la: $(libvc1_plugin_la_OBJECTS) $(libvc1_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libvc1_plugin_la_LINK) -rpath $(libvlcdir) $(libvc1_plugin_la_OBJECTS) $(libvc1_plugin_la_LIBADD) $(LIBS)
libvobsub_plugin.la: $(libvobsub_plugin_la_OBJECTS) $(libvobsub_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libvobsub_plugin_la_LINK) -rpath $(libvlcdir) $(libvobsub_plugin_la_OBJECTS) $(libvobsub_plugin_la_LIBADD) $(LIBS)
libvoc_plugin.la: $(libvoc_plugin_la_OBJECTS) $(libvoc_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libvoc_plugin_la_LINK) -rpath $(libvlcdir) $(libvoc_plugin_la_OBJECTS) $(libvoc_plugin_la_LIBADD) $(LIBS)
libwav_plugin.la: $(libwav_plugin_la_OBJECTS) $(libwav_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libwav_plugin_la_LINK) -rpath $(libvlcdir) $(libwav_plugin_la_OBJECTS) $(libwav_plugin_la_LIBADD) $(LIBS)
libxa_plugin.la: $(libxa_plugin_la_OBJECTS) $(libxa_plugin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libxa_plugin_la_LINK) -rpath $(libvlcdir) $(libxa_plugin_la_OBJECTS) $(libxa_plugin_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libaiff_plugin_la-aiff.Plo
include ./$(DEPDIR)/libasademux_plugin_la-asademux.Plo
include ./$(DEPDIR)/libasademux_plugin_la-subtitle_asa.Plo
include ./$(DEPDIR)/libau_plugin_la-au.Plo
include ./$(DEPDIR)/libdemux_cdg_plugin_la-cdg.Plo
include ./$(DEPDIR)/libdemuxdump_plugin_la-demuxdump.Plo
include ./$(DEPDIR)/libdirac_plugin_la-dirac.Plo
include ./$(DEPDIR)/libflacsys_plugin_la-flac.Plo
include ./$(DEPDIR)/libgme_plugin_la-gme.Plo
include ./$(DEPDIR)/libimage_plugin_la-image.Plo
include ./$(DEPDIR)/liblive555_plugin_la-asf.Plo
include ./$(DEPDIR)/liblive555_plugin_la-buffer.Plo
include ./$(DEPDIR)/liblive555_plugin_la-live555.Plo
include ./$(DEPDIR)/libmjpeg_plugin_la-mjpeg.Plo
include ./$(DEPDIR)/libmod_plugin_la-dummy.Plo
include ./$(DEPDIR)/libmod_plugin_la-mod.Plo
include ./$(DEPDIR)/libmpc_plugin_la-mpc.Plo
include ./$(DEPDIR)/libnsc_plugin_la-nsc.Plo
include ./$(DEPDIR)/libnsv_plugin_la-nsv.Plo
include ./$(DEPDIR)/libnuv_plugin_la-nuv.Plo
include ./$(DEPDIR)/libogg_plugin_la-kate_categories.Plo
include ./$(DEPDIR)/libogg_plugin_la-ogg.Plo
include ./$(DEPDIR)/libps_plugin_la-ps.Plo
include ./$(DEPDIR)/libpva_plugin_la-pva.Plo
include ./$(DEPDIR)/librawaud_plugin_la-rawaud.Plo
include ./$(DEPDIR)/librawdv_plugin_la-rawdv.Plo
include ./$(DEPDIR)/librawvid_plugin_la-rawvid.Plo
include ./$(DEPDIR)/libreal_plugin_la-real.Plo
include ./$(DEPDIR)/libsmf_plugin_la-smf.Plo
include ./$(DEPDIR)/libsubtitle_plugin_la-subtitle.Plo
include ./$(DEPDIR)/libts_plugin_la-csa.Plo
include ./$(DEPDIR)/libts_plugin_la-ts.Plo
include ./$(DEPDIR)/libtta_plugin_la-tta.Plo
include ./$(DEPDIR)/libty_plugin_la-ty.Plo
include ./$(DEPDIR)/libvc1_plugin_la-vc1.Plo
include ./$(DEPDIR)/libvobsub_plugin_la-vobsub.Plo
include ./$(DEPDIR)/libvoc_plugin_la-voc.Plo
include ./$(DEPDIR)/libwav_plugin_la-wav.Plo
include ./$(DEPDIR)/libxa_plugin_la-xa.Plo

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libaiff_plugin_la-aiff.lo: aiff.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaiff_plugin_la_CFLAGS) $(CFLAGS) -MT libaiff_plugin_la-aiff.lo -MD -MP -MF $(DEPDIR)/libaiff_plugin_la-aiff.Tpo -c -o libaiff_plugin_la-aiff.lo `test -f 'aiff.c' || echo '$(srcdir)/'`aiff.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libaiff_plugin_la-aiff.Tpo $(DEPDIR)/libaiff_plugin_la-aiff.Plo
#	$(AM_V_CC) \
#	source='aiff.c' object='libaiff_plugin_la-aiff.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaiff_plugin_la_CFLAGS) $(CFLAGS) -c -o libaiff_plugin_la-aiff.lo `test -f 'aiff.c' || echo '$(srcdir)/'`aiff.c

libasademux_plugin_la-subtitle_asa.lo: subtitle_asa.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libasademux_plugin_la_CFLAGS) $(CFLAGS) -MT libasademux_plugin_la-subtitle_asa.lo -MD -MP -MF $(DEPDIR)/libasademux_plugin_la-subtitle_asa.Tpo -c -o libasademux_plugin_la-subtitle_asa.lo `test -f 'subtitle_asa.c' || echo '$(srcdir)/'`subtitle_asa.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libasademux_plugin_la-subtitle_asa.Tpo $(DEPDIR)/libasademux_plugin_la-subtitle_asa.Plo
#	$(AM_V_CC) \
#	source='subtitle_asa.c' object='libasademux_plugin_la-subtitle_asa.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libasademux_plugin_la_CFLAGS) $(CFLAGS) -c -o libasademux_plugin_la-subtitle_asa.lo `test -f 'subtitle_asa.c' || echo '$(srcdir)/'`subtitle_asa.c

libasademux_plugin_la-asademux.lo: asademux.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libasademux_plugin_la_CFLAGS) $(CFLAGS) -MT libasademux_plugin_la-asademux.lo -MD -MP -MF $(DEPDIR)/libasademux_plugin_la-asademux.Tpo -c -o libasademux_plugin_la-asademux.lo `test -f 'asademux.c' || echo '$(srcdir)/'`asademux.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libasademux_plugin_la-asademux.Tpo $(DEPDIR)/libasademux_plugin_la-asademux.Plo
#	$(AM_V_CC) \
#	source='asademux.c' object='libasademux_plugin_la-asademux.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libasademux_plugin_la_CFLAGS) $(CFLAGS) -c -o libasademux_plugin_la-asademux.lo `test -f 'asademux.c' || echo '$(srcdir)/'`asademux.c

libau_plugin_la-au.lo: au.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libau_plugin_la_CFLAGS) $(CFLAGS) -MT libau_plugin_la-au.lo -MD -MP -MF $(DEPDIR)/libau_plugin_la-au.Tpo -c -o libau_plugin_la-au.lo `test -f 'au.c' || echo '$(srcdir)/'`au.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libau_plugin_la-au.Tpo $(DEPDIR)/libau_plugin_la-au.Plo
#	$(AM_V_CC) \
#	source='au.c' object='libau_plugin_la-au.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libau_plugin_la_CFLAGS) $(CFLAGS) -c -o libau_plugin_la-au.lo `test -f 'au.c' || echo '$(srcdir)/'`au.c

libdemux_cdg_plugin_la-cdg.lo: cdg.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdemux_cdg_plugin_la_CFLAGS) $(CFLAGS) -MT libdemux_cdg_plugin_la-cdg.lo -MD -MP -MF $(DEPDIR)/libdemux_cdg_plugin_la-cdg.Tpo -c -o libdemux_cdg_plugin_la-cdg.lo `test -f 'cdg.c' || echo '$(srcdir)/'`cdg.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libdemux_cdg_plugin_la-cdg.Tpo $(DEPDIR)/libdemux_cdg_plugin_la-cdg.Plo
#	$(AM_V_CC) \
#	source='cdg.c' object='libdemux_cdg_plugin_la-cdg.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdemux_cdg_plugin_la_CFLAGS) $(CFLAGS) -c -o libdemux_cdg_plugin_la-cdg.lo `test -f 'cdg.c' || echo '$(srcdir)/'`cdg.c

libdemuxdump_plugin_la-demuxdump.lo: demuxdump.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdemuxdump_plugin_la_CFLAGS) $(CFLAGS) -MT libdemuxdump_plugin_la-demuxdump.lo -MD -MP -MF $(DEPDIR)/libdemuxdump_plugin_la-demuxdump.Tpo -c -o libdemuxdump_plugin_la-demuxdump.lo `test -f 'demuxdump.c' || echo '$(srcdir)/'`demuxdump.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libdemuxdump_plugin_la-demuxdump.Tpo $(DEPDIR)/libdemuxdump_plugin_la-demuxdump.Plo
#	$(AM_V_CC) \
#	source='demuxdump.c' object='libdemuxdump_plugin_la-demuxdump.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdemuxdump_plugin_la_CFLAGS) $(CFLAGS) -c -o libdemuxdump_plugin_la-demuxdump.lo `test -f 'demuxdump.c' || echo '$(srcdir)/'`demuxdump.c

libdirac_plugin_la-dirac.lo: dirac.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdirac_plugin_la_CFLAGS) $(CFLAGS) -MT libdirac_plugin_la-dirac.lo -MD -MP -MF $(DEPDIR)/libdirac_plugin_la-dirac.Tpo -c -o libdirac_plugin_la-dirac.lo `test -f 'dirac.c' || echo '$(srcdir)/'`dirac.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libdirac_plugin_la-dirac.Tpo $(DEPDIR)/libdirac_plugin_la-dirac.Plo
#	$(AM_V_CC) \
#	source='dirac.c' object='libdirac_plugin_la-dirac.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdirac_plugin_la_CFLAGS) $(CFLAGS) -c -o libdirac_plugin_la-dirac.lo `test -f 'dirac.c' || echo '$(srcdir)/'`dirac.c

libflacsys_plugin_la-flac.lo: flac.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libflacsys_plugin_la_CFLAGS) $(CFLAGS) -MT libflacsys_plugin_la-flac.lo -MD -MP -MF $(DEPDIR)/libflacsys_plugin_la-flac.Tpo -c -o libflacsys_plugin_la-flac.lo `test -f 'flac.c' || echo '$(srcdir)/'`flac.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libflacsys_plugin_la-flac.Tpo $(DEPDIR)/libflacsys_plugin_la-flac.Plo
#	$(AM_V_CC) \
#	source='flac.c' object='libflacsys_plugin_la-flac.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libflacsys_plugin_la_CFLAGS) $(CFLAGS) -c -o libflacsys_plugin_la-flac.lo `test -f 'flac.c' || echo '$(srcdir)/'`flac.c

libimage_plugin_la-image.lo: image.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libimage_plugin_la_CFLAGS) $(CFLAGS) -MT libimage_plugin_la-image.lo -MD -MP -MF $(DEPDIR)/libimage_plugin_la-image.Tpo -c -o libimage_plugin_la-image.lo `test -f 'image.c' || echo '$(srcdir)/'`image.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libimage_plugin_la-image.Tpo $(DEPDIR)/libimage_plugin_la-image.Plo
#	$(AM_V_CC) \
#	source='image.c' object='libimage_plugin_la-image.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libimage_plugin_la_CFLAGS) $(CFLAGS) -c -o libimage_plugin_la-image.lo `test -f 'image.c' || echo '$(srcdir)/'`image.c

liblive555_plugin_la-asf.lo: ../access/mms/asf.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblive555_plugin_la_CFLAGS) $(CFLAGS) -MT liblive555_plugin_la-asf.lo -MD -MP -MF $(DEPDIR)/liblive555_plugin_la-asf.Tpo -c -o liblive555_plugin_la-asf.lo `test -f '../access/mms/asf.c' || echo '$(srcdir)/'`../access/mms/asf.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblive555_plugin_la-asf.Tpo $(DEPDIR)/liblive555_plugin_la-asf.Plo
#	$(AM_V_CC) \
#	source='../access/mms/asf.c' object='liblive555_plugin_la-asf.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblive555_plugin_la_CFLAGS) $(CFLAGS) -c -o liblive555_plugin_la-asf.lo `test -f '../access/mms/asf.c' || echo '$(srcdir)/'`../access/mms/asf.c

liblive555_plugin_la-buffer.lo: ../access/mms/buffer.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblive555_plugin_la_CFLAGS) $(CFLAGS) -MT liblive555_plugin_la-buffer.lo -MD -MP -MF $(DEPDIR)/liblive555_plugin_la-buffer.Tpo -c -o liblive555_plugin_la-buffer.lo `test -f '../access/mms/buffer.c' || echo '$(srcdir)/'`../access/mms/buffer.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblive555_plugin_la-buffer.Tpo $(DEPDIR)/liblive555_plugin_la-buffer.Plo
#	$(AM_V_CC) \
#	source='../access/mms/buffer.c' object='liblive555_plugin_la-buffer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblive555_plugin_la_CFLAGS) $(CFLAGS) -c -o liblive555_plugin_la-buffer.lo `test -f '../access/mms/buffer.c' || echo '$(srcdir)/'`../access/mms/buffer.c

libmjpeg_plugin_la-mjpeg.lo: mjpeg.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmjpeg_plugin_la_CFLAGS) $(CFLAGS) -MT libmjpeg_plugin_la-mjpeg.lo -MD -MP -MF $(DEPDIR)/libmjpeg_plugin_la-mjpeg.Tpo -c -o libmjpeg_plugin_la-mjpeg.lo `test -f 'mjpeg.c' || echo '$(srcdir)/'`mjpeg.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmjpeg_plugin_la-mjpeg.Tpo $(DEPDIR)/libmjpeg_plugin_la-mjpeg.Plo
#	$(AM_V_CC) \
#	source='mjpeg.c' object='libmjpeg_plugin_la-mjpeg.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmjpeg_plugin_la_CFLAGS) $(CFLAGS) -c -o libmjpeg_plugin_la-mjpeg.lo `test -f 'mjpeg.c' || echo '$(srcdir)/'`mjpeg.c

libmod_plugin_la-mod.lo: mod.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmod_plugin_la_CFLAGS) $(CFLAGS) -MT libmod_plugin_la-mod.lo -MD -MP -MF $(DEPDIR)/libmod_plugin_la-mod.Tpo -c -o libmod_plugin_la-mod.lo `test -f 'mod.c' || echo '$(srcdir)/'`mod.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmod_plugin_la-mod.Tpo $(DEPDIR)/libmod_plugin_la-mod.Plo
#	$(AM_V_CC) \
#	source='mod.c' object='libmod_plugin_la-mod.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmod_plugin_la_CFLAGS) $(CFLAGS) -c -o libmod_plugin_la-mod.lo `test -f 'mod.c' || echo '$(srcdir)/'`mod.c

libmpc_plugin_la-mpc.lo: mpc.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpc_plugin_la_CFLAGS) $(CFLAGS) -MT libmpc_plugin_la-mpc.lo -MD -MP -MF $(DEPDIR)/libmpc_plugin_la-mpc.Tpo -c -o libmpc_plugin_la-mpc.lo `test -f 'mpc.c' || echo '$(srcdir)/'`mpc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmpc_plugin_la-mpc.Tpo $(DEPDIR)/libmpc_plugin_la-mpc.Plo
#	$(AM_V_CC) \
#	source='mpc.c' object='libmpc_plugin_la-mpc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpc_plugin_la_CFLAGS) $(CFLAGS) -c -o libmpc_plugin_la-mpc.lo `test -f 'mpc.c' || echo '$(srcdir)/'`mpc.c

libnsc_plugin_la-nsc.lo: nsc.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnsc_plugin_la_CFLAGS) $(CFLAGS) -MT libnsc_plugin_la-nsc.lo -MD -MP -MF $(DEPDIR)/libnsc_plugin_la-nsc.Tpo -c -o libnsc_plugin_la-nsc.lo `test -f 'nsc.c' || echo '$(srcdir)/'`nsc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnsc_plugin_la-nsc.Tpo $(DEPDIR)/libnsc_plugin_la-nsc.Plo
#	$(AM_V_CC) \
#	source='nsc.c' object='libnsc_plugin_la-nsc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnsc_plugin_la_CFLAGS) $(CFLAGS) -c -o libnsc_plugin_la-nsc.lo `test -f 'nsc.c' || echo '$(srcdir)/'`nsc.c

libnsv_plugin_la-nsv.lo: nsv.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnsv_plugin_la_CFLAGS) $(CFLAGS) -MT libnsv_plugin_la-nsv.lo -MD -MP -MF $(DEPDIR)/libnsv_plugin_la-nsv.Tpo -c -o libnsv_plugin_la-nsv.lo `test -f 'nsv.c' || echo '$(srcdir)/'`nsv.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnsv_plugin_la-nsv.Tpo $(DEPDIR)/libnsv_plugin_la-nsv.Plo
#	$(AM_V_CC) \
#	source='nsv.c' object='libnsv_plugin_la-nsv.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnsv_plugin_la_CFLAGS) $(CFLAGS) -c -o libnsv_plugin_la-nsv.lo `test -f 'nsv.c' || echo '$(srcdir)/'`nsv.c

libnuv_plugin_la-nuv.lo: nuv.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnuv_plugin_la_CFLAGS) $(CFLAGS) -MT libnuv_plugin_la-nuv.lo -MD -MP -MF $(DEPDIR)/libnuv_plugin_la-nuv.Tpo -c -o libnuv_plugin_la-nuv.lo `test -f 'nuv.c' || echo '$(srcdir)/'`nuv.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libnuv_plugin_la-nuv.Tpo $(DEPDIR)/libnuv_plugin_la-nuv.Plo
#	$(AM_V_CC) \
#	source='nuv.c' object='libnuv_plugin_la-nuv.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnuv_plugin_la_CFLAGS) $(CFLAGS) -c -o libnuv_plugin_la-nuv.lo `test -f 'nuv.c' || echo '$(srcdir)/'`nuv.c

libogg_plugin_la-ogg.lo: ogg.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libogg_plugin_la_CFLAGS) $(CFLAGS) -MT libogg_plugin_la-ogg.lo -MD -MP -MF $(DEPDIR)/libogg_plugin_la-ogg.Tpo -c -o libogg_plugin_la-ogg.lo `test -f 'ogg.c' || echo '$(srcdir)/'`ogg.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libogg_plugin_la-ogg.Tpo $(DEPDIR)/libogg_plugin_la-ogg.Plo
#	$(AM_V_CC) \
#	source='ogg.c' object='libogg_plugin_la-ogg.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libogg_plugin_la_CFLAGS) $(CFLAGS) -c -o libogg_plugin_la-ogg.lo `test -f 'ogg.c' || echo '$(srcdir)/'`ogg.c

libogg_plugin_la-kate_categories.lo: kate_categories.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libogg_plugin_la_CFLAGS) $(CFLAGS) -MT libogg_plugin_la-kate_categories.lo -MD -MP -MF $(DEPDIR)/libogg_plugin_la-kate_categories.Tpo -c -o libogg_plugin_la-kate_categories.lo `test -f 'kate_categories.c' || echo '$(srcdir)/'`kate_categories.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libogg_plugin_la-kate_categories.Tpo $(DEPDIR)/libogg_plugin_la-kate_categories.Plo
#	$(AM_V_CC) \
#	source='kate_categories.c' object='libogg_plugin_la-kate_categories.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libogg_plugin_la_CFLAGS) $(CFLAGS) -c -o libogg_plugin_la-kate_categories.lo `test -f 'kate_categories.c' || echo '$(srcdir)/'`kate_categories.c

libps_plugin_la-ps.lo: ps.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libps_plugin_la_CFLAGS) $(CFLAGS) -MT libps_plugin_la-ps.lo -MD -MP -MF $(DEPDIR)/libps_plugin_la-ps.Tpo -c -o libps_plugin_la-ps.lo `test -f 'ps.c' || echo '$(srcdir)/'`ps.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libps_plugin_la-ps.Tpo $(DEPDIR)/libps_plugin_la-ps.Plo
#	$(AM_V_CC) \
#	source='ps.c' object='libps_plugin_la-ps.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libps_plugin_la_CFLAGS) $(CFLAGS) -c -o libps_plugin_la-ps.lo `test -f 'ps.c' || echo '$(srcdir)/'`ps.c

libpva_plugin_la-pva.lo: pva.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpva_plugin_la_CFLAGS) $(CFLAGS) -MT libpva_plugin_la-pva.lo -MD -MP -MF $(DEPDIR)/libpva_plugin_la-pva.Tpo -c -o libpva_plugin_la-pva.lo `test -f 'pva.c' || echo '$(srcdir)/'`pva.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpva_plugin_la-pva.Tpo $(DEPDIR)/libpva_plugin_la-pva.Plo
#	$(AM_V_CC) \
#	source='pva.c' object='libpva_plugin_la-pva.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpva_plugin_la_CFLAGS) $(CFLAGS) -c -o libpva_plugin_la-pva.lo `test -f 'pva.c' || echo '$(srcdir)/'`pva.c

librawaud_plugin_la-rawaud.lo: rawaud.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(librawaud_plugin_la_CFLAGS) $(CFLAGS) -MT librawaud_plugin_la-rawaud.lo -MD -MP -MF $(DEPDIR)/librawaud_plugin_la-rawaud.Tpo -c -o librawaud_plugin_la-rawaud.lo `test -f 'rawaud.c' || echo '$(srcdir)/'`rawaud.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/librawaud_plugin_la-rawaud.Tpo $(DEPDIR)/librawaud_plugin_la-rawaud.Plo
#	$(AM_V_CC) \
#	source='rawaud.c' object='librawaud_plugin_la-rawaud.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(librawaud_plugin_la_CFLAGS) $(CFLAGS) -c -o librawaud_plugin_la-rawaud.lo `test -f 'rawaud.c' || echo '$(srcdir)/'`rawaud.c

librawdv_plugin_la-rawdv.lo: rawdv.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(librawdv_plugin_la_CFLAGS) $(CFLAGS) -MT librawdv_plugin_la-rawdv.lo -MD -MP -MF $(DEPDIR)/librawdv_plugin_la-rawdv.Tpo -c -o librawdv_plugin_la-rawdv.lo `test -f 'rawdv.c' || echo '$(srcdir)/'`rawdv.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/librawdv_plugin_la-rawdv.Tpo $(DEPDIR)/librawdv_plugin_la-rawdv.Plo
#	$(AM_V_CC) \
#	source='rawdv.c' object='librawdv_plugin_la-rawdv.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(librawdv_plugin_la_CFLAGS) $(CFLAGS) -c -o librawdv_plugin_la-rawdv.lo `test -f 'rawdv.c' || echo '$(srcdir)/'`rawdv.c

librawvid_plugin_la-rawvid.lo: rawvid.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(librawvid_plugin_la_CFLAGS) $(CFLAGS) -MT librawvid_plugin_la-rawvid.lo -MD -MP -MF $(DEPDIR)/librawvid_plugin_la-rawvid.Tpo -c -o librawvid_plugin_la-rawvid.lo `test -f 'rawvid.c' || echo '$(srcdir)/'`rawvid.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/librawvid_plugin_la-rawvid.Tpo $(DEPDIR)/librawvid_plugin_la-rawvid.Plo
#	$(AM_V_CC) \
#	source='rawvid.c' object='librawvid_plugin_la-rawvid.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(librawvid_plugin_la_CFLAGS) $(CFLAGS) -c -o librawvid_plugin_la-rawvid.lo `test -f 'rawvid.c' || echo '$(srcdir)/'`rawvid.c

libreal_plugin_la-real.lo: real.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libreal_plugin_la_CFLAGS) $(CFLAGS) -MT libreal_plugin_la-real.lo -MD -MP -MF $(DEPDIR)/libreal_plugin_la-real.Tpo -c -o libreal_plugin_la-real.lo `test -f 'real.c' || echo '$(srcdir)/'`real.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libreal_plugin_la-real.Tpo $(DEPDIR)/libreal_plugin_la-real.Plo
#	$(AM_V_CC) \
#	source='real.c' object='libreal_plugin_la-real.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libreal_plugin_la_CFLAGS) $(CFLAGS) -c -o libreal_plugin_la-real.lo `test -f 'real.c' || echo '$(srcdir)/'`real.c

libsmf_plugin_la-smf.lo: smf.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsmf_plugin_la_CFLAGS) $(CFLAGS) -MT libsmf_plugin_la-smf.lo -MD -MP -MF $(DEPDIR)/libsmf_plugin_la-smf.Tpo -c -o libsmf_plugin_la-smf.lo `test -f 'smf.c' || echo '$(srcdir)/'`smf.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsmf_plugin_la-smf.Tpo $(DEPDIR)/libsmf_plugin_la-smf.Plo
#	$(AM_V_CC) \
#	source='smf.c' object='libsmf_plugin_la-smf.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsmf_plugin_la_CFLAGS) $(CFLAGS) -c -o libsmf_plugin_la-smf.lo `test -f 'smf.c' || echo '$(srcdir)/'`smf.c

libsubtitle_plugin_la-subtitle.lo: subtitle.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsubtitle_plugin_la_CFLAGS) $(CFLAGS) -MT libsubtitle_plugin_la-subtitle.lo -MD -MP -MF $(DEPDIR)/libsubtitle_plugin_la-subtitle.Tpo -c -o libsubtitle_plugin_la-subtitle.lo `test -f 'subtitle.c' || echo '$(srcdir)/'`subtitle.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsubtitle_plugin_la-subtitle.Tpo $(DEPDIR)/libsubtitle_plugin_la-subtitle.Plo
#	$(AM_V_CC) \
#	source='subtitle.c' object='libsubtitle_plugin_la-subtitle.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsubtitle_plugin_la_CFLAGS) $(CFLAGS) -c -o libsubtitle_plugin_la-subtitle.lo `test -f 'subtitle.c' || echo '$(srcdir)/'`subtitle.c

libts_plugin_la-ts.lo: ts.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libts_plugin_la_CFLAGS) $(CFLAGS) -MT libts_plugin_la-ts.lo -MD -MP -MF $(DEPDIR)/libts_plugin_la-ts.Tpo -c -o libts_plugin_la-ts.lo `test -f 'ts.c' || echo '$(srcdir)/'`ts.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libts_plugin_la-ts.Tpo $(DEPDIR)/libts_plugin_la-ts.Plo
#	$(AM_V_CC) \
#	source='ts.c' object='libts_plugin_la-ts.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libts_plugin_la_CFLAGS) $(CFLAGS) -c -o libts_plugin_la-ts.lo `test -f 'ts.c' || echo '$(srcdir)/'`ts.c

libts_plugin_la-csa.lo: ../mux/mpeg/csa.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libts_plugin_la_CFLAGS) $(CFLAGS) -MT libts_plugin_la-csa.lo -MD -MP -MF $(DEPDIR)/libts_plugin_la-csa.Tpo -c -o libts_plugin_la-csa.lo `test -f '../mux/mpeg/csa.c' || echo '$(srcdir)/'`../mux/mpeg/csa.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libts_plugin_la-csa.Tpo $(DEPDIR)/libts_plugin_la-csa.Plo
#	$(AM_V_CC) \
#	source='../mux/mpeg/csa.c' object='libts_plugin_la-csa.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libts_plugin_la_CFLAGS) $(CFLAGS) -c -o libts_plugin_la-csa.lo `test -f '../mux/mpeg/csa.c' || echo '$(srcdir)/'`../mux/mpeg/csa.c

libtta_plugin_la-tta.lo: tta.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtta_plugin_la_CFLAGS) $(CFLAGS) -MT libtta_plugin_la-tta.lo -MD -MP -MF $(DEPDIR)/libtta_plugin_la-tta.Tpo -c -o libtta_plugin_la-tta.lo `test -f 'tta.c' || echo '$(srcdir)/'`tta.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtta_plugin_la-tta.Tpo $(DEPDIR)/libtta_plugin_la-tta.Plo
#	$(AM_V_CC) \
#	source='tta.c' object='libtta_plugin_la-tta.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtta_plugin_la_CFLAGS) $(CFLAGS) -c -o libtta_plugin_la-tta.lo `test -f 'tta.c' || echo '$(srcdir)/'`tta.c

libty_plugin_la-ty.lo: ty.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libty_plugin_la_CFLAGS) $(CFLAGS) -MT libty_plugin_la-ty.lo -MD -MP -MF $(DEPDIR)/libty_plugin_la-ty.Tpo -c -o libty_plugin_la-ty.lo `test -f 'ty.c' || echo '$(srcdir)/'`ty.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libty_plugin_la-ty.Tpo $(DEPDIR)/libty_plugin_la-ty.Plo
#	$(AM_V_CC) \
#	source='ty.c' object='libty_plugin_la-ty.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libty_plugin_la_CFLAGS) $(CFLAGS) -c -o libty_plugin_la-ty.lo `test -f 'ty.c' || echo '$(srcdir)/'`ty.c

libvc1_plugin_la-vc1.lo: vc1.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvc1_plugin_la_CFLAGS) $(CFLAGS) -MT libvc1_plugin_la-vc1.lo -MD -MP -MF $(DEPDIR)/libvc1_plugin_la-vc1.Tpo -c -o libvc1_plugin_la-vc1.lo `test -f 'vc1.c' || echo '$(srcdir)/'`vc1.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvc1_plugin_la-vc1.Tpo $(DEPDIR)/libvc1_plugin_la-vc1.Plo
#	$(AM_V_CC) \
#	source='vc1.c' object='libvc1_plugin_la-vc1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvc1_plugin_la_CFLAGS) $(CFLAGS) -c -o libvc1_plugin_la-vc1.lo `test -f 'vc1.c' || echo '$(srcdir)/'`vc1.c

libvobsub_plugin_la-vobsub.lo: vobsub.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvobsub_plugin_la_CFLAGS) $(CFLAGS) -MT libvobsub_plugin_la-vobsub.lo -MD -MP -MF $(DEPDIR)/libvobsub_plugin_la-vobsub.Tpo -c -o libvobsub_plugin_la-vobsub.lo `test -f 'vobsub.c' || echo '$(srcdir)/'`vobsub.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvobsub_plugin_la-vobsub.Tpo $(DEPDIR)/libvobsub_plugin_la-vobsub.Plo
#	$(AM_V_CC) \
#	source='vobsub.c' object='libvobsub_plugin_la-vobsub.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvobsub_plugin_la_CFLAGS) $(CFLAGS) -c -o libvobsub_plugin_la-vobsub.lo `test -f 'vobsub.c' || echo '$(srcdir)/'`vobsub.c

libvoc_plugin_la-voc.lo: voc.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvoc_plugin_la_CFLAGS) $(CFLAGS) -MT libvoc_plugin_la-voc.lo -MD -MP -MF $(DEPDIR)/libvoc_plugin_la-voc.Tpo -c -o libvoc_plugin_la-voc.lo `test -f 'voc.c' || echo '$(srcdir)/'`voc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvoc_plugin_la-voc.Tpo $(DEPDIR)/libvoc_plugin_la-voc.Plo
#	$(AM_V_CC) \
#	source='voc.c' object='libvoc_plugin_la-voc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvoc_plugin_la_CFLAGS) $(CFLAGS) -c -o libvoc_plugin_la-voc.lo `test -f 'voc.c' || echo '$(srcdir)/'`voc.c

libwav_plugin_la-wav.lo: wav.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwav_plugin_la_CFLAGS) $(CFLAGS) -MT libwav_plugin_la-wav.lo -MD -MP -MF $(DEPDIR)/libwav_plugin_la-wav.Tpo -c -o libwav_plugin_la-wav.lo `test -f 'wav.c' || echo '$(srcdir)/'`wav.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libwav_plugin_la-wav.Tpo $(DEPDIR)/libwav_plugin_la-wav.Plo
#	$(AM_V_CC) \
#	source='wav.c' object='libwav_plugin_la-wav.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwav_plugin_la_CFLAGS) $(CFLAGS) -c -o libwav_plugin_la-wav.lo `test -f 'wav.c' || echo '$(srcdir)/'`wav.c

libxa_plugin_la-xa.lo: xa.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxa_plugin_la_CFLAGS) $(CFLAGS) -MT libxa_plugin_la-xa.lo -MD -MP -MF $(DEPDIR)/libxa_plugin_la-xa.Tpo -c -o libxa_plugin_la-xa.lo `test -f 'xa.c' || echo '$(srcdir)/'`xa.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libxa_plugin_la-xa.Tpo $(DEPDIR)/libxa_plugin_la-xa.Plo
#	$(AM_V_CC) \
#	source='xa.c' object='libxa_plugin_la-xa.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxa_plugin_la_CFLAGS) $(CFLAGS) -c -o libxa_plugin_la-xa.lo `test -f 'xa.c' || echo '$(srcdir)/'`xa.c

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

libgme_plugin_la-gme.lo: gme.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgme_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libgme_plugin_la-gme.lo -MD -MP -MF $(DEPDIR)/libgme_plugin_la-gme.Tpo -c -o libgme_plugin_la-gme.lo `test -f 'gme.cpp' || echo '$(srcdir)/'`gme.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgme_plugin_la-gme.Tpo $(DEPDIR)/libgme_plugin_la-gme.Plo
#	$(AM_V_CXX) \
#	source='gme.cpp' object='libgme_plugin_la-gme.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgme_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libgme_plugin_la-gme.lo `test -f 'gme.cpp' || echo '$(srcdir)/'`gme.cpp

liblive555_plugin_la-live555.lo: live555.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblive555_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT liblive555_plugin_la-live555.lo -MD -MP -MF $(DEPDIR)/liblive555_plugin_la-live555.Tpo -c -o liblive555_plugin_la-live555.lo `test -f 'live555.cpp' || echo '$(srcdir)/'`live555.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblive555_plugin_la-live555.Tpo $(DEPDIR)/liblive555_plugin_la-live555.Plo
#	$(AM_V_CXX) \
#	source='live555.cpp' object='liblive555_plugin_la-live555.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblive555_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o liblive555_plugin_la-live555.lo `test -f 'live555.cpp' || echo '$(srcdir)/'`live555.cpp

libmod_plugin_la-dummy.lo: dummy.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmod_plugin_la_CXXFLAGS) $(CXXFLAGS) -MT libmod_plugin_la-dummy.lo -MD -MP -MF $(DEPDIR)/libmod_plugin_la-dummy.Tpo -c -o libmod_plugin_la-dummy.lo `test -f 'dummy.cpp' || echo '$(srcdir)/'`dummy.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmod_plugin_la-dummy.Tpo $(DEPDIR)/libmod_plugin_la-dummy.Plo
#	$(AM_V_CXX) \
#	source='dummy.cpp' object='libmod_plugin_la-dummy.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmod_plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o libmod_plugin_la-dummy.lo `test -f 'dummy.cpp' || echo '$(srcdir)/'`dummy.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(LTLIBRARIES)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libvlcdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-generic clean-libtool clean-libvlcLTLIBRARIES \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-libvlcLTLIBRARIES

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-libvlcLTLIBRARIES

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) all check \
	ctags-recursive install install-am install-strip \
	tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-generic clean-libtool \
	clean-libvlcLTLIBRARIES ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libvlcLTLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-libvlcLTLIBRARIES


dummy.cpp:
	touch dummy.cpp

$(srcdir)/Makefile.am: $(srcdir)/Modules.am $(top_srcdir)/modules/genmf
	$(AM_V_GEN)cd \$(top_srcdir) && \$(SHELL) modules/genmf $(dir)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
